{"version":3,"file":"js/695.49809888.js","mappings":"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,EAAG,eAAe,CAAC4B,IAAIA,EAAI1B,MAAM,CAAC,MAAQiC,EAAKb,QAAQ,CAACxB,EAAIgC,GAAGhC,EAAIiC,GAAGI,EAAKjB,MAAM,MAAM,KAAI,EAAE,KAAI,EAAE,IAAG,IAAI,EACnnC,EACIE,EAAkB,GCFtB,G,QAAA,CACI,CACIE,MAAO,IACPJ,KAAM,UACNc,aAAc,CACV,CACId,KAAM,OACNc,aAAc,CACV,CACId,KAAM,SACNI,MAAO,MACPc,IAAK,qCAET,CACIlB,KAAM,OACNI,MAAO,MACPc,IAAK,iCAET,CACIlB,KAAM,SACNI,MAAO,MACPc,IAAK,sDAIjB,CACIlB,KAAM,OACNc,aAAc,CACV,CACId,KAAM,SACNI,MAAO,MACPc,IAAK,gDAET,CACIlB,KAAM,OACNI,MAAO,MACPc,IAAK,+CAET,CACIlB,KAAM,SACNI,MAAO,MACPc,IAAK,qDAMzB,CACId,MAAO,IACPJ,KAAM,OACNc,aAAc,CACV,CACIA,aAAc,CACV,CACId,KAAM,YACNI,MAAO,MACPc,IAAK,oCAET,CACIlB,KAAM,QACNI,MAAO,MACPc,IAAK,wCAET,CACIlB,KAAM,iBACNI,MAAO,MACPc,IAAK,gDAET,CACIlB,KAAM,aACNI,MAAO,MACPc,IAAK,gEAET,CACIlB,KAAM,cACNI,MAAO,MACPc,IAAK,yCAMzB,CACId,MAAO,IACPJ,KAAM,OACNc,aAAc,CACV,CACIA,aAAc,CACV,CACId,KAAM,MACNI,MAAO,MACPc,IAAK,gDAMzB,CACId,MAAO,IACPJ,KAAM,OACNc,aAAc,CACV,CACIA,aAAc,CACV,CACId,KAAM,UACNI,MAAO,MACPc,IAAK,gCAMzB,CACId,MAAO,IACPJ,KAAM,aACNc,aAAc,CACV,CACIA,aAAc,CACV,CACId,KAAM,SACNI,MAAO,MACPc,IAAK,6DAET,CACIlB,KAAM,SACNI,MAAO,MACPc,IAAK,qEAET,CACIlB,KAAM,UACNI,MAAO,MACPc,IAAK,8CAMzB,CACId,MAAO,IACPJ,KAAM,SACNc,aAAc,CACV,CACIA,aAAc,CACV,CACId,KAAM,WACNI,MAAO,MACPc,IAAK,4CAET,CACIlB,KAAM,YACNI,MAAO,MACPc,IAAK,0CAET,CACIlB,KAAM,YACNI,MAAO,MACPc,IAAK,8BAET,CACIlB,KAAM,YACNI,MAAO,MACPc,IAAK,8BAMzB,CACId,MAAO,IACPJ,KAAM,OACNc,aAAc,CACV,CACIA,aAAc,CACV,CACId,KAAM,QACNI,MAAO,MACPc,IAAK,4CAMzB,CACId,MAAO,IACPJ,KAAM,OACNc,aAAc,CACV,CACIA,aAAc,CACV,CACId,KAAM,SACNI,MAAO,MACPc,IAAK,gCAMzB,CACId,MAAO,IACPJ,KAAM,OACNc,aAAc,CACV,CACIA,aAAc,CACV,CACId,KAAM,MACNI,MAAO,MACPc,IAAK,+BAET,CACIlB,KAAM,SACNI,MAAO,MACPc,IAAK,iCAMzB,CACId,MAAO,KACPJ,KAAM,OACNc,aAAc,CACV,CACIA,aAAc,CACV,CACId,KAAM,OACNI,MAAO,OACPc,IAAK,4BAET,CACIlB,KAAM,OACNI,MAAO,OACPc,IAAK,2BAET,CACIlB,KAAM,SACNI,MAAO,OACPc,IAAK,uBAET,CACIlB,KAAM,cACNI,MAAO,OACPc,IAAK,kCAMzB,CACId,MAAO,KACPJ,KAAM,KACNc,aAAc,CACV,CACIA,aAAc,CACV,CACId,KAAM,KACNI,MAAO,OACPW,KAAM,QAEV,CACIf,KAAM,MACNI,MAAO,OACPW,KAAM,SAEV,CACIf,KAAM,MACNI,MAAO,OACPW,KAAM,SAEV,CACIf,KAAM,OACNI,MAAO,OACPW,KAAM,UAEV,CACIf,KAAM,KACNI,MAAO,OACPW,KAAM,QAEV,CACIf,KAAM,SACNI,MAAO,OACPW,KAAM,gBAM1B,CACIX,MAAO,KACPJ,KAAM,OACNc,aAAc,CACV,CACIA,aAAc,CACV,CACId,KAAM,QACNI,MAAO,OACPW,KAAM,WAEV,CACIf,KAAM,SACNI,MAAO,OACPW,KAAM,gBAM1B,CACIX,MAAO,KACPJ,KAAM,UACNc,aAAc,CACV,CACIA,aAAc,CACV,CACId,KAAM,eACNI,MAAO,OACPc,IAAK,+CAMzB,CACId,MAAO,KA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","sources":["webpack://my-notes/./src/views/index.vue","webpack://my-notes/./src/components/menu/left-menu.vue","webpack://my-notes/./src/components/menu/menulist.js","webpack://my-notes/src/components/menu/left-menu.vue","webpack://my-notes/./src/components/menu/left-menu.vue?8697","webpack://my-notes/./src/components/menu/left-menu.vue?5f0b","webpack://my-notes/./src/components/menu/noIframe.js","webpack://my-notes/./src/components/note/Note.vue","webpack://my-notes/./src/components/note/jsNotes.js","webpack://my-notes/./src/components/note/cssNotes.js","webpack://my-notes/./src/components/note/vueNotes.js","webpack://my-notes/./src/components/note/zujianNotes.js","webpack://my-notes/./src/components/note/ai.js","webpack://my-notes/./src/components/note/uniapp.js","webpack://my-notes/src/components/note/Note.vue","webpack://my-notes/./src/components/note/Note.vue?e742","webpack://my-notes/./src/components/note/Note.vue?63e4","webpack://my-notes/./src/components/codeView/vue-code-view.vue","webpack://my-notes/src/components/codeView/vue-code-view.vue","webpack://my-notes/./src/components/codeView/vue-code-view.vue?8397","webpack://my-notes/./src/components/codeView/vue-code-view.vue?6600","webpack://my-notes/./src/components/codeView/html-code-view.vue","webpack://my-notes/./src/components/codePen/codeOpen.vue","webpack://my-notes/src/components/codePen/codeOpen.vue","webpack://my-notes/./src/components/codePen/codeOpen.vue?ceb4","webpack://my-notes/./src/components/codePen/codeOpen.vue?9b6f","webpack://my-notes/src/components/codeView/html-code-view.vue","webpack://my-notes/./src/components/codeView/html-code-view.vue?ed76","webpack://my-notes/./src/components/codeView/html-code-view.vue?8944","webpack://my-notes/./src/components/chatgpt/chatgpt.vue","webpack://my-notes/src/components/chatgpt/chatgpt.vue","webpack://my-notes/./src/components/chatgpt/chatgpt.vue?e016","webpack://my-notes/./src/components/chatgpt/chatgpt.vue?83df","webpack://my-notes/src/views/index.vue","webpack://my-notes/./src/views/index.vue?aa20","webpack://my-notes/./src/views/index.vue?60bd","webpack://my-notes/./src/assets/icon/ sync ^\\.\\/.*\\.png$"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{attrs:{\"id\":\"main\"}},[_c('el-container',{staticClass:\"contain\"},[_c('split',{attrs:{\"min\":\"0\"},model:{value:(_vm.offset),callback:function ($$v) {_vm.offset=$$v},expression:\"offset\"}},[_c('div',{staticStyle:{\"height\":\"100%\"},attrs:{\"slot\":\"left\"},slot:\"left\"},[_c('el-aside',{attrs:{\"width\":\"auto\"}},[_c('left-menu',{on:{\"sendInfo\":_vm.sendInfo}})],1)],1),_c('div',{staticStyle:{\"height\":\"100%\",\"padding\":\"0\"},attrs:{\"slot\":\"right\"},slot:\"right\"},[(_vm.info.startsWith('http'))?_c('el-main',{staticStyle:{\"padding\":\"0\",\"height\":\"100%\",\"overflow\":\"hidden\"}},[_c('iframe',{attrs:{\"id\":\"iframe\",\"src\":_vm.info,\"width\":\"100%\",\"height\":\"100%\",\"frameborder\":\"0\"}})]):_vm._e(),_c('el-main',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.info.startsWith('a-')),expression:\"info.startsWith('a-')\"}],staticStyle:{\"padding\":\"0\",\"height\":\"100%\",\"overflow\":\"auto\"}},[_c('div',{staticStyle:{\"padding\":\"20px\"}},[_c('note',{attrs:{\"info\":_vm.info}})],1)]),_c('el-main',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.info === 'b-vue代码'),expression:\"info === 'b-vue代码'\"}],staticStyle:{\"padding\":\"0\",\"height\":\"100%\",\"overflow\":\"auto\"}},[_c('vue-code-view')],1),_c('el-main',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.info === 'b-html代码'),expression:\"info === 'b-html代码'\"}],staticStyle:{\"padding\":\"0\",\"height\":\"100%\",\"overflow\":\"auto\"}},[_c('html-code-view')],1),_c('el-main',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.info === 'chatgpt'),expression:\"info === 'chatgpt'\"}],staticStyle:{\"padding\":\"0\",\"height\":\"100%\",\"overflow\":\"auto\"}},[_c('chatgpt')],1)],1)])],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('el-input',{attrs:{\"placeholder\":\"请输入菜单标题\"},model:{value:(_vm.searchList),callback:function ($$v) {_vm.searchList=$$v},expression:\"searchList\"}}),_c('el-menu',{staticClass:\"el-menu-vertical-demo\",staticStyle:{\"border\":\"none\"},attrs:{\"default-active\":_vm.index,\"default-openeds\":_vm.activeIndex},on:{\"select\":_vm.selectList}},_vm._l((_vm.currentList),function(item,index){return _c('el-submenu',{key:index,attrs:{\"index\":item.index}},[_c('template',{slot:\"title\"},[_c('img',{staticStyle:{\"width\":\"24px\",\"height\":\"24px\"},attrs:{\"src\":require(`../../assets/icon/${item.name}.png`),\"alt\":\"\"}}),_c('span',{staticStyle:{\"margin-left\":\"5px\"}},[_vm._v(_vm._s(item.name))])]),_vm._l((item.childrenList),function(list,ind){return _c('el-menu-item-group',{key:ind},[(list.name)?_c('template',{slot:\"title\"},[_c('span',{staticStyle:{\"font-size\":\"20px\",\"color\":\"#0aaeb3\"}},[_vm._v(_vm._s(list.name))])]):_vm._e(),_vm._l((list.childrenList),function(data,key){return _c('el-menu-item',{key:key,attrs:{\"index\":data.index}},[_vm._v(_vm._s(data.name)+\" \")])})],2)})],2)}),1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","export default [\r\n    {\r\n        index: '1',\r\n        name: \"Vue官方文档\",\r\n        childrenList: [\r\n            {\r\n                name: 'Vue2',\r\n                childrenList: [\r\n                    {\r\n                        name: 'Vue2官网',\r\n                        index: '1-1',\r\n                        url: \"https://v2.cn.vuejs.org/v2/guide/\"//vue2\r\n                    },\r\n                    {\r\n                        name: \"Vuex\",\r\n                        index: '1-2',\r\n                        url: \"https://v3.vuex.vuejs.org/zh/\"//vuex\r\n                    },\r\n                    {\r\n                        name: \"Router\",\r\n                        index: '1-3',\r\n                        url: \"https://v3.router.vuejs.org/zh/installation.html\"//vuex\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                name: 'Vue3',\r\n                childrenList: [\r\n                    {\r\n                        name: 'Vue3官网',\r\n                        index: '1-4',\r\n                        url: \"https://cn.vuejs.org/guide/introduction.html\"//vue2\r\n                    },\r\n                    {\r\n                        name: \"Vuex\",\r\n                        index: '1-5',\r\n                        url: \"https://pinia.web3doc.top/introduction.html\"//vuex\r\n                    },\r\n                    {\r\n                        name: \"Router\",\r\n                        index: '1-6',\r\n                        url: \"https://router.vuejs.org/zh/introduction.html\"//vuex\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        index: '2',\r\n        name: \"UI组件\",\r\n        childrenList: [\r\n            {\r\n                childrenList: [\r\n                    {\r\n                        name: \"ElementUI\",\r\n                        index: '2-1',\r\n                        url: 'https://element.eleme.cn/#/zh-CN'\r\n                    },\r\n                    {\r\n                        name: \"iView\",\r\n                        index: '2-2',\r\n                        url: 'http://v4.iviewui.com/docs/introduce'\r\n                    },\r\n                    {\r\n                        name: \"Ant Design Vue\",\r\n                        index: '2-3',\r\n                        url: 'https://www.antdv.com/components/overview-cn'\r\n                    },\r\n                    {\r\n                        name: 'VueFastDev',\r\n                        index: '2-4',\r\n                        url: 'http://web_help.gitee.io/vuefastdevdocs/#/devGuide/introduce'\r\n                    },\r\n                    {\r\n                        name: 'DataV(大屏专用)',\r\n                        index: '2-5',\r\n                        url: 'http://datav.jiaminghi.com/guide/'\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        index: '3',\r\n        name: \"技术文档\",\r\n        childrenList: [\r\n            {\r\n                childrenList: [\r\n                    {\r\n                        name: \"MDN\",\r\n                        index: '3-1',\r\n                        url: 'https://developer.mozilla.org/zh-CN/plus'\r\n                    },\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        index: '4',\r\n        name: \"图标网站\",\r\n        childrenList: [\r\n            {\r\n                childrenList: [\r\n                    {\r\n                        name: \"阿里巴巴图标库\",\r\n                        index: '4-1',\r\n                        url: 'https://www.iconfont.cn/'\r\n                    },\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        index: '5',\r\n        name: \"常用布局+布局生成器\",\r\n        childrenList: [\r\n            {\r\n                childrenList: [\r\n                    {\r\n                        name: \"flex布局\",\r\n                        index: '5-1',\r\n                        url: 'https://www.ruanyifeng.com/blog/2015/07/flex-grammar.html'\r\n                    },\r\n                    {\r\n                        name: \"grid布局\",\r\n                        index: '5-2',\r\n                        url: 'https://www.ruanyifeng.com/blog/2019/03/grid-layout-tutorial.html'\r\n                    },\r\n                    {\r\n                        name: \"grid生成器\",\r\n                        index: '5-3',\r\n                        url: 'https://cssgrid-generator.netlify.app/'\r\n                    },\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        index: '6',\r\n        name: \"可视化组件库\",\r\n        childrenList: [\r\n            {\r\n                childrenList: [\r\n                    {\r\n                        name: \"echart官网\",\r\n                        index: '6-1',\r\n                        url: 'https://echarts.apache.org/zh/index.html'\r\n                    },\r\n                    {\r\n                        name: \"echart社区1\",\r\n                        index: '6-2',\r\n                        url: 'http://echarts.zhangmuchen.top/#/index'\r\n                    },\r\n                    {\r\n                        name: \"echart社区2\",\r\n                        index: '6-3',\r\n                        url: 'http://chartlib.datains.cn'\r\n                    },\r\n                    {\r\n                        name: \"echart社区3\",\r\n                        index: '6-4',\r\n                        url: 'https://ppchart.com/#/'\r\n                    },\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        index: '7',\r\n        name: \"http\",\r\n        childrenList: [\r\n            {\r\n                childrenList: [\r\n                    {\r\n                        name: \"axios\",\r\n                        index: '7-1',\r\n                        url: 'https://www.axios-http.cn/docs/intro'\r\n                    },\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        index: '8',\r\n        name: \"时间处理\",\r\n        childrenList: [\r\n            {\r\n                childrenList: [\r\n                    {\r\n                        name: \"moment\",\r\n                        index: '8-1',\r\n                        url: 'http://momentjs.cn/docs/'\r\n                    },\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        index: '9',\r\n        name: \"js相关\",\r\n        childrenList: [\r\n            {\r\n                childrenList: [\r\n                    {\r\n                        name: \"ES6\",\r\n                        index: '9-1',\r\n                        url: 'https://es6.ruanyifeng.com/'\r\n                    },\r\n                    {\r\n                        name: \"lodash\",\r\n                        index: '9-2',\r\n                        url: 'https://www.lodashjs.com/'\r\n                    },\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        index: '10',\r\n        name: \"实用工具\",\r\n        childrenList: [\r\n            {\r\n                childrenList: [\r\n                    {\r\n                        name: \"奶牛快传\",\r\n                        index: '10-1',\r\n                        url: 'https://cowtransfer.com/'\r\n                    },\r\n                    {\r\n                        name: \"百度翻译\",\r\n                        index: '10-2',\r\n                        url: 'http://fanyi.baidu.com/'\r\n                    },\r\n                    {\r\n                        name: \"GitHub\",\r\n                        index: '10-3',\r\n                        url: 'https://github.com/'\r\n                    },\r\n                    {\r\n                        name: \"Vue example\",\r\n                        index: '10-4',\r\n                        url: 'https://vuejsexamples.com/'\r\n                    },\r\n                ]\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        index: '11',\r\n        name: \"笔记\",\r\n        childrenList: [\r\n            {\r\n                childrenList: [\r\n                    {\r\n                        name: \"js\",\r\n                        index: '11-1',\r\n                        list: 'a-js'\r\n                    },\r\n                    {\r\n                        name: \"Vue\",\r\n                        index: '11-2',\r\n                        list: 'a-Vue'\r\n                    },\r\n                    {\r\n                        name: \"css\",\r\n                        index: '11-3',\r\n                        list: 'a-css'\r\n                    },\r\n                    {\r\n                        name: \"常用组件\",\r\n                        index: '11-4',\r\n                        list: 'a-常用组件'\r\n                    },\r\n                    {\r\n                        name: \"ai\",\r\n                        index: '11-5',\r\n                        list: 'a-ai'\r\n                    },\r\n                    {\r\n                        name: \"uniapp\",\r\n                        index: '11-6',\r\n                        list: 'a-uniapp'\r\n                    },\r\n                ]\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        index: '12',\r\n        name: \"代码测试\",\r\n        childrenList: [\r\n            {\r\n                childrenList: [\r\n                    {\r\n                        name: \"vue代码\",\r\n                        index: '12-1',\r\n                        list: 'b-vue代码'\r\n                    },\r\n                    {\r\n                        name: \"html代码\",\r\n                        index: '12-2',\r\n                        list: 'b-html代码'\r\n                    },\r\n                ]\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        index: '13',\r\n        name: \"表单生成设计器\",\r\n        childrenList: [\r\n            {\r\n                childrenList: [\r\n                    {\r\n                        name: \"elementui生成器\",\r\n                        index: '13-1',\r\n                        url: 'https://mrhj.gitee.io/form-generator/#/'\r\n                    },\r\n                ]\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        index: '14',\r\n        name: \"人工智能\",\r\n        childrenList: [\r\n            {\r\n                childrenList: [\r\n                    {\r\n                        name: \"chatgpt智能\",\r\n                        index: '14-1',\r\n                        list:'chatgpt'\r\n                    },\r\n                    {\r\n                        name: \"gptgo\",\r\n                        index: '14-2',\r\n                        url:'https://gptgo.ai/?hl=zh&utm_source=futurepedia&&utm_medium=marketplace&&utm_campaign=futurepedia'\r\n                    },\r\n                    {\r\n                        name: \"chatgpt中文调教指南\",\r\n                        index: '14-3',\r\n                        url:'https://chatguide.plexpt.com/'\r\n                    },\r\n                    {\r\n                        name: \"未来百科\",\r\n                        index: '14-4',\r\n                        url:'https://www.futurepedia.io/'\r\n                    },\r\n                ]\r\n            },\r\n        ]\r\n    }\r\n]","<template>\n  <div>\n    <el-input v-model=\"searchList\" placeholder=\"请输入菜单标题\"></el-input>\n    <el-menu\n      class=\"el-menu-vertical-demo\"\n      @select=\"selectList\"\n      style=\"border: none\"\n      :default-active=\"index\"\n      :default-openeds=\"activeIndex\"\n    >\n      <el-submenu\n        v-for=\"(item, index) in currentList\"\n        :key=\"index\"\n        :index=\"item.index\"\n      >\n        <template slot=\"title\">\n          <img\n            style=\"width: 24px; height: 24px\"\n            :src=\"require(`../../assets/icon/${item.name}.png`)\"\n            alt=\"\"\n          />\n          <span style=\"margin-left: 5px\">{{ item.name }}</span>\n        </template>\n        <el-menu-item-group v-for=\"(list, ind) in item.childrenList\" :key=\"ind\">\n          <template slot=\"title\" v-if=\"list.name\">\n            <span style=\"font-size: 20px; color: #0aaeb3\">{{ list.name }}</span>\n          </template>\n          <el-menu-item\n            v-for=\"(data, key) in list.childrenList\"\n            :key=\"key\"\n            :index=\"data.index\"\n            >{{ data.name }}\n          </el-menu-item>\n        </el-menu-item-group>\n      </el-submenu>\n    </el-menu>\n  </div>\n</template>\n\n<script>\nimport menuList from \"@/components/menu/menulist\";\n\nexport default {\n  name: \"left-menu\",\n  data() {\n    return {\n      list: menuList,\n      searchList: \"\",\n      index: \"\",\n      activeIndex: [\"1\"],\n    };\n  },\n  mounted() {\n    setTimeout(() => {\n      this.index = \"1-1\";\n    }, 1000);\n  },\n  computed: {\n    currentList() {\n      let list = this.list.filter((list) => {\n        if (list.name.toLowerCase().includes(this.searchList.toLowerCase())) {\n          return true;\n        }\n      });\n      if (list.length) {\n        this.activeIndex = [];\n        this.index = \"\";\n        return list;\n      } else {\n        let vals = [];\n        this.activeIndex = [];\n        this.list.some((item) => {\n          return item.childrenList.some((val) => {\n            if (val.name) {\n              if (\n                val.name.toLowerCase().includes(this.searchList.toLowerCase())\n              ) {\n                vals.push(item);\n                this.activeIndex.push(item.index);\n                this.index = val.childrenList[0].index;\n                return true;\n              }\n            } else if (val.childrenList.length) {\n              return val.childrenList.some((value) => {\n                if (\n                  value.name\n                    .toLowerCase()\n                    .includes(this.searchList.toLowerCase())\n                ) {\n                  vals.push(item);\n                  this.activeIndex.push(item.index);\n                  this.index = value.index;\n                  return true;\n                }\n              });\n            }\n          });\n        });\n        return vals;\n      }\n    },\n  },\n  methods: {\n    selectList(index) {\n      this.list.some((i) => {\n        i.childrenList.some((item) => {\n          item.childrenList.some((ite) => {\n            if (ite.index === index) {\n              ite.url && this.$emit(\"sendInfo\", ite.url);\n              ite.list && this.$emit(\"sendInfo\", ite.list);\n              return true;\n            }\n          });\n        });\n      });\n    },\n  },\n};\n</script>\n<style scoped lang=\"less\">\n/deep/ .el-submenu__icon-arrow {\n  top: 59%;\n}\n/deep/ .el-submenu__title {\n  display: flex;\n  align-items: center;\n}\n</style>\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./left-menu.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./left-menu.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./left-menu.vue?vue&type=template&id=0a6a2d73&scoped=true&\"\nimport script from \"./left-menu.vue?vue&type=script&lang=js&\"\nexport * from \"./left-menu.vue?vue&type=script&lang=js&\"\nimport style0 from \"./left-menu.vue?vue&type=style&index=0&id=0a6a2d73&prod&scoped=true&lang=less&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"0a6a2d73\",\n  null\n  \n)\n\nexport default component.exports","export default [\r\n    'https://developer.mozilla.org/zh-CN/plus',\r\n    'https://www.iconfont.cn/',\r\n    'https://www.axios-http.cn/docs/intro',\r\n    'http://fanyi.baidu.com/',\r\n    'https://github.com/',\r\n    'https://vuejsexamples.com/',\r\n    'http://echarts.zhangmuchen.top/#/index',\r\n    'http://chartlib.datains.cn',\r\n    'http://datav.jiaminghi.com/guide/',\r\n    'https://echarts.apache.org/zh/index.html',\r\n    'https://gptgo.ai/?hl=zh&utm_source=futurepedia&&utm_medium=marketplace&&utm_campaign=futurepedia',\r\n    'https://momentjs.cn/docs/',\r\n    'https://www.lodashjs.com/',\r\n\r\n]","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"js-note\"},[_c('el-backtop',{staticStyle:{\"position\":\"absolute\",\"z-index\":\"9999\"},attrs:{\"target\":\".js-note\"}}),_c('el-input',{attrs:{\"placeholder\":\"请输入你要查询的标题\"},model:{value:(_vm.listName),callback:function ($$v) {_vm.listName=$$v},expression:\"listName\"}}),_c('el-collapse',{attrs:{\"accordion\":\"\"},model:{value:(_vm.activeName),callback:function ($$v) {_vm.activeName=$$v},expression:\"activeName\"}},_vm._l((_vm.newNotes),function(item){return _c('el-collapse-item',{key:item.name,attrs:{\"title\":item.title,\"name\":item.name}},[_c('v-md-editor',{staticStyle:{\"max-height\":\"100vh\"},attrs:{\"left-toolbar\":\"fullscreen toc\",\"right-toolbar\":\"\",\"include-level\":[1,2,3,4]},model:{value:(item.content),callback:function ($$v) {_vm.$set(item, \"content\", $$v)},expression:\"item.content\"}})],1)}),1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","export default [\r\n    {\r\n        title:'闭包',\r\n        name:'1',\r\n        content:'闭包 让私有变量变成全局变量 一般写法都是a函数里面return一个b函数 从而让a函数里面的变量变为全局变量 也就是每次调用a函数 里面的变量就不会初始化 而是继续保留上次的值 原理是一个函数只要在调用 那么它所在的环境不会被销毁 闭包正是因为返回一个b函数 当这个函数被调用 那么它所在的a函数里面的环境就不会被销毁 从而得就让私有变量变成全局变量'\r\n    },\r\n    {\r\n        title:'this',\r\n        name:'2',\r\n        content:'一般函数中，this指向当前函数调用的对象，箭头函数指向外层作用域，也就是箭头函数的上下文。'\r\n    },\r\n    {\r\n        title:'js同步和异步执行机制',\r\n        name:'3',\r\n        content:'首先判断js代码是同步还是异步,同步就进入主进程,异步就进入event table\\n' +\r\n            '异步任务在event table中注册函数,当满足触发条件后,被推入event queue\\n' +\r\n            '同步任务进入主线程后一直执行,直到主线程空闲时,才会去event queue中查看是否有可执行的异步任务,如果有就推入主进程中\\n' +\r\n            '以上三步循环执行,这就是event loop\\n' +\r\n            '\\n' +\r\n            '既然js是单线程，那就像只有一个窗口的食堂，学生需要排队一个一个打饭，同理js任务也要一个一个顺序执行。这种模式执行简单，但随着日后的需求，事务，请求增多，这种单线程模式执行效率必定低下。只要有一个任务执行消耗了很长时间，在这个时间里后面的任务无法执行。\\n' +\r\n            '\\n' +\r\n            '常见的有新闻包含的超清图片加载很慢，难道我们的网页要一直卡着直到图片完全显示出来？为了解决这个问题，**JavaScript语言将任务执行模式分成同步和异步：**\\n' +\r\n            '\\n' +\r\n            '- **同步模式：** 就是上面所说的一种执行模式，后一个任务等待前一个任务结束，然后再执行，程序的执行顺序与任务的排列顺序是一致的、同步的。\\n' +\r\n            '- **异步模式：** 就是每一个任务有一个或多个回调函数（`callback`），前一个任务结束后，不是执行后一个任务，而是执行回调函数，后一个任务则是不等前一个任务结束就执行，所以程序的执行顺序与任务的排列顺序是不一致的、异步的。\\n' +\r\n            '\\n' +\r\n            'https://img.jbzj.com/file_images/article/202109/2021924162932253.png?2021824162952\\n' +\r\n            '\\n' +\r\n            '**导图要表达的内容用文字来表述的话：**\\n' +\r\n            '\\n' +\r\n            '- \\n' +\r\n            '\\n' +\r\n            '- 同步和异步任务分别进入不同的执行\"场所\"，同步的进入主线程，异步的进入`Event Table`并注册函数。\\n' +\r\n            '- 当指定的事情完成时，`Event Table`会将这个函数移入`Event Queue`。\\n' +\r\n            '- 主线程内的任务执行完毕为空，会去`Event Queue`读取对应的函数，进入主线程执行。\\n' +\r\n            '- 上述过程会不断重复，也就是常说的`Event Loop`(事件循环)。\\n' +\r\n            '\\n' +\r\n            ' **再配上代码表达：**\\n' +\r\n            '```javascriptlet data = [];\\n' +\r\n            '$.ajax({\\n' +\r\n            '    url:blog.csdn.net,\\n' +\r\n            '    data:data,\\n' +\r\n            '    success:() => {\\n' +\r\n            '        console.log(\\'发送成功!\\');\\n' +\r\n            '    }\\n' +\r\n            '})\\n' +\r\n            'console.log(\\'代码执行结束\\');\\n' +\r\n            '```\\n' +\r\n            '**上面是一段简易的ajax请求代码：**\\n' +\r\n            '\\n' +\r\n            '- `ajax`进入`Event Table`，注册回调函数`success`。\\n' +\r\n            '- 执行`console.log`(\\'代码执行结束\\')。\\n' +\r\n            '- ajax事件完成，回调函数`success`进入`Event Queue`。\\n' +\r\n            '- 主线程从`Event Queue`读取回调函数`success`并执行。\\n' +\r\n            '\\n' +\r\n            '\\n' +\r\n            '\\n' +\r\n            '\\n' +\r\n            '```javascript\\n' +\r\n            'setTimeout(()=>{\\n' +\r\n            '\\n' +\r\n            '  console.log(111);\\n' +\r\n            '\\n' +\r\n            '  },0)\\n' +\r\n            '\\n' +\r\n            '  new Promise((*resolve*, *reject*) => {\\n' +\r\n            '\\n' +\r\n            '  console.log(222);\\n' +\r\n            '\\n' +\r\n            '  setTimeout(() => {\\n' +\r\n            '\\n' +\r\n            '    console.log(333);\\n' +\r\n            '\\n' +\r\n            '  }, 0);\\n' +\r\n            '\\n' +\r\n            '  resolve(444);\\n' +\r\n            '\\n' +\r\n            '  }).then(*res*=>{\\n' +\r\n            '\\n' +\r\n            '  console.log(res);\\n' +\r\n            '\\n' +\r\n            '  })\\n' +\r\n            '\\n' +\r\n            '  console.log(555);\\n' +\r\n            '```\\n' +\r\n            '\\n' +\r\n            '  /* js执行顺序是同步>微任务队列>宏任务队列，首先同步任务先执行222和555，\\n' +\r\n            '\\n' +\r\n            '  然后promise是微任务队列,这个时候js主线程任务已经执行完毕,开始把微任务队列中的\\n' +\r\n            '\\n' +\r\n            '  任务添加到主线程继续执行，所以输出555，最后定时器是宏任务队列，所以\\n' +\r\n            '\\n' +\r\n            '  最后执行111和333\\n' +\r\n            '\\n' +\r\n            '  js运行，代码刚开始就是定时器，我们首先把定时器加入event table中，注册好里面的回调函数，同时被推入入event queue(任务队列)，等待主线程执行完后，此时，就回去任务队列查找是否有可执行的异步任务，有就推到主线程执行，这个过程的循环执行，就是event loop[事件循环\\n' +\r\n            '\\n' +\r\n            '  */'\r\n    },\r\n    {\r\n        title: 'js原型和原型链',\r\n        name:4,\r\n        content:'所有对象和函数数组等都有__proto__属性，他指向了其构造函数的protoType对象属性,如对象的构造函数就是new Object(),一般我们会把公共方法存入原型之中，这样方便在实例化对象使用方法时指向同一个内存地址，不要要每实例化一个对象就新开辟一个内存空间用来存放方法，同时__proto__和protoType都有constructor属性，他就是指向构造函数本身，故而，点开constructor属性，里面也会有protoType属性和__proto__等。注意，Object已经是最高层级的构造函数了，原型链也在这为起点。'\r\n    },\r\n    {\r\n        title: 'js代码运行过程以及函数运行过程以及闭包',\r\n        name:5,\r\n        content:'全局代码执行顺序\\n' +\r\n            '\\n' +\r\n            '想要弄懂函数的执行过程，就必须知道全局代码是怎么执行的\\n' +\r\n            '\\n' +\r\n            '函数的执行过程与全局代码执行过程非常相似，这也是设计的js不同于其他语言地方之一\\n' +\r\n            '\\n' +\r\n            '代码执行之前\\n' +\r\n            '\\n' +\r\n            '当全局代码执行之前，v8引擎会在堆内存中开辟一块空间叫GO（看补充），GO中有很多默认的属性(环境属性)，比如Date、String、window等等，还有我们声明的函数和用var定义的变量，那么他们默认是什么值呢？这划分为简单数据类型和复杂数据类型：\\n' +\r\n            '\\n' +\r\n            '简单数据类型默认值是undefined\\n' +\r\n            '\\n' +\r\n            '复杂数据类型默认值是一块地址：如果发现是复杂数据类型，v8就会在堆中另开辟一块空间，GO中的相应变量指向该空间（所以复杂数据类型存在深浅拷贝问题）\\n' +\r\n            '\\n' +\r\n            '函数也会创建一块空间，暂且叫它函数空间\\n' +\r\n            '\\n' +\r\n            '2. v8又会帮我们在栈中创建一个GEC(看补充)，GEC又包含两部分：\\n' +\r\n            '\\n' +\r\n            'GEC部分一：VO(看补充)，VO是一个虚拟对象并且指向GO，VO中也包含很多属性(环境属性)，比如this、父级作用域等等\\n' +\r\n            '\\n' +\r\n            'GEC部分二：代码执行体，就是一行行的代码\\n' +\r\n            '\\n' +\r\n            '注意：这些都是在代码具体执行之前就完成的，就是说这些东西在执行之前就会被确定\\n' +\r\n            '\\n' +\r\n            '全局代码执行\\n' +\r\n            '\\n' +\r\n            '执行一行行代码，当执行到为变量初始化或赋值时，就对应将GO中属性的值覆盖掉......\\n' +\r\n            '\\n' +\r\n            '补充：执行用到的变量都是通过VO往GO里找并操作\\n' +\r\n            '\\n' +\r\n            '函数执行过程\\n' +\r\n            '\\n' +\r\n            '在全局代码执行过程中遇到函数加小括号调用，会发生什么呢？\\n' +\r\n            '\\n' +\r\n            '会分为函数的具体代码执行之前和代码具体执行和执行完毕三部分\\n' +\r\n            '\\n' +\r\n            '函数代码执行之前\\n' +\r\n            '\\n' +\r\n            '当执行到‘函数()’的时候，前面说过会在GO找到对应的属性，发现属性值是一块空间(函数空间)，v8就会在堆中另外开辟一块独属于本次引用的空间AO(看补充)，此AO与GO作用相似，也会在执行代码之前做本作用域中的预解析（为简单数据类型和复杂数据类型分别做不同初始化），另外在执行栈中创建FEC(看补充)，同样的 FEC和GEC作用也相似，也分为两部分：\\n' +\r\n            '\\n' +\r\n            'FEC部分一：VO，虚拟对象指向AO，包含父级作用域等等\\n' +\r\n            '\\n' +\r\n            'FEC部分二：代码执行体\\n' +\r\n            '\\n' +\r\n            '函数代码执行\\n' +\r\n            '\\n' +\r\n            '执行一行行代码，当执行到为变量初始化或赋值时，就对应将AO中属性的值覆盖掉......\\n' +\r\n            '\\n' +\r\n            'Q：但是，如果发现一个属性在AO中找不到怎么办？\\n' +\r\n            '\\n' +\r\n            'A：在上面说过，VO中包含父级作用域，父级作用域在代码执行之前就会被确定，所以自然而然往父级作用域里找，父级作用域指向的是父级的VO，这样一层一层直到GO，如果还是找不到，返回undefined\\n' +\r\n            '\\n' +\r\n            '函数执行完毕\\n' +\r\n            '\\n' +\r\n            '函数执行完毕会把本函数的FEC弹出执行栈\\n' +\r\n            '\\n' +\r\n            '如果发现没有变量再指向函数空间，也会在堆中销毁该函数空间\\n' +\r\n            '\\n' +\r\n            '闭包原理\\n' +\r\n            '\\n' +\r\n            '// 示例代码 /* 1 */ var function foo() { /* 2 */ var num = 10 /* 3 */ return function bar() { /* 4 */ console.log(num) // 10 /* 5 */ } /* 6 */ } /* 7 */ /* 8 */ var fn = foo() /* 9 */ fn() /*10 */ \\n' +\r\n            '\\n' +\r\n            '全局预解析（看全局代码执行顺序）......\\n' +\r\n            '\\n' +\r\n            '第8行，调用foo（看函数执行过程）......\\n' +\r\n            '\\n' +\r\n            '第5行，通过VO将foo的AO的num改成10\\n' +\r\n            '\\n' +\r\n            '第3行，返回一个函数bar，函数不能被‘直接返回’，返回的是foo的AO的属性bar存的地址\\n' +\r\n            '\\n' +\r\n            '第8行，给fn初始化，值是一块地址，此时GO里的fn指向的就是bar的函数地址\\n' +\r\n            '\\n' +\r\n            '第9行，调用fn，从GO里面找到fn，发现是一块函数地址，进行创建VO和AO等操作......\\n' +\r\n            '\\n' +\r\n            '第4行，打印num，发现num并不存在当前AO中，通过父级作用域找foo的AO，返回num\\n' +\r\n            '\\n' +\r\n            '原因原理：因为全局的fn指向bar，bar的父级作用域又指向foo的AO，所以不管fn、foo、bar都不会被销毁，尽管fn、foo、bar都执行完毕，这样就会造成内存泄漏\\n' +\r\n            '\\n' +\r\n            '补充\\n' +\r\n            '\\n' +\r\n            'GEC：Global Execution Context 全局执行上下文\\n' +\r\n            '\\n' +\r\n            '存在并一直存在执行栈中，直到script代码执行完毕，包含执行前和执行两部分：\\n' +\r\n            '\\n' +\r\n            '执行前，创建VO指向GO\\n' +\r\n            '\\n' +\r\n            '执行一行行代码\\n' +\r\n            '\\n' +\r\n            'FEC：Function Execution Content 函数执行上下文\\n' +\r\n            '\\n' +\r\n            '在函数被调用代码执行之前被创建，包含执行前和执行两部分：\\n' +\r\n            '\\n' +\r\n            '执行前，创建VO指向AO\\n' +\r\n            '\\n' +\r\n            '执行一行行代码\\n' +\r\n            '\\n' +\r\n            'GO：Globel Object 全局对象\\n' +\r\n            '\\n' +\r\n            '存在于最根层，由V8引擎在代码执行之前创建在堆空间中，默认存在一些属性：Date、Math等等，还包含个特殊属性window指向GO本身，默认属性还包含我们定义的函数和var声明的变量\\n' +\r\n            '\\n' +\r\n            '在创建的时候会根据数据类型决定默认值，并且为复杂类型开辟内存\\n' +\r\n            '\\n' +\r\n            'AO：Activation Object\\n' +\r\n            '\\n' +\r\n            '在函数调用代码执行之前被创建，里面默认存在一些属性：传递来的参数、var声明的变量、定义的函数\\n' +\r\n            '\\n' +\r\n            '创建的时候也会根据数据类型不同决定默认值，并且为复杂类型开辟内存\\n' +\r\n            '\\n' +\r\n            'VO：Variable Object\\n' +\r\n            '\\n' +\r\n            '像是AO或GO的傀儡，也是代码执行之前被创建在执行上下文中并指向创建它的那一块空间，或许是AO或许是GO。包含this，包含scoped chain(作用域链): scoped(当前作用域)、scoped parent(父级作用域)等等\\n' +\r\n            '\\n' +\r\n            '补充：\\n' +\r\n            '\\n' +\r\n            '看到好多的文章都把VO省略掉了，但其实在代码执行过程中不能直接访问AO或GO，只能通过VO间接访问，可以理解为VO==AO或VO==GO，但VO是切实存在的\\n' +\r\n            '\\n' +\r\n            '每个函数都有属于自己的AO、VO、FEC\\n' +\r\n            '\\n' +\r\n            'A回答：\\n' +\r\n            '\\n' +\r\n            '在全局代码执行之前，V8会创建GO，并会判断你声明的变量的数据类型，为其添加默认值或为其在内存中开辟空间，发现定义一个函数就会开辟一块空间。这块空间是在代码执行之前创建的，所以当执行函数时，就会从GO或AO里面找到那一块空间\\n' +\r\n            '\\n' +\r\n            'JS内存垃圾回收(GC)的机制是从根开始找，某块空间没有再被指向的时会被销毁。上段代码为例，GO的fn指向bar(函数空间)，bar的父级作用域指向GO的foo的AO\\n' +\r\n            '\\n' +\r\n            '引申：那怎么解决闭包引起的内存泄露呢？手动更改fn的值或直接指向null'\r\n    },\r\n    {\r\n        name:'6',\r\n        title:'Set和Map',\r\n        content:'# 1、什么是Set()\\n' +\r\n            '\\n' +\r\n            'Set是[es6](https://so.csdn.net/so/search?q=es6&spm=1001.2101.3001.7020)新增的数据结构，**似于数组**，但它的一大特性就是**所有元素都是唯一的**，没有重复的值，我们一般称为集合。\\n' +\r\n            '\\n' +\r\n            'Set本身是一个构造函数，用来生成 Set 数据结构\\n' +\r\n            '\\n' +\r\n            '# 2、增删改查方法\\n' +\r\n            '\\n' +\r\n            '###### 2.1 添加元素`add`\\n' +\r\n            '\\n' +\r\n            '添加某个值，返回 Set 结构本身，当添加实例中已经存在的元素，set不会进行处理添加\\n' +\r\n            '\\n' +\r\n            '```js\\n' +\r\n            'let list=new Set();\\n' +\r\n            'list.add(1)\\n' +\r\n            'list.add(2).add(3).add(3)   // 2只被添加了一次\\n' +\r\n            '123\\n' +\r\n            '```\\n' +\r\n            '\\n' +\r\n            '###### 2.2 删除元素 `delete`\\n' +\r\n            '\\n' +\r\n            '删除某个值，返回一个布尔值，表示删除是否成功\\n' +\r\n            '\\n' +\r\n            '```js\\n' +\r\n            'let list=new Set([1,20,30,40])\\n' +\r\n            'list.delete(30)      //删除值为30的元素，这里的30并非下标\\n' +\r\n            '12\\n' +\r\n            '```\\n' +\r\n            '\\n' +\r\n            '###### 2.3 判断某元素是否存在`has`\\n' +\r\n            '\\n' +\r\n            '返回一个布尔值，判断该值是否为Set的成员\\n' +\r\n            '\\n' +\r\n            '```js\\n' +\r\n            'let list=new Set([1,2,3,4])\\n' +\r\n            'list.has(2)//true\\n' +\r\n            '12\\n' +\r\n            '```\\n' +\r\n            '\\n' +\r\n            '###### 2.4 清除所有元素`clear`\\n' +\r\n            '\\n' +\r\n            '清除所有成员，没有返回值\\n' +\r\n            '\\n' +\r\n            '```js\\n' +\r\n            'let list=new Set([1,2,3,4])\\n' +\r\n            'list.clear()\\n' +\r\n            '12\\n' +\r\n            '```\\n' +\r\n            '\\n' +\r\n            '# 3、遍历方法\\n' +\r\n            '\\n' +\r\n            '###### 3.1 遍历 `keys()`\\n' +\r\n            '\\n' +\r\n            '返回键名的遍历器，相等于返回键值遍历器values()\\n' +\r\n            '\\n' +\r\n            '```js\\n' +\r\n            'let list2=new Set([\\'a\\',\\'b\\',\\'c\\'])\\n' +\r\n            'for(let key of list2.keys()){\\n' +\r\n            '   console.log(key)//a,b,c\\n' +\r\n            '}\\n' +\r\n            '1234\\n' +\r\n            '```\\n' +\r\n            '\\n' +\r\n            '###### 3.2 遍历 `values()`\\n' +\r\n            '\\n' +\r\n            '返回键值的遍历器\\n' +\r\n            '\\n' +\r\n            '```js\\n' +\r\n            'let list=new Set([\\'a\\',\\'b\\',\\'c\\'])\\n' +\r\n            'for(let value of list.values()){\\n' +\r\n            'console.log(value)//a,b,c\\n' +\r\n            '}\\n' +\r\n            '1234\\n' +\r\n            '```\\n' +\r\n            '\\n' +\r\n            '###### 3.3 遍历 `entries()`\\n' +\r\n            '\\n' +\r\n            '返回键值对的遍历器\\n' +\r\n            '\\n' +\r\n            '```js\\n' +\r\n            'let list=new Set([\\'4\\',\\'5\\',\\'hello\\'])\\n' +\r\n            'for (let item of list.entries()) {\\n' +\r\n            '  console.log(item);\\n' +\r\n            '}\\n' +\r\n            '// [\\'4\\',\\'4\\']   [\\'5\\',\\'5\\']   [\\'hello\\',\\'hello\\'] \\n' +\r\n            '12345\\n' +\r\n            '```\\n' +\r\n            '\\n' +\r\n            '###### 3.4 遍历 `forEach()`\\n' +\r\n            '\\n' +\r\n            '使用回调函数遍历每个成员\\n' +\r\n            '\\n' +\r\n            '```js\\n' +\r\n            'let list=new Set([\\'4\\',\\'5\\',\\'hello\\'])\\n' +\r\n            'list.forEach((value, key) => console.log(key + \\' : \\' + value))\\n' +\r\n            '// 4:4    5:5   hello:hello\\n' +\r\n            '123\\n' +\r\n            '```\\n' +\r\n            '\\n' +\r\n            '# 4、使用情形\\n' +\r\n            '\\n' +\r\n            '###### 4.1 用于[数组](https://so.csdn.net/so/search?q=数组&spm=1001.2101.3001.7020)去重\\n' +\r\n            '\\n' +\r\n            '```js\\n' +\r\n            'let arr = [3, 5, 2, 2, 5, 5];\\n' +\r\n            'let setArr = new Set(arr)     // 返回set数据结构  Set(3) {3, 5, 2}\\n' +\r\n            '\\n' +\r\n            '//方法一   es6的...解构\\n' +\r\n            'let unique1 =  [...setArr ];      //去重转数组后  [3,5,2]\\n' +\r\n            '\\n' +\r\n            '//方法二  Array.from()解析类数组为数组\\n' +\r\n            'let unique2 = Array.from(setArr )   //去重转数组后  [3,5,2]\\n' +\r\n            '12345678\\n' +\r\n            '```\\n' +\r\n            '\\n' +\r\n            '###### 4.2 用于字符串去重\\n' +\r\n            '\\n' +\r\n            '```js\\n' +\r\n            'let str = \"352255\";\\n' +\r\n            'let unique = [...new Set(str)].join(\"\");     // 352 \\n' +\r\n            '12\\n' +\r\n            '```\\n' +\r\n            '\\n' +\r\n            '###### 4.3 实现并集、交集、和差集\\n' +\r\n            '\\n' +\r\n            '```js\\n' +\r\n            'let a = new Set([1, 2, 3]);\\n' +\r\n            'let b = new Set([4, 3, 2]);\\n' +\r\n            '\\n' +\r\n            '// 并集\\n' +\r\n            'let union = new Set([...a, ...b]);\\n' +\r\n            '// Set {1, 2, 3, 4}\\n' +\r\n            '\\n' +\r\n            '// 交集\\n' +\r\n            'let intersect = new Set([...a].filter(x => b.has(x)));\\n' +\r\n            '// set {2, 3}\\n' +\r\n            '\\n' +\r\n            '// （a 相对于 b 的）差集\\n' +\r\n            'let difference = new Set([...a].filter(x => !b.has(x)));\\n' +\r\n            '// Set {1}\\n' +\r\n            '```\\n' +\r\n            '\\n' +\r\n            '# 1、Map是什么\\n' +\r\n            '\\n' +\r\n            'Map类型是**键值对的有序列表**，而`键和值都可以是任意类型`\\n' +\r\n            '\\n' +\r\n            '#### Map与Set的区别\\n' +\r\n            '\\n' +\r\n            '- Set是一种叫做[集合](https://so.csdn.net/so/search?q=集合&spm=1001.2101.3001.7020)的数据结构，Map是一种叫做字典的数据结构\\n' +\r\n            '\\n' +\r\n            '  > 集合-----是由一堆无序的、相关联的，且不重复的[内存](https://so.csdn.net/so/search?q=内存&spm=1001.2101.3001.7020)结构【数学中称为元素】组成的组合\\n' +\r\n            '  > 字典-----是一些元素的集合。每个元素有一个称作key 的域，不同元素的key 各不相同\\n' +\r\n            '\\n' +\r\n            '- Set集合是以[值，值]的形式存储元素，\\n' +\r\n            '  Map字典是以[键，值]的形式存储\\n' +\r\n            '\\n' +\r\n            '# 2、增删改查\\n' +\r\n            '\\n' +\r\n            '###### 2.1 `size`\\n' +\r\n            '\\n' +\r\n            'size属性返回 Map 结构的成员总数。\\n' +\r\n            '\\n' +\r\n            '```js\\n' +\r\n            'const map = new Map();\\n' +\r\n            'map.set(\\'foo\\', true);\\n' +\r\n            'map.set(\\'bar\\', false);\\n' +\r\n            '\\n' +\r\n            'map.size // 2\\n' +\r\n            '12345\\n' +\r\n            '```\\n' +\r\n            '\\n' +\r\n            '###### 2.2 `set()`\\n' +\r\n            '\\n' +\r\n            '设置键名key对应的键值为value，然后返回整个 Map 结构\\n' +\r\n            '\\n' +\r\n            '如果key已经有值，则键值会被更新，否则就新生成该键\\n' +\r\n            '\\n' +\r\n            '同时返回的是当前Map对象，可采用链式写法\\n' +\r\n            '\\n' +\r\n            '```js\\n' +\r\n            'const m = new Map();\\n' +\r\n            'let fn = function(){}\\n' +\r\n            '\\n' +\r\n            'm.set(\\'edition\\', 6)        // 键是字符串\\n' +\r\n            'm.set(fn, \\'standard\\')     // 键是函数\\n' +\r\n            'm.set(undefined, \\'nah\\')    // 键是 undefined\\n' +\r\n            'm.set(1, \\'a\\').set(2, \\'b\\').set(3, \\'c\\') // 链式操作\\n' +\r\n            '1234567\\n' +\r\n            '```\\n' +\r\n            '\\n' +\r\n            '###### 2.3 `get()`\\n' +\r\n            '\\n' +\r\n            'get方法读取key对应的键值，如果找不到key，返回undefined\\n' +\r\n            '\\n' +\r\n            '```js\\n' +\r\n            'const m = new Map();\\n' +\r\n            '\\n' +\r\n            'const hello = function() {console.log(\\'hello\\');};\\n' +\r\n            'm.set(hello, \\'Hello ES6!\\') // 键是函数\\n' +\r\n            '\\n' +\r\n            'm.get(hello)  // Hello ES6!\\n' +\r\n            '123456\\n' +\r\n            '```\\n' +\r\n            '\\n' +\r\n            '###### 2.4 `has()`\\n' +\r\n            '\\n' +\r\n            'has方法返回一个布尔值，表示某个键是否在当前 Map 对象之中\\n' +\r\n            '\\n' +\r\n            '```js\\n' +\r\n            'const m = new Map();\\n' +\r\n            '\\n' +\r\n            'm.set(\\'edition\\', 6);\\n' +\r\n            'm.set(262, \\'standard\\');\\n' +\r\n            'm.set(undefined, \\'nah\\');\\n' +\r\n            '\\n' +\r\n            'm.has(\\'edition\\')     // true\\n' +\r\n            'm.has(\\'years\\')       // false\\n' +\r\n            'm.has(undefined)     // true\\n' +\r\n            '123456789\\n' +\r\n            '```\\n' +\r\n            '\\n' +\r\n            '###### 2.4 `delete()`\\n' +\r\n            '\\n' +\r\n            'delete方法删除某个键，返回true。如果删除失败，返回false\\n' +\r\n            '\\n' +\r\n            '```js\\n' +\r\n            'const m = new Map();\\n' +\r\n            'm.set(undefined, \\'nah\\');\\n' +\r\n            'm.has(undefined)     // true\\n' +\r\n            '\\n' +\r\n            'm.delete(undefined)\\n' +\r\n            'm.has(undefined)       // false\\n' +\r\n            '123456\\n' +\r\n            '```\\n' +\r\n            '\\n' +\r\n            '###### 2.5 `clear()`\\n' +\r\n            '\\n' +\r\n            'clear方法清除所有成员，没有返回值\\n' +\r\n            '\\n' +\r\n            '```js\\n' +\r\n            'let map = new Map();\\n' +\r\n            'map.set(\\'foo\\', true);\\n' +\r\n            'map.set(\\'bar\\', false);\\n' +\r\n            '\\n' +\r\n            'map.size // 2\\n' +\r\n            'map.clear()\\n' +\r\n            'map.size // 0\\n' +\r\n            '1234567\\n' +\r\n            '```\\n' +\r\n            '\\n' +\r\n            '# 3、遍历\\n' +\r\n            '\\n' +\r\n            '- keys()：返回键名的遍历器\\n' +\r\n            '- values()：返回键值的遍历器\\n' +\r\n            '- entries()：返回所有成员的遍历器\\n' +\r\n            '- forEach()：遍历 Map 的所有成员\\n' +\r\n            '\\n' +\r\n            '```js\\n' +\r\n            'const map = new Map([\\n' +\r\n            '  [\\'F\\', \\'no\\'],\\n' +\r\n            '  [\\'T\\',  \\'yes\\'],\\n' +\r\n            ']);\\n' +\r\n            '\\n' +\r\n            '//keys()\\n' +\r\n            'for (let key of map.keys()) {\\n' +\r\n            '  console.log(key);       // \"F\"  \"T\"\\n' +\r\n            '}\\n' +\r\n            '\\n' +\r\n            '//values()\\n' +\r\n            'for (let value of map.values()) {\\n' +\r\n            '  console.log(value);    // \"no\"  \"yes\"\\n' +\r\n            '}\\n' +\r\n            '\\n' +\r\n            '// entries()\\n' +\r\n            'for (let item of map.entries()) {\\n' +\r\n            '  console.log(item[0], item[1]);\\n' +\r\n            '}\\n' +\r\n            '// \"F\" \"no\"  、\"T\" \"yes\"\\n' +\r\n            '\\n' +\r\n            '// 或者\\n' +\r\n            'for (let [key, value] of map.entries()) {\\n' +\r\n            '  console.log(key, value);\\n' +\r\n            '}\\n' +\r\n            '// \"F\" \"no\" 、\"T\" \"yes\"\\n' +\r\n            '\\n' +\r\n            '// 等同于使用map.entries()\\n' +\r\n            'for (let [key, value] of map) {\\n' +\r\n            '  console.log(key, value);\\n' +\r\n            '}\\n' +\r\n            '// \"F\" \"no\"  、 \"T\" \"yes\"\\n' +\r\n            '\\n' +\r\n            'map.forEach(function(value, key, map) {\\n' +\r\n            '  console.log(key, value);    // \"F\" \"no\"  、 \"T\" \"yes\"\\n' +\r\n            '});\\n' +\r\n            '```'\r\n    },\r\n    {\r\n        name:'7',\r\n        title: '两个数组求交集，并集和差集',\r\n        content:'```js\\n' +\r\n            '//数组普通值\\n' +\r\n            'let a = [1, 2, 3, 4, 5, 10]\\n' +\r\n            'let b = [2, 3, 4, 5]\\n' +\r\n            '//求交集\\n' +\r\n            'let c = [...new Set(a.filter(item => new Set(b).has(item)))]\\n' +\r\n            '// console.log(c);\\n' +\r\n            '//求并集\\n' +\r\n            'let d = [...new Set([].concat(a).concat(b))]\\n' +\r\n            '//求差集\\n' +\r\n            'let e = [...new Set(a.filter(item => !new Set(b).has(item)))]\\n' +\r\n            'console.log(e);\\n' +\r\n            '\\n' +\r\n            '//数组对象值\\n' +\r\n            '// 形如如下数组\\n' +\r\n            'let arr1 = [], arr2 = [];\\n' +\r\n            'arr1 = [\\n' +\r\n            '  {\\n' +\r\n            '    ID: 1,\\n' +\r\n            '    Name: 1,\\n' +\r\n            '    desc: \\'Number\\'\\n' +\r\n            '  },\\n' +\r\n            '  {\\n' +\r\n            '    ID: 2,\\n' +\r\n            '    Name: 2,\\n' +\r\n            '    desc: \\'Number\\'\\n' +\r\n            '  },\\n' +\r\n            '  {\\n' +\r\n            '    ID: 3,\\n' +\r\n            '    Name: 3,\\n' +\r\n            '    desc: \\'Number\\'\\n' +\r\n            '  },\\n' +\r\n            '  {\\n' +\r\n            '    ID: 4,\\n' +\r\n            '    Name: 4,\\n' +\r\n            '    desc: \\'Number\\'\\n' +\r\n            '  },\\n' +\r\n            '  {\\n' +\r\n            '    ID: 5,\\n' +\r\n            '    Name: 5,\\n' +\r\n            '    desc: \\'Number\\'\\n' +\r\n            '  }\\n' +\r\n            ']\\n' +\r\n            'arr2 = [\\n' +\r\n            '  {\\n' +\r\n            '    ID: 5,\\n' +\r\n            '    Name: 5,\\n' +\r\n            '    desc: \\'Number\\'\\n' +\r\n            '  },\\n' +\r\n            '  {\\n' +\r\n            '    ID: 6,\\n' +\r\n            '    Name: 6,\\n' +\r\n            '    desc: \\'Number\\'\\n' +\r\n            '  },\\n' +\r\n            '  {\\n' +\r\n            '    ID: 7,\\n' +\r\n            '    Name: 7,\\n' +\r\n            '    desc: \\'Number\\'\\n' +\r\n            '  },\\n' +\r\n            '  {\\n' +\r\n            '    ID: 8,\\n' +\r\n            '    Name: 8,\\n' +\r\n            '    desc: \\'Number\\'\\n' +\r\n            '  },\\n' +\r\n            '  {\\n' +\r\n            '    ID: 9,\\n' +\r\n            '    Name: 9,\\n' +\r\n            '    desc: \\'Number\\'\\n' +\r\n            '  }\\n' +\r\n            ']\\n' +\r\n            '\\n' +\r\n            '// 交集\\n' +\r\n            'let intersection = []\\n' +\r\n            'for (let i = 0, len = arr1.length; i < len; i++) {\\n' +\r\n            '  for (let j = 0, length = arr2.length; j < length; j++) {\\n' +\r\n            '    if (arr1[i].ID === arr2[j].ID) {\\n' +\r\n            '      intersection.push(arr1[i])\\n' +\r\n            '    }\\n' +\r\n            '  }\\n' +\r\n            '}\\n' +\r\n            'console.log(\\'交集\\', intersection)\\n' +\r\n            '\\n' +\r\n            '// 并集\\n' +\r\n            'let union = [...arr1, ...arr2]\\n' +\r\n            'for (let i = 0, len = arr1.length; i < len; i++) {\\n' +\r\n            '  for (let j = 0, length = arr2.length; j < length; j++) {\\n' +\r\n            '    if (arr1[i].ID === arr2[j].ID) {\\n' +\r\n            '      union.splice(union.findIndex(item => item.ID === arr1[i].ID), 1)\\n' +\r\n            '    }\\n' +\r\n            '  }\\n' +\r\n            '}\\n' +\r\n            'console.log(\\'并集\\', union)\\n' +\r\n            '\\n' +\r\n            '// 补集\\n' +\r\n            'let complement = [...arr1, ...arr2]\\n' +\r\n            'for (let i = 0, len = arr1.length; i < len; i++) {\\n' +\r\n            '  for (let j = 0, length = arr2.length; j < length; j++) {\\n' +\r\n            '    if (arr1[i].ID === arr2[j].ID) {\\n' +\r\n            '      complement.splice(complement.findIndex(item => item.ID === arr1[i].ID), 1)\\n' +\r\n            '      complement.splice(complement.findIndex(item => item.ID === arr2[j].ID), 1)\\n' +\r\n            '    }\\n' +\r\n            '  }\\n' +\r\n            '}\\n' +\r\n            'console.log(\\'补集\\', complement)\\n' +\r\n            '\\n' +\r\n            '// 差集\\n' +\r\n            'let diff = [...arr1]\\n' +\r\n            'for (let i = 0, len = arr1.length; i < len; i++) {\\n' +\r\n            '  let flag = false\\n' +\r\n            '  for (let j = 0, length = arr2.length; j < length; j++) {\\n' +\r\n            '    if (arr1[i].ID === arr2[j].ID) {\\n' +\r\n            '      flag = true\\n' +\r\n            '    }\\n' +\r\n            '  }\\n' +\r\n            '  if (flag) {\\n' +\r\n            '    diff.splice(diff.findIndex(item => item.ID === arr1[i].ID), 1)\\n' +\r\n            '  }\\n' +\r\n            '}\\n' +\r\n            'console.log(\\'差集\\', diff)\\n' +\r\n            '```'\r\n    },\r\n    {\r\n        name:'8',\r\n        title:'数组去重',\r\n        content:'```js\\n' +\r\n            '//数组对象去重\\n' +\r\n            'let a = [{ id: 1, name: \\'a\\' }, { id: 2, name: \\'b\\' }, { id: 3, name: \\'c\\' }, { id: 4, name: \\'d\\' }, { id: 1, name: \\'a\\' }]\\n' +\r\n            'let map = new Map();\\n' +\r\n            'for (let item of a) {\\n' +\r\n            'let key=Object.values(item).reduce((pre, nex) => {\\n'+\r\n            'return pre+nex\\n'+\r\n        '})\\n'+\r\n        'map.set(key,item)\\n'+\r\n            '}\\n' +\r\n            '// console.log(map);\\n' +\r\n            'a = [...map.values()];\\n' +\r\n            'console.log(a)\\n' +\r\n            '//数组普通值去重\\n' +\r\n            'let e = [1, 1, 1, 2, 2]\\n' +\r\n            'let f = [...new Set(e)]\\n' +\r\n            'console.log(f);\\n' +\r\n            '```'\r\n    },\r\n    {\r\n        name:'9',\r\n        title:'部分数组方法',\r\n        content:\"# 1 forEach遍历\\n\" +\r\n            \"\\n\" +\r\n            \"forEach(function(value,index,array))\\n\" +\r\n            \"\\n\" +\r\n            \"value:数组中的每一个值\\n\" +\r\n            \"\\n\" +\r\n            \"index:数组中的每一个索引号\\n\" +\r\n            \"\\n\" +\r\n            \"array:数组本身\\n\" +\r\n            \"\\n\" +\r\n            \"```js\\n\" +\r\n            \"    var arr = [1, 2, 3, 4, 5]\\n\" +\r\n            \"    arr.forEach((value, index, array) => {\\n\" +\r\n            \"      console.log(`数组中的每个值${value},对应的索引号${index},整个数组为${array}`);\\n\" +\r\n            \"    })\\n\" +\r\n            \"```\\n\" +\r\n            \"\\n\" +\r\n            \"\\n\" +\r\n            \"# 2 filter 过滤筛选数组\\n\" +\r\n            \"\\n\" +\r\n            \"filter(function(value,index,array))返回一个新数组\\n\" +\r\n            \"\\n\" +\r\n            \"```js\\n\" +\r\n            \"    var arr = [1, 2, 3, 4, 5]\\n\" +\r\n            \"    var newArr = arr.filter((value) => {\\n\" +\r\n            \"      return value > 2\\n\" +\r\n            \"    })\\n\" +\r\n            \"    console.log(newArr);\\n\" +\r\n            \"```\\n\" +\r\n            \"\\n\" +\r\n            \"\\n\" +\r\n            \"# 3 some 有满足条件的元素返回true\\n\" +\r\n            \"\\n\" +\r\n            \"some(function(value,index,array))返回值为布尔值，找到满足条件的就为true，(找到第一个满足条件的就终止循环)\\n\" +\r\n            \"\\n\" +\r\n            \"```js\\n\" +\r\n            \"    var arr = [1, 2, 3, 4, 5]\\n\" +\r\n            \"    var newArr = arr.some((value) => {\\n\" +\r\n            \"      return value == 2\\n\" +\r\n            \"    })\\n\" +\r\n            \"    console.log(newArr);// true\\n\" +\r\n            \"```\\n\" +\r\n            \"\\n\" +\r\n            \"\\n\" +\r\n            \"\\n\" +\r\n            \"# 4 every 所有元素满足条件返回true\\n\" +\r\n            \"\\n\" +\r\n            \"every(function(value,index,array))返回值为布尔值，所有元素满足条件的就为true\\n\" +\r\n            \"\\n\" +\r\n            \"```js\\n\" +\r\n            \"    var arr = [1, 2, 3, 4, 5]\\n\" +\r\n            \"    var flag = arr.every((value) => {\\n\" +\r\n            \"      return value > 0\\n\" +\r\n            \"    })\\n\" +\r\n            \"    var flags = arr.every((value) => {\\n\" +\r\n            \"      return value > 1\\n\" +\r\n            \"    })\\n\" +\r\n            \"    console.log(flag);// true\\n\" +\r\n            \"    console.log(flags);// false\\n\" +\r\n            \"```\\n\" +\r\n            \"\\n\" +\r\n            \"# 5 map 返回一个新数组\\n\" +\r\n            \"\\n\" +\r\n            \"map(function(value,index,array))返回值为新数组，数组中的元素为原始数组元素调用函数处理后的值\\n\" +\r\n            \"\\n\" +\r\n            \"```js\\n\" +\r\n            \"    var arr = [1, 2, 3, 4, 5]\\n\" +\r\n            \"    var newArr = arr.map((value) => {\\n\" +\r\n            \"      return value * 2\\n\" +\r\n            \"    })\\n\" +\r\n            \"    console.log(newArr);//[2,4,6,8,10]\\n\" +\r\n            \"```\\n\" +\r\n            \"\\n\" +\r\n            \"# 6 find 找出第一个符合条件的数组成员\\n\" +\r\n            \"\\n\" +\r\n            \"find(function(value,index,array))返回值为满足条件的数组成员\\n\" +\r\n            \"\\n\" +\r\n            \"```js\\n\" +\r\n            \"    const arr = [{\\n\" +\r\n            \"      id: 1,\\n\" +\r\n            \"      name: 'zpf'\\n\" +\r\n            \"    }, {\\n\" +\r\n            \"      id: 2,\\n\" +\r\n            \"      name: 'zzz'\\n\" +\r\n            \"    }]\\n\" +\r\n            \"    const a = arr.find(value => value.id)\\n\" +\r\n            \"    const b = arr.find(value => value.id == 11)\\n\" +\r\n            \"    console.log(a);// {id:1,name:'zpf'}\\n\" +\r\n            \"    console.log(b);// undefined\\n\" +\r\n            \"```\\n\" +\r\n            \"\\n\" +\r\n            \"# 7 findIndex 找到第一个符合条件的数组成员的索引值\\n\" +\r\n            \"\\n\" +\r\n            \"findIndex(function(value,index,array))返回值为满足条件的数组成员的索引值 找不到为-1\\n\" +\r\n            \"\\n\" +\r\n            \"```js\\n\" +\r\n            \"    const arr = [{\\n\" +\r\n            \"      id: 1,\\n\" +\r\n            \"      name: 'zpf'\\n\" +\r\n            \"    }, {\\n\" +\r\n            \"      id: 2,\\n\" +\r\n            \"      name: 'zzz'\\n\" +\r\n            \"    }]\\n\" +\r\n            \"    const a = arr.findIndex(value => value.id)\\n\" +\r\n            \"    const b = arr.findIndex(value => value.id == 11)\\n\" +\r\n            \"    console.log(a);// 0\\n\" +\r\n            \"    console.log(b);// -1\\n\" +\r\n            \"```\\n\" +\r\n            \"\\n\" +\r\n            \"# 8 includes() 数组中是否包含给定的值 包含返回true 不包含false\\n\" +\r\n            \"\\n\" +\r\n            \"```js\\n\" +\r\n            \"    console.log([1, 2, 3].includes(3, -1));// 搜索值3 起始位置倒数第一个-1 true\\n\" +\r\n            \"    console.log([1, 2, 3].includes(4));// false\\n\" +\r\n            \"    console.log([1, 2, 3].includes(1, 2, 3, 4));//false\\n\" +\r\n            \"    console.log([1, 2, 3].includes(1, 2, 4));//false\\n\" +\r\n            \"```\"\r\n    },\r\n    {\r\n        name:'10',\r\n        title:'时间戳转化为年月日时分秒',\r\n        content:\"```js\\n\" +\r\n            \"timestampToTime(time) {\\n\" +\r\n            \"      if (!time) {\\n\" +\r\n            \"        return\\n\" +\r\n            \"      }\\n\" +\r\n            \"      let date = new Date(time)\\n\" +\r\n            \"      let len = time.toString().length;\\n\" +\r\n            \"      if (len < 13) {\\n\" +\r\n            \"        let sub = 13 - len;\\n\" +\r\n            \"        sub = Math.pow(10, sub);\\n\" +\r\n            \"        date = new Date(time * sub);\\n\" +\r\n            \"      }\\n\" +\r\n            \"      let y = date.getFullYear() + '-';\\n\" +\r\n            \"      let M = date.getMonth() + 1;\\n\" +\r\n            \"      M = (M < 10 ? '0' + M : M) + '-';\\n\" +\r\n            \"      let d = date.getDate();\\n\" +\r\n            \"      d = (d < 10 ? '0' + d : d) + ' ';\\n\" +\r\n            \"      return y + M + d;\\n\" +\r\n            \"    },\\n\" +\r\n            \"```\\n\" +\r\n            \"\\n\",\r\n    },\r\n    {\r\n        name:'11',\r\n        title:'标准时间转化为年月日时分秒',\r\n        content:\"```js\\n\" +\r\n            \"formatTime(time, fmt) {\\n\" +\r\n            \"  if (!time) return '';\\n\" +\r\n            \"  else {\\n\" +\r\n            \"    const date = new Date(time);\\n\" +\r\n            \"    const o = {\\n\" +\r\n            \"      'M+': date.getMonth() + 1,\\n\" +\r\n            \"      'd+': date.getDate(),\\n\" +\r\n            \"      'H+': date.getHours(),\\n\" +\r\n            \"      'm+': date.getMinutes(),\\n\" +\r\n            \"      's+': date.getSeconds(),\\n\" +\r\n            \"      'q+': Math.floor((date.getMonth() + 3) / 3),\\n\" +\r\n            \"      S: date.getMilliseconds(),\\n\" +\r\n            \"    };\\n\" +\r\n            \"    if (/(y+)/.test(fmt))\\n\" +\r\n            \"      fmt = fmt.replace(\\n\" +\r\n            \"        RegExp.$1,\\n\" +\r\n            \"        (date.getFullYear() + '').substr(4 - RegExp.$1.length)\\n\" +\r\n            \"      );\\n\" +\r\n            \"    for (const k in o) {\\n\" +\r\n            \"      if (new RegExp('(' + k + ')').test(fmt)) {\\n\" +\r\n            \"        fmt = fmt.replace(\\n\" +\r\n            \"          RegExp.$1,\\n\" +\r\n            \"          RegExp.$1.length === 1\\n\" +\r\n            \"            ? o[k]\\n\" +\r\n            \"            : ('00' + o[k]).substr(('' + o[k]).length)\\n\" +\r\n            \"        );\\n\" +\r\n            \"      }\\n\" +\r\n            \"    }\\n\" +\r\n            \"    return fmt;\\n\" +\r\n            \"  }\\n\" +\r\n            \"}\\n\" +\r\n            \"//formatTime(new Date(), \\\"yyyyMMddHHmmss\\\")\\n\" +\r\n            \"```\",\r\n    },\r\n    {\r\n        name:'12',\r\n        title:'函数的节流与防抖',\r\n        content:\"## 防抖函数：将多次触发变成最后一次触发；\\n\" +\r\n            \"\\n\" +\r\n            \"```js\\n\" +\r\n            \"function debounce(fn,wait){\\n\" +\r\n            \"  let timer = null;\\n\" +\r\n            \"  return function (){\\n\" +\r\n            \"    let arg = arguments;\\n\" +\r\n            \"    if(timer){\\n\" +\r\n            \"      clearTimeout(timer);\\n\" +\r\n            \"      timer = null;\\n\" +\r\n            \"    }\\n\" +\r\n            \"    timer = setTimeout(()=>{\\n\" +\r\n            \"       fn.apply(this,arg)\\n\" +\r\n            \"    },wait)\\n\" +\r\n            \"  }\\n\" +\r\n            \"}\\n\" +\r\n            \"function clg(){\\n\" +\r\n            \"  console.log('clg')\\n\" +\r\n            \"}\\n\" +\r\n            \"window.addEventListener('resize',debounce(clg,1000))\\n\" +\r\n            \"```\\n\" +\r\n            \"\\n\" +\r\n            \" ## 节流函数：将多次执行变成每隔一个时间节点去执行的函数\\n\" +\r\n            \"\\n\" +\r\n            \"```js\\n\" +\r\n            \"function throttle(fn,time){\\n\" +\r\n            \"  let lastTime = null;\\n\" +\r\n            \"  return function(){\\n\" +\r\n            \"    let nowTime = Date.now();\\n\" +\r\n            \"    if(nowTime - lastTime > time || !lastTime){\\n\" +\r\n            \"      fn();\\n\" +\r\n            \"      last = nowTime\\n\" +\r\n            \"    }\\n\" +\r\n            \"  }\\n\" +\r\n            \"}\\n\" +\r\n            \"function sayHi(){\\n\" +\r\n            \"  console.log('hi')\\n\" +\r\n            \"}\\n\" +\r\n            \"setInterval(throttle(sayHi,1000),500)\\n\" +\r\n            \"```\",\r\n    },{\r\n        name:'13',\r\n        title:'监听网页行为',\r\n        content:\"监听网页行为（如是否调用某个接口）\\n\" +\r\n            \"\\n\" +\r\n            \"```js\\n\" +\r\n            \"const observer = new PerformanceObserver(_ => {\\n\" +\r\n            \"\\t\\tif (performance.getEntriesByName(\\\"接口ip\\\")\\n\" +\r\n            \"\\t\\t\\t.length >\\n\" +\r\n            \"\\t\\t\\t0) {\\n\" +\r\n            \"\\t\\t\\tconsole.log('网页调用该接口')\\n\" +\r\n            \"\\t\\t}\\n\" +\r\n            \"\\n\" +\r\n            \"\\t});\\n\" +\r\n            \"\\tobserver.observe({\\n\" +\r\n            \"\\t\\tentryTypes: [\\\"resource\\\"]\\n\" +\r\n            \"\\t})\\n\" +\r\n            \"```\",\r\n    },\r\n    {\r\n        name:'14',\r\n        title:'js时间方法汇总',\r\n        content:\"```js\\n\" +\r\n            \"/**\\n\" +\r\n            \" *\\n\" +\r\n            \" @ fileOverview utils通用工具库\\n\" +\r\n            \" *\\n\" +\r\n            \" * @module time\\n\" +\r\n            \" * @author 陈伯禹(112298)\\n\" +\r\n            \" * @version 1.1.0\\n\" +\r\n            \" *\\n\" +\r\n            \" */\\n\" +\r\n            \"\\n\" +\r\n            \"const REG = {\\n\" +\r\n            \"    TIME: /^([0-1][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]$/,\\n\" +\r\n            \"    DATE: /^\\\\d{4}-(0[0-9]|1[0-2])-([0-2][0-9]|3[0-1]) ([0-1][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]$/,\\n\" +\r\n            \"    DATE_M_D_Y: /^(0[0-9]|1[0-2])-([0-2][0-9]|3[0-1])-\\\\d{4} ([0-1][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]$/,\\n\" +\r\n            \"    DATE_Z: /^\\\\d{4}(0[0-9]|1[0-2])([0-2][0-9]|3[0-1])T([0-1][0-9]|2[0-3])[0-5][0-9][0-5][0-9]Z$/\\n\" +\r\n            \"}\\n\" +\r\n            \"\\n\" +\r\n            \"\\n\" +\r\n            \"\\n\" +\r\n            \"/**\\n\" +\r\n            \" * 根据传入的时间格式,格式化传入的时间（该方法也挂载在Date原型链上）注意时分秒为大写\\n\" +\r\n            \" *\\n\" +\r\n            \" * @method dateFormat\\n\" +\r\n            \" * @param {DateObject} nowDate 时间对象\\n\" +\r\n            \" * @param {string} format 需要转换的时间格式\\n\" +\r\n            \" * @example\\n\" +\r\n            \" * dateFormat(new Date())\\n\" +\r\n            \" * \\\"2020-04-13\\\"\\n\" +\r\n            \" * dateFormat(new Date(),'yyyy-mm-dd HH')\\n\" +\r\n            \" * \\\"2020-27-13 11\\\"\\n\" +\r\n            \" * dateFormat(new Date(),'yyyy-mm-dd HH:MM')\\n\" +\r\n            \" * \\\"2020-27-13 11:04\\\"\\n\" +\r\n            \" * dateFormat(new Date(),'yyyy-mm-dd HH:MM:ss SS  qq')\\n\" +\r\n            \" * \\\"2020-28-13 11:04:54 63  02\\\"\\n\" +\r\n            \" * @return {string} format 格式化后的时间字符串\\n\" +\r\n            \" */\\n\" +\r\n            \"function  dateFormat(nowDate,format=\\\"yyyy-MM-dd\\\") {\\n\" +\r\n            \"    var o = {\\n\" +\r\n            \"        \\\"M+\\\" : nowDate.getMonth() + 1,\\n\" +\r\n            \"        \\\"d+\\\" : nowDate.getDate(),\\n\" +\r\n            \"        \\\"H+\\\" : nowDate.getHours(),\\n\" +\r\n            \"        \\\"m+\\\" : nowDate.getMinutes(),\\n\" +\r\n            \"        \\\"s+\\\" : nowDate.getSeconds(),\\n\" +\r\n            \"        \\\"q+\\\" : Math.floor((nowDate.getMonth() + 3)/3),\\n\" +\r\n            \"        \\\"S+\\\" : nowDate.getMilliseconds()\\n\" +\r\n            \"    };\\n\" +\r\n            \"\\n\" +\r\n            \"    if(/(y+)/.test(format))\\n\" +\r\n            \"    {\\n\" +\r\n            \"        format = format.replace(RegExp.$1,(nowDate.getFullYear()+\\\"\\\").substr(4-RegExp.$1.length));\\n\" +\r\n            \"    }\\n\" +\r\n            \"\\n\" +\r\n            \"    if(/(S+)/.test(format))\\n\" +\r\n            \"    {\\n\" +\r\n            \"        format = format.replace(RegExp.$1,(nowDate.getMilliseconds()+\\\"\\\").substr(3-RegExp.$1.length));\\n\" +\r\n            \"    }\\n\" +\r\n            \"\\n\" +\r\n            \"    for(var k in o)\\n\" +\r\n            \"    {\\n\" +\r\n            \"        if(new RegExp(\\\"(\\\" +k + \\\")\\\").test(format))\\n\" +\r\n            \"        {\\n\" +\r\n            \"            format = format.replace(RegExp.$1,RegExp.$1.length == 1?o[k]:(\\\"00\\\"+o[k]).substr((\\\"\\\"+o[k]).length));\\n\" +\r\n            \"        }\\n\" +\r\n            \"    }\\n\" +\r\n            \"    return format;\\n\" +\r\n            \"}\\n\" +\r\n            \"Date.prototype.format = dateFormat;\\n\" +\r\n            \"\\n\" +\r\n            \"\\n\" +\r\n            \"/**\\n\" +\r\n            \" * 月日时分秒补0函数\\n\" +\r\n            \" *\\n\" +\r\n            \" * @method addZero\\n\" +\r\n            \" * @param {Number} time 是否要加0个参数\\n\" +\r\n            \" * @example\\n\" +\r\n            \" * addZero(1)  => 01\\n\" +\r\n            \" * addZero(11)  => 11\\n\" +\r\n            \" *\\n\" +\r\n            \" * @return {Number|String} newTime 补0处理后的结果\\n\" +\r\n            \" */\\n\" +\r\n            \"function addZero(time) {\\n\" +\r\n            \"    if(isNaN(time)){\\n\" +\r\n            \"        return time\\n\" +\r\n            \"    }\\n\" +\r\n            \"    let newTime = time > 9 ? time : '0' + time\\n\" +\r\n            \"    return newTime\\n\" +\r\n            \"}\\n\" +\r\n            \"\\n\" +\r\n            \"\\n\" +\r\n            \"/**\\n\" +\r\n            \" * 获取当日时间区间 如[2019-10-10 00:00:00，2019-10-10 23:59:59]\\n\" +\r\n            \" * @method startAndEndTime\\n\" +\r\n            \" * @example\\n\" +\r\n            \" * startAndEndTime()  => [2019-10-10 00:00:00，2019-10-10 23:59:59]\\n\" +\r\n            \" *\\n\" +\r\n            \" * @return {Array} 如[2019-10-10 00:00:00，2019-10-10 23:59:59]\\n\" +\r\n            \" */\\n\" +\r\n            \"function startAndEndTime() {\\n\" +\r\n            \"    var date=toLocaleStringByMs(new Date()).substring(0,10)\\n\" +\r\n            \"    return  [date+' 00:00:00',date+' 23:59:59'];\\n\" +\r\n            \"}\\n\" +\r\n            \"\\n\" +\r\n            \"/**\\n\" +\r\n            \" * 校验时间格式是否形如 12:00:00，判断正则为/^\\\\d{2}:\\\\d{2}:\\\\d{2}$/\\n\" +\r\n            \" *\\n\" +\r\n            \" * @method valifyTime\\n\" +\r\n            \" * @param {string} time 时间格式，如 10:00:00\\n\" +\r\n            \" * @example\\n\" +\r\n            \" * valifyTime('aaa')   false\\n\" +\r\n            \" * valifyTime('10:11:11')   true\\n\" +\r\n            \" * valifyTime('99:99:99')   true\\n\" +\r\n            \" * @return {Boolean} 是否\\n\" +\r\n            \" */\\n\" +\r\n            \"function valifyTime(time) {\\n\" +\r\n            \"    const reg = /^\\\\d{2}:\\\\d{2}:\\\\d{2}$/\\n\" +\r\n            \"    return reg.test(time)\\n\" +\r\n            \"}\\n\" +\r\n            \"\\n\" +\r\n            \"/**\\n\" +\r\n            \" * 判定两组时间序列是否存在重复（交叉或包含）\\n\" +\r\n            \" *\\n\" +\r\n            \" * @method isTimeContainTime\\n\" +\r\n            \" * @param {array} time1Arr 时间范围，如 [10:00:00, 12:00:00]\\n\" +\r\n            \" * @param {array} time2Arr 时间范围，如 [09:00:00, 23:00:00]\\n\" +\r\n            \" * @example\\n\" +\r\n            \" * 参数只能为两个数组且数组长度为2,各元素符合valifyTime校验\\n\" +\r\n            \" * valifyTime([10:00:00, 12:00:00],[09:00:00, 23:00:00])   true\\n\" +\r\n            \" * @return {Boolean} 是否\\n\" +\r\n            \" */\\n\" +\r\n            \"function isTimeContainTime(time1Arr, time2Arr) {\\n\" +\r\n            \"    let timeArr\\n\" +\r\n            \"    let validate = true\\n\" +\r\n            \"        // 确保两组时间范围格式正确\\n\" +\r\n            \"    if (!Array.isArray(time1Arr) || !Array.isArray(time2Arr)) {\\n\" +\r\n            \"        console.error('Please enter two array.')\\n\" +\r\n            \"    }\\n\" +\r\n            \"    if (time1Arr.length !== 2 || time2Arr.length !== 2) {\\n\" +\r\n            \"        console.error('Please enter currect time.')\\n\" +\r\n            \"    }\\n\" +\r\n            \"    timeArr = [...time1Arr, ...time2Arr]\\n\" +\r\n            \"    for (let time of timeArr) {\\n\" +\r\n            \"        if (!valifyTime(time)) {\\n\" +\r\n            \"            console.error('Please enter currect time.')\\n\" +\r\n            \"        }\\n\" +\r\n            \"    }\\n\" +\r\n            \"\\n\" +\r\n            \"    // 检验时间是否存在重复\\n\" +\r\n            \"    if (time2Arr[0] > time1Arr[0] && time2Arr[0] < time1Arr[1] ||\\n\" +\r\n            \"        time2Arr[1] > time1Arr[0] && time2Arr[1] < time1Arr[1]) {\\n\" +\r\n            \"        validate = false;\\n\" +\r\n            \"    }\\n\" +\r\n            \"    if (time1Arr[0] > time2Arr[0] && time1Arr[0] < time2Arr[1] ||\\n\" +\r\n            \"        time1Arr[1] > time2Arr[0] && time1Arr[1] < time2Arr[1]) {\\n\" +\r\n            \"        validate = false;\\n\" +\r\n            \"    }\\n\" +\r\n            \"\\n\" +\r\n            \"    return validate\\n\" +\r\n            \"}\\n\" +\r\n            \"\\n\" +\r\n            \"/**\\n\" +\r\n            \" * 将时间转换为UTC时间字符串，支持格式 hh:mm:ss\\n\" +\r\n            \" *\\n\" +\r\n            \" * @method toISOStringByTime\\n\" +\r\n            \" * @param {string} timeStr 源时间 如(10:30:30或者10:30)\\n\" +\r\n            \" * @example\\n\" +\r\n            \" * 当前为东八区\\n\" +\r\n            \" * toISOStringByTime(07:00:00)\\n\" +\r\n            \" * 返回值为{\\n\" +\r\n            \" *     offset:-1,\\n\" +\r\n            \" *     time:'23:00:00'\\n\" +\r\n            \" * }\\n\" +\r\n            \" * toISOStringByTime(12:00:00)\\n\" +\r\n            \" * 返回值为{\\n\" +\r\n            \" *     offset:0,\\n\" +\r\n            \" *     time:'04:00:00'\\n\" +\r\n            \" * }\\n\" +\r\n            \" * @returns {object} 包含转换后的时间字符串time和日期偏差offset 形如'{offset:6,time:'10:10:10'}'\\n\" +\r\n            \" */\\n\" +\r\n            \"function toISOStringByTime(timeStr) {\\n\" +\r\n            \"    const time = {}\\n\" +\r\n            \"    let date = new Date(`2000/10/24 ${timeStr}`)\\n\" +\r\n            \"    time.d = date.getUTCDate()\\n\" +\r\n            \"    time.h = addZero(date.getUTCHours())\\n\" +\r\n            \"    time.min = addZero(date.getUTCMinutes())\\n\" +\r\n            \"    time.s = addZero(date.getUTCSeconds())\\n\" +\r\n            \"\\n\" +\r\n            \"    return {\\n\" +\r\n            \"        offset: time.d - 24,\\n\" +\r\n            \"        time: `${time.h}:${time.min}:${time.s}`\\n\" +\r\n            \"    }\\n\" +\r\n            \"}\\n\" +\r\n            \"\\n\" +\r\n            \"/**\\n\" +\r\n            \" * 将时间转换为UTC时间字符串，默认返回格式为yyyy-mm-dd hh:mm:ss，当type为utcStr 返回值形入20200110T103056Z\\n\" +\r\n            \" *\\n\" +\r\n            \" * @method toISOStringByDate\\n\" +\r\n            \" * @param {string|Object} timeParams 源时间\\n\" +\r\n            \" * @param {string} type str 普通时间格式， utcStr yyyymmddThhmmssZ格式\\n\" +\r\n            \" * @example\\n\" +\r\n            \" * 当前为东八区\\n\" +\r\n            \" * toISOStringByDate(new Date())\\n\" +\r\n            \" * \\\"2020-04-07 08:55:53\\\"\\n\" +\r\n            \" * toISOStringByDate(new Date(),'utcStr')\\n\" +\r\n            \" * \\\"20200407T085606Z\\\"\\n\" +\r\n            \" * @returns {String } 按格式返回的时间字符串\\n\" +\r\n            \" */\\n\" +\r\n            \"function toISOStringByDate(timeParams, type = 'str') {\\n\" +\r\n            \"    const time = {}\\n\" +\r\n            \"    let newTime ='',date =''\\n\" +\r\n            \"    if(timeParams instanceof Date){\\n\" +\r\n            \"        date = timeParams\\n\" +\r\n            \"    }else {\\n\" +\r\n            \"        date = new Date(timeParams.replace(/-/g, '/'))\\n\" +\r\n            \"    }\\n\" +\r\n            \"    time.y = date.getUTCFullYear()\\n\" +\r\n            \"    time.m = addZero(date.getUTCMonth() + 1)\\n\" +\r\n            \"    time.d = addZero(date.getUTCDate())\\n\" +\r\n            \"    time.h = addZero(date.getUTCHours())\\n\" +\r\n            \"    time.min = addZero(date.getUTCMinutes())\\n\" +\r\n            \"    time.s = addZero(date.getUTCSeconds())\\n\" +\r\n            \"\\n\" +\r\n            \"    if (type === 'utcStr') {\\n\" +\r\n            \"        newTime = `${time.y}${time.m}${time.d}T${time.h}${time.min}${time.s}Z`\\n\" +\r\n            \"    } else {\\n\" +\r\n            \"        newTime = `${time.y}-${time.m}-${time.d} ${time.h}:${time.min}:${time.s}`\\n\" +\r\n            \"    }\\n\" +\r\n            \"\\n\" +\r\n            \"    return newTime\\n\" +\r\n            \"}\\n\" +\r\n            \"\\n\" +\r\n            \"/**\\n\" +\r\n            \" * 根据时间字符串格式(xx:xx:xx还是 yyyy-mm-dd HH:mm:ss)将时间转换为UTC时间字符串,前者调用toISOStringByTime后者调用toISOStringByDate\\n\" +\r\n            \" *\\n\" +\r\n            \" * @method toISOString\\n\" +\r\n            \" * @param {string} timeStr 源时间字符串\\n\" +\r\n            \" * @param {string} type str 普通时间格式， utcStr yyyymmddThhmmssZ格式\\n\" +\r\n            \" * @example\\n\" +\r\n            \" * 当前为东八区\\n\" +\r\n            \" * toISOString('2010-10-10 10:10:10')\\n\" +\r\n            \" * \\\"2010-10-10 02:10:10\\\"\\n\" +\r\n            \" * toISOString('10:10:10')\\n\" +\r\n            \" * 返回值为{\\n\" +\r\n            \" *     offset:0,\\n\" +\r\n            \" *     time:'02:10:10'\\n\" +\r\n            \" * }\\n\" +\r\n            \" * @returns {String|object } 字符串形如'yyyy-mm-dd HH:mm:ss'或者对象 形如'{offset:6,time:'10:10:10'}'\\n\" +\r\n            \" *\\n\" +\r\n            \" */\\n\" +\r\n            \"function toISOString(timeStr, type) {\\n\" +\r\n            \"    try {\\n\" +\r\n            \"        if (REG.DATE.test(timeStr)) {\\n\" +\r\n            \"            // 格式 yyyy-mm-dd hh:mm:ss\\n\" +\r\n            \"            return toISOStringByDate(timeStr, type)\\n\" +\r\n            \"        } else if (REG.TIME.test(timeStr)) {\\n\" +\r\n            \"            // 格式 hh:mm:ss\\n\" +\r\n            \"            return toISOStringByTime(timeStr)\\n\" +\r\n            \"        }\\n\" +\r\n            \"    } catch (e) {\\n\" +\r\n            \"        return ''\\n\" +\r\n            \"    }\\n\" +\r\n            \"    console.error('Please enter date as yyyy-mm-dd hh:mm:ss')\\n\" +\r\n            \"}\\n\" +\r\n            \"\\n\" +\r\n            \"\\n\" +\r\n            \"/**\\n\" +\r\n            \" * 将UTC时间转换为本地时间字符串，支持格式 hh:mm:ss\\n\" +\r\n            \" *\\n\" +\r\n            \" * @method toLocaleStringByTime\\n\" +\r\n            \" * @param {string} timeStr 源时间 形如'10:10:10'\\n\" +\r\n            \" * @example\\n\" +\r\n            \" * toLocaleStringByTime('1:10:10')\\n\" +\r\n            \" * {offset: 0, time: \\\"09:10:10\\\"}\\n\" +\r\n            \" * @returns {object} 包含转换后的时间字符串time和日期偏差offset 形如'{offset:6,time:'10:10:10'}'\\n\" +\r\n            \" */\\n\" +\r\n            \"function toLocaleStringByTime(timeStr) {\\n\" +\r\n            \"    const time = {}\\n\" +\r\n            \"\\n\" +\r\n            \"    let timeList = timeStr.split(':');\\n\" +\r\n            \"\\n\" +\r\n            \"    let utcDate = Date.UTC(2000, 10, 24, timeList[0], timeList[1], timeList[2]);\\n\" +\r\n            \"    let date = new Date(utcDate);\\n\" +\r\n            \"\\n\" +\r\n            \"    time.d = date.getDate()\\n\" +\r\n            \"    time.h = addZero(date.getHours())\\n\" +\r\n            \"    time.min = addZero(date.getMinutes())\\n\" +\r\n            \"    time.s = addZero(date.getSeconds())\\n\" +\r\n            \"\\n\" +\r\n            \"    return {\\n\" +\r\n            \"        offset: time.d - 24,\\n\" +\r\n            \"        time: `${time.h}:${time.min}:${time.s}`\\n\" +\r\n            \"    }\\n\" +\r\n            \"}\\n\" +\r\n            \"\\n\" +\r\n            \"/**\\n\" +\r\n            \" * 将UTC时间转换为本地时间字符串，支持格式 yyyy-mm-dd hh:mm:ss\\n\" +\r\n            \" *\\n\" +\r\n            \" * @method toLocaleStringByDate\\n\" +\r\n            \" * @param {string} timeStr 源时间 形如'yyyy-mm-dd hh:mm:ss'\\n\" +\r\n            \" * @param {string} type 当type为mmDDyy，返回格式为‘mm-dd-yyyy HH:mm:ss’\\n\" +\r\n            \" * @example\\n\" +\r\n            \" * toLocaleStringByDate('2019-09-10 10:10:10')\\n\" +\r\n            \" * \\\"2019-09-10 18:10:10\\\"\\n\" +\r\n            \" * toLocaleStringByDate('2019-09-10 10:10:10','mmDDyy')\\n\" +\r\n            \" * \\\"09-10-2019 18:10:10\\\"\\n\" +\r\n            \" * @returns {string} 本地时间字符串形如'yyyy-mm-dd hh:mm:ss'\\n\" +\r\n            \" */\\n\" +\r\n            \"function toLocaleStringByDate(timeStr, type = 'str') {\\n\" +\r\n            \"    const time = {}\\n\" +\r\n            \"\\n\" +\r\n            \"    let newTime = timeStr.split(' ');\\n\" +\r\n            \"    let dateList = newTime[0].split('-');\\n\" +\r\n            \"    let timeList = newTime[1].split(':');\\n\" +\r\n            \"\\n\" +\r\n            \"    let utcDate = Date.UTC(dateList[0], dateList[1] - 1, dateList[2], timeList[0], timeList[1], timeList[2]);\\n\" +\r\n            \"    let date = new Date(utcDate);\\n\" +\r\n            \"\\n\" +\r\n            \"    time.y = date.getFullYear()\\n\" +\r\n            \"    time.m = addZero(date.getMonth() + 1)\\n\" +\r\n            \"    time.d = addZero(date.getDate())\\n\" +\r\n            \"    time.h = addZero(date.getHours())\\n\" +\r\n            \"    time.min = addZero(date.getMinutes())\\n\" +\r\n            \"    time.s = addZero(date.getSeconds())\\n\" +\r\n            \"    if (type === 'mmDDyy') {\\n\" +\r\n            \"        return `${time.m}-${time.d}-${time.y} ${time.h}:${time.min}:${time.s}`\\n\" +\r\n            \"    }\\n\" +\r\n            \"    return `${time.y}-${time.m}-${time.d} ${time.h}:${time.min}:${time.s}`\\n\" +\r\n            \"}\\n\" +\r\n            \"\\n\" +\r\n            \"/**\\n\" +\r\n            \" * 将UTC时间转换为本地时间字符串,\\n\" +\r\n            \" * 当格式为yyyy-mm-dd hh:mm:ss,返回值同toLocaleStringByDate\\n\" +\r\n            \" * 当格式为hh:mm:ss 返回值同toLocaleStringByTime,\\n\" +\r\n            \" * 当格式为yyyymmddThhmmssZ时，返回值为toLocaleStringByDate,可以带type参数修改返回值,\\n\" +\r\n            \" * 当格式为mm-dd-yyyy hh:mm:ss,返回值同toLocaleStringByDate(time,'mmDDyy')\\n\" +\r\n            \" *\\n\" +\r\n            \" * @method toLocaleString\\n\" +\r\n            \" * @param {string} timeStr 源时间\\n\" +\r\n            \" * @param {string} type str 普通时间格式， mmDDyy\\n\" +\r\n            \" * @example\\n\" +\r\n            \" * 校验符合REG.DATE\\n\" +\r\n            \" * toLocaleString('2019-09-10 10:10:10')\\n\" +\r\n            \" * \\\"2019-09-10 18:10:10\\\"\\n\" +\r\n            \" * 校验符合REG.TIME\\n\" +\r\n            \" * toLocaleString('10:10:10')\\n\" +\r\n            \" * {offset: 0, time: \\\"18:10:10\\\"}\\n\" +\r\n            \" * 校验符合REG.DATE_Z\\n\" +\r\n            \" * toLocaleString('20200407T085606Z')\\n\" +\r\n            \" * \\\"2020-04-07 16:56:06\\\"\\n\" +\r\n            \" * 校验符合REG.DATE_M_D_Y\\n\" +\r\n            \" * toLocaleString('09-10-2019 18:10:10')\\n\" +\r\n            \" * \\\"09-11-2019 02:10:10\\\"\\n\" +\r\n            \" * @returns {string|object} 本地时间字符串形如'yyyy-mm-dd hh:mm:ss'，\\n\" +\r\n            \" * 或包含转换后的时间字符串time和日期偏差offset 形如'{offset:6,time:'10:10:10'}'\\n\" +\r\n            \" */\\n\" +\r\n            \"function toLocaleString(timeStr, type='str') {\\n\" +\r\n            \"    try {\\n\" +\r\n            \"        if (REG.DATE.test(timeStr)) {\\n\" +\r\n            \"            // 格式 yyyy-mm-dd hh:mm:ss\\n\" +\r\n            \"            return toLocaleStringByDate(timeStr)\\n\" +\r\n            \"        } else if (REG.TIME.test(timeStr)) {\\n\" +\r\n            \"            // 格式 hh:mm:ss\\n\" +\r\n            \"            return toLocaleStringByTime(timeStr)\\n\" +\r\n            \"        } else if (REG.DATE_Z.test(timeStr)) {\\n\" +\r\n            \"            // 格式 yyyymmddThhmmssZ\\n\" +\r\n            \"            let newTime = timeStr.replace(/[^0-9]/g, '')\\n\" +\r\n            \"            let date = `${newTime.slice(0, 4)}-${newTime.slice(4, 6)}-${newTime.slice(6, 8)}`\\n\" +\r\n            \"            let time = `${newTime.slice(8, 10)}:${newTime.slice(10, 12)}:${newTime.slice(12, 14)}`\\n\" +\r\n            \"            return toLocaleStringByDate(`${date} ${time}`, type)\\n\" +\r\n            \"\\n\" +\r\n            \"        } else if (REG.DATE_M_D_Y.test(timeStr)) {\\n\" +\r\n            \"            let newTime = timeStr.split(' ');\\n\" +\r\n            \"            let dateList = newTime[0].split('-');\\n\" +\r\n            \"            let time = newTime[1];\\n\" +\r\n            \"\\n\" +\r\n            \"            return toLocaleStringByDate(`${dateList[2]}-${dateList[0]}-${dateList[1]} ${time}`, 'mmDDyy')\\n\" +\r\n            \"        }\\n\" +\r\n            \"    } catch(e){\\n\" +\r\n            \"        console.error('Please enter date as yyyy-mm-dd hh:mm:ss')\\n\" +\r\n            \"        return ''\\n\" +\r\n            \"    }\\n\" +\r\n            \"    console.error('Please enter date as yyyy-mm-dd hh:mm:ss')\\n\" +\r\n            \"\\n\" +\r\n            \"}\\n\" +\r\n            \"\\n\" +\r\n            \"/**\\n\" +\r\n            \" * 获取当前浏览器客户端的时区（+0800为东八区）\\n\" +\r\n            \" *\\n\" +\r\n            \" * @method getTimezoon\\n\" +\r\n            \" * @example\\n\" +\r\n            \" * 当前为正八区\\n\" +\r\n            \" * getTimezoon()\\n\" +\r\n            \" * \\\"+0800\\\"\\n\" +\r\n            \" * @returns {string} such as +0000 +0545(精确到分)\\n\" +\r\n            \" */\\n\" +\r\n            \"function getTimezoon() {\\n\" +\r\n            \"    let timezoonOffset = new Date().getTimezoneOffset();\\n\" +\r\n            \"    const flag = timezoonOffset > 0 ? '-' : '+';\\n\" +\r\n            \"\\n\" +\r\n            \"    timezoonOffset = Math.abs(timezoonOffset);\\n\" +\r\n            \"\\n\" +\r\n            \"    const hours = Math.floor(timezoonOffset / 60);\\n\" +\r\n            \"    const minute = timezoonOffset % 60;\\n\" +\r\n            \"    return flag + addZero(hours) + addZero(minute);\\n\" +\r\n            \"}\\n\" +\r\n            \"\\n\" +\r\n            \"/**\\n\" +\r\n            \" * 格式化时间为对象形式\\n\" +\r\n            \" * 接收Date、数字或字符串格式的UTC时间、UTC时间*1000（单位秒）\\n\" +\r\n            \" * 转换为时间对象，参数无效时返回空对象\\n\" +\r\n            \" *\\n\" +\r\n            \" * @method dateToObject\\n\" +\r\n            \" * @param {Object | String | Number} param 时间\\n\" +\r\n            \" * @example\\n\" +\r\n            \" * dateToObject(new Date())\\n\" +\r\n            \" * {\\n\" +\r\n            \" *     day:13\\n\" +\r\n            \" *     hour:11\\n\" +\r\n            \" *     minute:\\\"00\\\"\\n\" +\r\n            \" *     month:\\\"04\\\"\\n\" +\r\n            \" *     second:50\\n\" +\r\n            \" *     year:2020\\n\" +\r\n            \" * }\\n\" +\r\n            \" * dateToObject('2020/01/01 10:10:10')\\n\" +\r\n            \" * {\\n\" +\r\n            \" *     day:\\\"01\\\"\\n\" +\r\n            \" *     hour:10\\n\" +\r\n            \" *     minute:10\\n\" +\r\n            \" *     month:\\\"01\\\"\\n\" +\r\n            \" *     second:10\\n\" +\r\n            \" *     year:2020\\n\" +\r\n            \" * }\\n\" +\r\n            \" * @returns {object} 日期结果对象或空对象\\n\" +\r\n            \" */\\n\" +\r\n            \"function dateToObject(param) {\\n\" +\r\n            \"    let date = null\\n\" +\r\n            \"\\n\" +\r\n            \"    if (typeof param === 'object') {\\n\" +\r\n            \"        date = param;\\n\" +\r\n            \"    } else if (typeof param === 'string') {\\n\" +\r\n            \"        if (param.toString().length === 13) {\\n\" +\r\n            \"            date = new Date(param.replace(/-/g, '/'));\\n\" +\r\n            \"        } else if (param.toString().length === 10) {\\n\" +\r\n            \"            date = new Date(param * 1000);\\n\" +\r\n            \"        } else {\\n\" +\r\n            \"            date = new Date(param.replace(/-/g, '/'));\\n\" +\r\n            \"        }\\n\" +\r\n            \"    } else if (typeof param === 'number') {\\n\" +\r\n            \"        date = new Date(param);\\n\" +\r\n            \"    }\\n\" +\r\n            \"\\n\" +\r\n            \"    if (!date || isNaN(date.getFullYear())) {\\n\" +\r\n            \"        return {};\\n\" +\r\n            \"    }\\n\" +\r\n            \"\\n\" +\r\n            \"    const dateObj = {\\n\" +\r\n            \"        year: date.getFullYear(),\\n\" +\r\n            \"        month: addZero(date.getMonth() + 1),\\n\" +\r\n            \"        day: addZero(date.getDate()),\\n\" +\r\n            \"        hour: addZero(date.getHours()),\\n\" +\r\n            \"        minute: addZero(date.getMinutes()),\\n\" +\r\n            \"        second: addZero(date.getSeconds())\\n\" +\r\n            \"    }\\n\" +\r\n            \"\\n\" +\r\n            \"    return dateObj\\n\" +\r\n            \"}\\n\" +\r\n            \"\\n\" +\r\n            \"/**\\n\" +\r\n            \" * 将毫秒时间转换为本地时间字符串，支持格式毫秒 //todo 方法重复 同上面方法 删除\\n\" +\r\n            \" *\\n\" +\r\n            \" * @method getDateWeek\\n\" +\r\n            \" * @param {string} timeStr 源时间，毫秒格式 Date可接受的参数\\n\" +\r\n            \" * @param {type} timeStr 时间格式'yyyy-mm-dd','hh:mm:ss'\\n\" +\r\n            \" * @example\\n\" +\r\n            \" * toLocaleStringByMs(new Date())\\n\" +\r\n            \" * \\\"2020-04-13 10:54:55\\\"\\n\" +\r\n            \" * toLocaleStringByMs(new Date(),'yyyy-mm-dd')\\n\" +\r\n            \" * \\\"2020-04-13\\\"\\n\" +\r\n            \" * toLocaleStringByMs(new Date(),'hh:mm')\\n\" +\r\n            \" * \\\"2020-04-13 10:55:15\\\"\\n\" +\r\n            \" * toLocaleStringByMs(new Date(),'hh:mm:ss')\\n\" +\r\n            \" * \\\"10:55:18\\\"\\n\" +\r\n            \" * @returns {string} 返回格式如yyyy-mm-dd hh:mm:ss\\n\" +\r\n            \" */\\n\" +\r\n            \"function toLocaleStringByMs(timeStr,type) {\\n\" +\r\n            \"    const time = {};\\n\" +\r\n            \"    if(!timeStr){\\n\" +\r\n            \"       return ''\\n\" +\r\n            \"    }\\n\" +\r\n            \"    let date = new Date(timeStr);\\n\" +\r\n            \"\\n\" +\r\n            \"    time.y = date.getFullYear()\\n\" +\r\n            \"    time.m = addZero(date.getMonth() + 1)\\n\" +\r\n            \"    time.d = addZero(date.getDate())\\n\" +\r\n            \"    time.h = addZero(date.getHours())\\n\" +\r\n            \"    time.min = addZero(date.getMinutes())\\n\" +\r\n            \"    time.s = addZero(date.getSeconds())\\n\" +\r\n            \"    if(type === 'yyyy-mm-dd'){\\n\" +\r\n            \"        return `${time.y}-${time.m}-${time.d}`\\n\" +\r\n            \"    }else if(type === 'hh:mm:ss'){\\n\" +\r\n            \"        return `${time.h}:${time.min}:${time.s}`\\n\" +\r\n            \"    }\\n\" +\r\n            \"    return `${time.y}-${time.m}-${time.d} ${time.h}:${time.min}:${time.s}`\\n\" +\r\n            \"}\\n\" +\r\n            \"\\n\" +\r\n            \"/**\\n\" +\r\n            \" * 判断星期几,返回'xxxx年xx月xx日 星期X'\\n\" +\r\n            \" *\\n\" +\r\n            \" * @method getDateWeek\\n\" +\r\n            \" * @param  {string} data 时间字符串 格式 'YY-mm-dd或YYYY-mm-dd'\\n\" +\r\n            \" * @example\\n\" +\r\n            \" * getDateWeek('2010-10-10')\\n\" +\r\n            \" * \\\"2010年10月10日 星期日\\\"\\n\" +\r\n            \" * getDateWeek('20-10-10')\\n\" +\r\n            \" * \\\"20年10月10日 星期六\\\"\\n\" +\r\n            \" * @return {string} str  规范后时间字符串 格式 'xxxx年xx月xx日 星期X'\\n\" +\r\n            \" */\\n\" +\r\n            \"function getDateWeek(date) {\\n\" +\r\n            \"    let dateSplitArr = date.split('-');\\n\" +\r\n            \"    let str = dateSplitArr[0] + '年' + dateSplitArr[1] + '月' + dateSplitArr[2] + '日';\\n\" +\r\n            \"    let week = new Date(date).getDay();\\n\" +\r\n            \"    switch (week) {\\n\" +\r\n            \"        case 0:\\n\" +\r\n            \"            str += ' 星期日';\\n\" +\r\n            \"            break;\\n\" +\r\n            \"        case 1:\\n\" +\r\n            \"            str += ' 星期一';\\n\" +\r\n            \"            break;\\n\" +\r\n            \"        case 2:\\n\" +\r\n            \"            str += ' 星期二';\\n\" +\r\n            \"            break;\\n\" +\r\n            \"        case 3:\\n\" +\r\n            \"            str += ' 星期三';\\n\" +\r\n            \"            break;\\n\" +\r\n            \"        case 4:\\n\" +\r\n            \"            str += ' 星期四';\\n\" +\r\n            \"            break;\\n\" +\r\n            \"        case 5:\\n\" +\r\n            \"            str += ' 星期五';\\n\" +\r\n            \"            break;\\n\" +\r\n            \"        case 6:\\n\" +\r\n            \"            break;\\n\" +\r\n            \"        default:\\n\" +\r\n            \"            str += ' 星期六';\\n\" +\r\n            \"            break;\\n\" +\r\n            \"    }\\n\" +\r\n            \"    return str;\\n\" +\r\n            \"}\\n\" +\r\n            \"\\n\" +\r\n            \"/**\\n\" +\r\n            \" * 比较日期大小（结束时间是否大于开始时间）\\n\" +\r\n            \" *\\n\" +\r\n            \" * @method compareDate\\n\" +\r\n            \" * @param {any} start  开始日期\\n\" +\r\n            \" * @param {any} end    结束日期\\n\" +\r\n            \" * @example\\n\" +\r\n            \" * 参数为new Date可接受的参数\\n\" +\r\n            \" * compareDate('2010-10-10','2010-10-10')    false\\n\" +\r\n            \" * compareDate('2010-10-11','2010-10-12')    true\\n\" +\r\n            \" * compareDate('2010-10-11',new Date())      true\\n\" +\r\n            \" * compareDate('2010-10-11',1586251615416)   true\\n\" +\r\n            \" * @return {Boolean} 结束是否大于开始\\n\" +\r\n            \" */\\n\" +\r\n            \"function compareDate(start,end) {\\n\" +\r\n            \"    return new Date(start).getTime() < new Date(end).getTime()\\n\" +\r\n            \"}\\n\" +\r\n            \"\\n\" +\r\n            \"let timeUtils =  {\\n\" +\r\n            \"    dateFormat,\\n\" +\r\n            \"    addZero,\\n\" +\r\n            \"    startAndEndTime,\\n\" +\r\n            \"    dateToObject,\\n\" +\r\n            \"    valifyTime,\\n\" +\r\n            \"    isTimeContainTime,\\n\" +\r\n            \"    toISOStringByTime,\\n\" +\r\n            \"    toISOStringByDate,\\n\" +\r\n            \"    toISOString,\\n\" +\r\n            \"    toLocaleStringByTime,\\n\" +\r\n            \"    toLocaleStringByDate,\\n\" +\r\n            \"    toLocaleString,\\n\" +\r\n            \"    getTimezoon,\\n\" +\r\n            \"    toLocaleStringByMs,\\n\" +\r\n            \"    getDateWeek,\\n\" +\r\n            \"    compareDate,\\n\" +\r\n            \"}\\n\" +\r\n            \"export {\\n\" +\r\n            \"    dateFormat,\\n\" +\r\n            \"    addZero,\\n\" +\r\n            \"    startAndEndTime,\\n\" +\r\n            \"    dateToObject,\\n\" +\r\n            \"    valifyTime,\\n\" +\r\n            \"    isTimeContainTime,\\n\" +\r\n            \"    toISOStringByTime,\\n\" +\r\n            \"    toISOStringByDate,\\n\" +\r\n            \"    toISOString,\\n\" +\r\n            \"    toLocaleStringByTime,\\n\" +\r\n            \"    toLocaleStringByDate,\\n\" +\r\n            \"    toLocaleString,\\n\" +\r\n            \"    getTimezoon,\\n\" +\r\n            \"    toLocaleStringByMs,\\n\" +\r\n            \"    getDateWeek,\\n\" +\r\n            \"    compareDate,\\n\" +\r\n            \"}\\n\" +\r\n            \"export default timeUtils\\n\" +\r\n            \"```\",\r\n    },\r\n]","export default [\r\n    {\r\n        title:'修改浏览器默认滚动条样式',\r\n        name:'1',\r\n        content:'```css\\n' +\r\n            '// 滚动条整体部分\\n' +\r\n            '&::-webkit-scrollbar {\\n' +\r\n            '  width: 6px;\\n' +\r\n            '  height: 6px;\\n' +\r\n            '}\\n' +\r\n            '// 滚动条的轨道的两端按钮，允许通过点击微调小方块的位置。\\n' +\r\n            '&::-webkit-scrollbar-button {\\n' +\r\n            '  display: none;\\n' +\r\n            '}\\n' +\r\n            '// 滚动条的轨道（里面装有Thumb）\\n' +\r\n            '&::-webkit-scrollbar-track {\\n' +\r\n            '  background: transparent;\\n' +\r\n            '}\\n' +\r\n            '// 滚动条的轨道（里面装有Thumb）\\n' +\r\n            '&::-webkit-scrollbar-track-piece {\\n' +\r\n            '  background-color: transparent;\\n' +\r\n            '}\\n' +\r\n            '// 滚动条里面的小方块，能向上向下移动（或往左往右移动，取决于是垂直滚动条还是水平滚动条）\\n' +\r\n            '&::-webkit-scrollbar-thumb {\\n' +\r\n            '  background: #007cd6;\\n' +\r\n            '  cursor: pointer;\\n' +\r\n            '  border-radius: 4px;\\n' +\r\n            '}\\n' +\r\n            '// 边角，即两个滚动条的交汇处\\n' +\r\n            '&::-webkit-scrollbar-corner {\\n' +\r\n            '  display: none;\\n' +\r\n            '}\\n' +\r\n            '// 两个滚动条的交汇处上用于通过拖动调整元素大小的小控件\\n' +\r\n            '&::-webkit-resizer {\\n' +\r\n            '  display: none;\\n' +\r\n            '}\\n' +\r\n            '```'\r\n    }\r\n]","export default [\r\n    {\r\n        name:'1',\r\n        title:'Vuex',\r\n        content:\"## Vuex\\n\" +\r\n            \"\\n\" +\r\n            \"Vuex 是一个专为 Vue.js 应用程序开发的**状态管理模式**。\\n\" +\r\n            \"\\n\" +\r\n            \"调试工具：vue devtools\\n\" +\r\n            \"\\n\" +\r\n            \"> Vuex就像眼镜：您自会知道什么时候需要它。\\n\" +\r\n            \"\\n\" +\r\n            \"### 1、state\\n\" +\r\n            \"\\n\" +\r\n            \"在store中定义数据，在组件中直接使用：\\n\" +\r\n            \"\\n\" +\r\n            \"目录：`store/index.js`\\n\" +\r\n            \"\\n\" +\r\n            \"```js\\n\" +\r\n            \"export default new Vuex.Store({\\n\" +\r\n            \"    // state相当于组件中的data，专门用来存放全局的数据\\n\" +\r\n            \"    state: {\\n\" +\r\n            \"        num: 0\\n\" +\r\n            \"    },\\n\" +\r\n            \"    getters: {},\\n\" +\r\n            \"    mutations: {},\\n\" +\r\n            \"    actions: {},\\n\" +\r\n            \"    modules: {}\\n\" +\r\n            \"})\\n\" +\r\n            \"```\\n\" +\r\n            \"\\n\" +\r\n            \"目录：`Home.vue`\\n\" +\r\n            \"\\n\" +\r\n            \"```html\\n\" +\r\n            \"<template>\\n\" +\r\n            \"  <div class=\\\"home\\\">\\n\" +\r\n            \"    <h2>Home页面的数字：{{$store.state.num}}</h2>\\n\" +\r\n            \"  </div>\\n\" +\r\n            \"</template>\\n\" +\r\n            \"\\n\" +\r\n            \"<script>\\n\" +\r\n            \"export default {\\n\" +\r\n            \"  \\n\" +\r\n            \"}\\n\" +\r\n            \"</script>\\n\" +\r\n            \"```\\n\" +\r\n            \"\\n\" +\r\n            \"或者写为：\\n\" +\r\n            \"\\n\" +\r\n            \"```html\\n\" +\r\n            \"<template>\\n\" +\r\n            \"  <div class=\\\"about\\\">\\n\" +\r\n            \"    <h2>About页面的数字：{{num}}</h2>\\n\" +\r\n            \"  </div>\\n\" +\r\n            \"</template>\\n\" +\r\n            \"\\n\" +\r\n            \"<script>\\n\" +\r\n            \"export default {\\n\" +\r\n            \"  computed: {\\n\" +\r\n            \"    num(){\\n\" +\r\n            \"      return this.$store.state.num\\n\" +\r\n            \"    }\\n\" +\r\n            \"  }\\n\" +\r\n            \"}\\n\" +\r\n            \"</script>\\n\" +\r\n            \"```\\n\" +\r\n            \"\\n\" +\r\n            \"### 2、getters\\n\" +\r\n            \"\\n\" +\r\n            \"将组件中统一使用的computed都放到getters里面来操作\\n\" +\r\n            \"\\n\" +\r\n            \"目录：`store/index.js`\\n\" +\r\n            \"\\n\" +\r\n            \"```js\\n\" +\r\n            \"export default new Vuex.Store({\\n\" +\r\n            \"    // state相当于组件中的data，专门用来存放全局的数据\\n\" +\r\n            \"    state: {\\n\" +\r\n            \"        num: 0\\n\" +\r\n            \"    },\\n\" +\r\n            \"    // getters相当于组件中的computed，getters是全局的，computed是组件内部使用的\\n\" +\r\n            \"    getters: {\\n\" +\r\n            \"        getNum(state) {\\n\" +\r\n            \"            return state.num\\n\" +\r\n            \"        }\\n\" +\r\n            \"    },\\n\" +\r\n            \"    mutations: {},\\n\" +\r\n            \"    actions: {},\\n\" +\r\n            \"    modules: {}\\n\" +\r\n            \"})\\n\" +\r\n            \"```\\n\" +\r\n            \"\\n\" +\r\n            \"目录：`Home.vue`\\n\" +\r\n            \"\\n\" +\r\n            \"```html\\n\" +\r\n            \"<template>\\n\" +\r\n            \"  <div class=\\\"home\\\">\\n\" +\r\n            \"    <h2>Home页面的数字：{{$store.getters.getNum}}</h2>\\n\" +\r\n            \"  </div>\\n\" +\r\n            \"</template>\\n\" +\r\n            \"\\n\" +\r\n            \"<script>\\n\" +\r\n            \"export default {\\n\" +\r\n            \"  \\n\" +\r\n            \"}\\n\" +\r\n            \"</script>\\n\" +\r\n            \"```\\n\" +\r\n            \"\\n\" +\r\n            \"### 3、mutations\\n\" +\r\n            \"\\n\" +\r\n            \"更改 Vuex 的 store 中的状态的唯一方法是提交 mutation。\\n\" +\r\n            \"\\n\" +\r\n            \"目录：`store/index.js`\\n\" +\r\n            \"\\n\" +\r\n            \"```js\\n\" +\r\n            \"export default new Vuex.Store({\\n\" +\r\n            \"    // state相当于组件中的data，专门用来存放全局的数据\\n\" +\r\n            \"    state: {\\n\" +\r\n            \"        num: 0\\n\" +\r\n            \"    },\\n\" +\r\n            \"    // getters相当于组件中的computed，getters是全局的，computed是组件内部使用的\\n\" +\r\n            \"    getters: {\\n\" +\r\n            \"        getNum(state) {\\n\" +\r\n            \"            return state.num\\n\" +\r\n            \"        }\\n\" +\r\n            \"    },\\n\" +\r\n            \"    // mutations相当于组件中的methods，但是它不能使用异步方法（定时器、axios）\\n\" +\r\n            \"    mutations: {\\n\" +\r\n            \"        // 让num累加\\n\" +\r\n            \"        // payload是一个形参，如果组件在commit时，有传这个参数过来，就存在，如果没有传过来，就是undefined\\n\" +\r\n            \"        increase(state, payload){\\n\" +\r\n            \"            state.num += payload ? payload : 1;\\n\" +\r\n            \"        }\\n\" +\r\n            \"    },\\n\" +\r\n            \"    actions: {},\\n\" +\r\n            \"    modules: {}\\n\" +\r\n            \"})\\n\" +\r\n            \"```\\n\" +\r\n            \"\\n\" +\r\n            \"目录：`Btn.vue`\\n\" +\r\n            \"\\n\" +\r\n            \"```html\\n\" +\r\n            \"<template>\\n\" +\r\n            \"    <div>\\n\" +\r\n            \"        <button @click=\\\"$store.commit('increase', 2)\\\">点击加1</button>\\n\" +\r\n            \"    </div>\\n\" +\r\n            \"</template>\\n\" +\r\n            \"<script>\\n\" +\r\n            \"export default {\\n\" +\r\n            \"   methods: {\\n\" +\r\n            \"       /* addFn(){\\n\" +\r\n            \"           // 调用store中的mutations里的increase方法\\n\" +\r\n            \"           // 传参的话，使用payload\\n\" +\r\n            \"           this.$store.commit('increase', 2)\\n\" +\r\n            \"       } */\\n\" +\r\n            \"   }\\n\" +\r\n            \"}\\n\" +\r\n            \"</script>\\n\" +\r\n            \"```\\n\" +\r\n            \"\\n\" +\r\n            \"### 4、actions\\n\" +\r\n            \"\\n\" +\r\n            \"actions是store中专门用来处理异步的，实际修改状态值的，还是mutations\\n\" +\r\n            \"\\n\" +\r\n            \"目录：`store/index.js`\\n\" +\r\n            \"\\n\" +\r\n            \"```js\\n\" +\r\n            \"// 在store(仓库)下的index.js这份文件，就是用来做状态管理\\n\" +\r\n            \"import Vue from 'vue'\\n\" +\r\n            \"import Vuex from 'vuex'\\n\" +\r\n            \"\\n\" +\r\n            \"Vue.use(Vuex)\\n\" +\r\n            \"\\n\" +\r\n            \"export default new Vuex.Store({\\n\" +\r\n            \"    // state相当于组件中的data，专门用来存放全局的数据\\n\" +\r\n            \"    state: {\\n\" +\r\n            \"        num: 0\\n\" +\r\n            \"    },\\n\" +\r\n            \"    // getters相当于组件中的computed，getters是全局的，computed是组件内部使用的\\n\" +\r\n            \"    getters: {\\n\" +\r\n            \"        getNum(state) {\\n\" +\r\n            \"            return state.num\\n\" +\r\n            \"        }\\n\" +\r\n            \"    },\\n\" +\r\n            \"    // mutations相当于组件中的methods，但是它不能使用异步方法（定时器、axios）\\n\" +\r\n            \"    mutations: {\\n\" +\r\n            \"        // 让num累加\\n\" +\r\n            \"        // payload是一个形参，如果组件在commit时，有传这个参数过来，就存在，如果没有传过来，就是undefined\\n\" +\r\n            \"        increase(state, payload){\\n\" +\r\n            \"            state.num += payload ? payload : 1;\\n\" +\r\n            \"        },\\n\" +\r\n            \"        // 让num累减\\n\" +\r\n            \"        decrease(state){\\n\" +\r\n            \"            state.num--;\\n\" +\r\n            \"        }\\n\" +\r\n            \"    },\\n\" +\r\n            \"    // actions专门用来处理异步，实际修改状态值的，依然是mutations\\n\" +\r\n            \"    actions: {\\n\" +\r\n            \"        // 点击了“减1”按钮后，放慢一秒再执行减法\\n\" +\r\n            \"        decreaseAsync(context){\\n\" +\r\n            \"            context.commit('decrease')\\n\" +\r\n            \"        }\\n\" +\r\n            \"    },\\n\" +\r\n            \"    modules: {}\\n\" +\r\n            \"})\\n\" +\r\n            \"\\n\" +\r\n            \"```\\n\" +\r\n            \"\\n\" +\r\n            \"目录：`Btn.vue`\\n\" +\r\n            \"\\n\" +\r\n            \"```html\\n\" +\r\n            \"<template>\\n\" +\r\n            \"    <div>\\n\" +\r\n            \"        <button @click=\\\"$store.commit('increase', 2)\\\">点击加1</button>\\n\" +\r\n            \"        <button @click=\\\"$store.dispatch('decreaseAsync')\\\">点击延迟减1</button>\\n\" +\r\n            \"    </div>\\n\" +\r\n            \"</template>\\n\" +\r\n            \"<script>\\n\" +\r\n            \"export default {\\n\" +\r\n            \"   methods: {\\n\" +\r\n            \"       /* addFn(){\\n\" +\r\n            \"           // 调用store中的mutations里的increase方法\\n\" +\r\n            \"           // 传参的话，使用payload\\n\" +\r\n            \"           this.$store.commit('increase', 2)\\n\" +\r\n            \"       }\\n\" +\r\n            \"       reduceFn(){\\n\" +\r\n            \"           this.$store.dispatch('decreaseAsync')\\n\" +\r\n            \"       } */\\n\" +\r\n            \"   }\\n\" +\r\n            \"}\\n\" +\r\n            \"</script>\\n\" +\r\n            \"```\\n\" +\r\n            \"\\n\" +\r\n            \"### 5、辅助函数\\n\" +\r\n            \"\\n\" +\r\n            \"mapState和mapGetters在组件中都是写在computed里面\\n\" +\r\n            \"\\n\" +\r\n            \"```html\\n\" +\r\n            \"<template>\\n\" +\r\n            \"\\t<div>\\n\" +\r\n            \"        <h2>Home页面的数字：{{num}}</h2>\\n\" +\r\n            \"        <h2>About页面的数字：{{getNum}}</h2>\\n\" +\r\n            \"    </div>\\n\" +\r\n            \"</template>\\n\" +\r\n            \"\\n\" +\r\n            \"<script>\\n\" +\r\n            \"import { mapState, mapGetters } from 'vuex'\\n\" +\r\n            \"\\n\" +\r\n            \"export default {\\n\" +\r\n            \"  computed: {\\n\" +\r\n            \"    ...mapState(['num'])\\n\" +\r\n            \"    ...mapGetters(['getNum'])\\n\" +\r\n            \"  }\\n\" +\r\n            \"}\\n\" +\r\n            \"</script>\\n\" +\r\n            \"```\\n\" +\r\n            \"\\n\" +\r\n            \"mapMutations和mapActions在组件中都是写在methods里面\\n\" +\r\n            \"\\n\" +\r\n            \"```html\\n\" +\r\n            \"<template>\\n\" +\r\n            \"\\t<div>\\n\" +\r\n            \"        <button @click=\\\"increase(2)\\\">点击加1</button>\\n\" +\r\n            \"        <button @click=\\\"decreaseAsync()\\\">点击延迟减1</button>\\n\" +\r\n            \"    </div>\\n\" +\r\n            \"</template>\\n\" +\r\n            \"\\n\" +\r\n            \"<script>\\n\" +\r\n            \"import { mapMutations, mapActions } from 'vuex'\\n\" +\r\n            \"\\n\" +\r\n            \"export default {\\n\" +\r\n            \"  methods: {\\n\" +\r\n            \"       ...mapMutations(['increase']),\\n\" +\r\n            \"       ...mapActions(['decreaseAsync'])\\n\" +\r\n            \"   }\\n\" +\r\n            \"}\\n\" +\r\n            \"</script>\\n\" +\r\n            \"```\\n\" +\r\n            \"\\n\" +\r\n            \"### 6、拆分写法\\n\" +\r\n            \"\\n\" +\r\n            \"store中的所有属性，都可以拆分成单独的js文件来书写\\n\" +\r\n            \"\\n\" +\r\n            \"### 7、modules\\n\" +\r\n            \"\\n\" +\r\n            \"![](.\\\\1111.png)我们的store可以认为是一个主模块，它下边可以分解为很多子模块，子模块都可以单独领出来写，写完再导入到主模块中。下面以 `users` 子模块举例：\\n\" +\r\n            \"\\n\" +\r\n            \"将mutations中所有的方法，归纳起来。\\n\" +\r\n            \"\\n\" +\r\n            \"目录：`mutations_type.js`\\n\" +\r\n            \"\\n\" +\r\n            \"```js\\n\" +\r\n            \"export const MUTATIONS_TYPE = {\\n\" +\r\n            \"    INCREASE: 'increase',\\n\" +\r\n            \"    DECREASE: 'decrease'\\n\" +\r\n            \"}\\n\" +\r\n            \"\\n\" +\r\n            \"export default {\\n\" +\r\n            \"    // 让num累加\\n\" +\r\n            \"    // payload是一个形参，如果组件在commit时，有传这个参数过来，就存在，如果没有传过来，就是undefined\\n\" +\r\n            \"    [MUTATIONS_TYPE.INCREASE](state, payload){\\n\" +\r\n            \"        state.num += payload ? payload : 1;\\n\" +\r\n            \"    },\\n\" +\r\n            \"    // 让num累减\\n\" +\r\n            \"    [MUTATIONS_TYPE.DECREASE](state){\\n\" +\r\n            \"        state.num--;\\n\" +\r\n            \"    }\\n\" +\r\n            \"}\\n\" +\r\n            \"```\\n\" +\r\n            \"\\n\" +\r\n            \"目录：`store/index.js`\\n\" +\r\n            \"\\n\" +\r\n            \"```js\\n\" +\r\n            \"import mutations from './mutaions_type'\\n\" +\r\n            \"\\n\" +\r\n            \"export default new Vuex.Store({\\n\" +\r\n            \"    ...\\n\" +\r\n            \"    mutations,\\n\" +\r\n            \"    ...\\n\" +\r\n            \"})\\n\" +\r\n            \"```\\n\" +\r\n            \"\\n\" +\r\n            \"组件中：\\n\" +\r\n            \"\\n\" +\r\n            \"```html\\n\" +\r\n            \"<template>\\n\" +\r\n            \"  <div class=\\\"about\\\">\\n\" +\r\n            \"    <h2>About页面的数字：{{getNum}}</h2>\\n\" +\r\n            \"    <button @click=\\\"increase()\\\">About的按钮，点击加1</button>\\n\" +\r\n            \"  </div>\\n\" +\r\n            \"</template>\\n\" +\r\n            \"<script>\\n\" +\r\n            \"import { mapGetters, mapMutations } from 'vuex'\\n\" +\r\n            \"import { MUTATIONS_TYPE } from '@/store/mutaions_type.js'\\n\" +\r\n            \"export default {\\n\" +\r\n            \"  computed: {\\n\" +\r\n            \"    ...mapGetters(['getNum'])\\n\" +\r\n            \"  },\\n\" +\r\n            \"  methods: {\\n\" +\r\n            \"    // 方法一：\\n\" +\r\n            \"    ...mapMutations([MUTATIONS_TYPE.INCREASE])\\n\" +\r\n            \"      \\n\" +\r\n            \"    // 方法二：\\n\" +\r\n            \"    /* increase(){\\n\" +\r\n            \"      this.$store.commit(MUTATIONS_TYPE.INCREASE)\\n\" +\r\n            \"    } */\\n\" +\r\n            \"  }\\n\" +\r\n            \"}\\n\" +\r\n            \"</script>\\n\" +\r\n            \"\\n\" +\r\n            \"```\\n\" +\r\n            \"\\n\" +\r\n            \"\\n\" +\r\n            \"\\n\"\r\n    },\r\n    {\r\n        name:'2',\r\n        title:'vue大屏动态配置组件数量、每个组件的占比和位置代码示例',\r\n        content:\"以下是使用Vue.js创建一个大屏组件，并且可以通过传递props来配置组件数量、每个组件的占比和位置的代码示例：\\n\" +\r\n            \"\\n\" +\r\n            \"```js\\n\" +\r\n            \"<template>\\n\" +\r\n            \"  <div class=\\\"big-screen\\\">\\n\" +\r\n            \"    <div v-for=\\\"(item, index) in screenList\\\" :key=\\\"index\\\" :style=\\\"getStyle(item)\\\">\\n\" +\r\n            \"      <slot :name=\\\"item.name\\\"></slot>\\n\" +\r\n            \"    </div>\\n\" +\r\n            \"  </div>\\n\" +\r\n            \"</template>\\n\" +\r\n            \"\\n\" +\r\n            \"<script>\\n\" +\r\n            \"export default {\\n\" +\r\n            \"  name: 'BigScreen',\\n\" +\r\n            \"  props: {\\n\" +\r\n            \"    screenList: {\\n\" +\r\n            \"      type: Array,\\n\" +\r\n            \"      required: true,\\n\" +\r\n            \"      default: () => []\\n\" +\r\n            \"    }\\n\" +\r\n            \"  },\\n\" +\r\n            \"  methods: {\\n\" +\r\n            \"    getStyle(item) {\\n\" +\r\n            \"      return {\\n\" +\r\n            \"        position: 'absolute',\\n\" +\r\n            \"        left: `${item.left}%`,\\n\" +\r\n            \"        top: `${item.top}%`,\\n\" +\r\n            \"        width: `${item.width}%`,\\n\" +\r\n            \"        height: `${item.height}%`\\n\" +\r\n            \"      }\\n\" +\r\n            \"    }\\n\" +\r\n            \"  }\\n\" +\r\n            \"}\\n\" +\r\n            \"</script>\\n\" +\r\n            \"\\n\" +\r\n            \"<style>\\n\" +\r\n            \".big-screen {\\n\" +\r\n            \"  position: relative;\\n\" +\r\n            \"  width: 100%;\\n\" +\r\n            \"  height: 100%;\\n\" +\r\n            \"}\\n\" +\r\n            \"</style>\\n\" +\r\n            \"```\\n\" +\r\n            \"\\n\" +\r\n            \"在这个示例中，我们定义了一个名为`BigScreen`的组件，并且传递了一个名为`screenList`的props，它是一个数组，用来指定大屏组件的个数、占比和位置。\\n\" +\r\n            \"\\n\" +\r\n            \"在组件的模板中，我们使用了`v-for`来遍历`screenList`数组，并为每个大屏组件指定样式（位置和大小），然后使用插槽来插入具体的大屏组件内容。\\n\" +\r\n            \"\\n\" +\r\n            \"在组件的方法中，我们定义了一个名为`getStyle`的方法，它接受一个参数`item`，并返回一个包含位置和大小信息的样式对象，这个样式对象会被应用到每个大屏组件的容器元素上。\\n\" +\r\n            \"\\n\" +\r\n            \"现在让我们看一个如何使用这个`BigScreen`组件的示例：\\n\" +\r\n            \"\\n\" +\r\n            \"```js\\n\" +\r\n            \"<template>\\n\" +\r\n            \"  <div style=\\\"height:100%\\\">\\n\" +\r\n            \"    <big-screen :screen-list=\\\"screenList\\\">\\n\" +\r\n            \"      <template #screen1>\\n\" +\r\n            \"        <div>第一个大屏内容</div>\\n\" +\r\n            \"      </template>\\n\" +\r\n            \"      <template #screen2>\\n\" +\r\n            \"        <div>第二个大屏内容</div>\\n\" +\r\n            \"      </template>\\n\" +\r\n            \"    </big-screen>\\n\" +\r\n            \"  </div>\\n\" +\r\n            \"</template>\\n\" +\r\n            \"\\n\" +\r\n            \"<script>\\n\" +\r\n            \"import BigScreen from './BigScreen.vue'\\n\" +\r\n            \"\\n\" +\r\n            \"export default {\\n\" +\r\n            \"  name: 'App',\\n\" +\r\n            \"  components: {\\n\" +\r\n            \"    BigScreen\\n\" +\r\n            \"  },\\n\" +\r\n            \"  data() {\\n\" +\r\n            \"    return {\\n\" +\r\n            \"      screenList: [\\n\" +\r\n            \"        { name: 'screen1', left: 0, top: 0, width: 50, height: 100 },\\n\" +\r\n            \"        { name: 'screen2', left: 50, top: 0, width: 50, height: 100 }\\n\" +\r\n            \"      ]\\n\" +\r\n            \"    }\\n\" +\r\n            \"  }\\n\" +\r\n            \"}\\n\" +\r\n            \"</script>\\n\" +\r\n            \"```\\n\" +\r\n            \"\\n\" +\r\n            \"在这个示例中，我们在父组件中使用了`BigScreen`组件，并且传递了一个名为`screenList`的props，它包含了两个元素，分别代表了两个大屏组件的位置、大小和内容名称。\\n\" +\r\n            \"\\n\" +\r\n            \"我们也定义了两个插槽（`#screen1`和`#screen2`），它们分别对应了`screenList`数组中的两个元素，表示在第一个大屏和第二个大屏\"\r\n    },\r\n    {\r\n        name:'3',\r\n        title:'vue2+原生js实现上下无缝滚动，鼠标移入停止无缝滚动，可以鼠标滚轮控制滚动，鼠标移出可以继续上下无缝滚动',\r\n        content:\"```js\\n\" +\r\n            \"<template>\\n\" +\r\n            \"  <div class=\\\"scroll-container\\\" @mouseenter=\\\"stopScroll\\\" @mouseleave=\\\"startScroll\\\" @wheel=\\\"onWheel\\\">\\n\" +\r\n            \"    <div class=\\\"scroll-content\\\">\\n\" +\r\n            \"      <div class=\\\"scroll-item\\\" v-for=\\\"item in scrollData\\\" :key=\\\"item\\\">{{ item }}</div>\\n\" +\r\n            \"      <div class=\\\"scroll-item\\\" v-for=\\\"item in scrollData\\\" :key=\\\"item\\\">{{ item }}</div>\\n\" +\r\n            \"    </div>\\n\" +\r\n            \"  </div>\\n\" +\r\n            \"</template>\\n\" +\r\n            \"\\n\" +\r\n            \"<script>\\n\" +\r\n            \"export default {\\n\" +\r\n            \"  name: 'SeamlessScroll',\\n\" +\r\n            \"  data() {\\n\" +\r\n            \"    return {\\n\" +\r\n            \"      scrollData: ['Item 1', 'Item 2', 'Item 3', 'Item 4', 'Item 5'],\\n\" +\r\n            \"      scrollInterval: null,\\n\" +\r\n            \"      scrollSpeed: 1,\\n\" +\r\n            \"    }\\n\" +\r\n            \"  },\\n\" +\r\n            \"  mounted() {\\n\" +\r\n            \"    this.startScroll();\\n\" +\r\n            \"  },\\n\" +\r\n            \"  beforeDestroy() {\\n\" +\r\n            \"    clearInterval(this.scrollInterval);\\n\" +\r\n            \"  },\\n\" +\r\n            \"  methods: {\\n\" +\r\n            \"    startScroll() {\\n\" +\r\n            \"      this.scrollInterval = setInterval(() => {\\n\" +\r\n            \"        if (this.$el.scrollTop >= this.$el.scrollHeight / 2) {\\n\" +\r\n            \"          this.$el.scrollTop = 0;\\n\" +\r\n            \"        } else {\\n\" +\r\n            \"          this.$el.scrollTop += this.scrollSpeed;\\n\" +\r\n            \"        }\\n\" +\r\n            \"      }, 10);\\n\" +\r\n            \"    },\\n\" +\r\n            \"    stopScroll() {\\n\" +\r\n            \"      clearInterval(this.scrollInterval);\\n\" +\r\n            \"    },\\n\" +\r\n            \"    onWheel(event) {\\n\" +\r\n            \"      event.preventDefault();\\n\" +\r\n            \"      this.$el.scrollTop += event.deltaY;\\n\" +\r\n            \"    },\\n\" +\r\n            \"  },\\n\" +\r\n            \"}\\n\" +\r\n            \"</script>\\n\" +\r\n            \"\\n\" +\r\n            \"<style scoped>\\n\" +\r\n            \".scroll-container {\\n\" +\r\n            \"  height: 200px;\\n\" +\r\n            \"  overflow: hidden;\\n\" +\r\n            \"}\\n\" +\r\n            \".scroll-content {\\n\" +\r\n            \"  display: flex;\\n\" +\r\n            \"  flex-direction: column;\\n\" +\r\n            \"}\\n\" +\r\n            \".scroll-item {\\n\" +\r\n            \"  height: 50px;\\n\" +\r\n            \"}\\n\" +\r\n            \"</style>\\n\" +\r\n            \"```\\n\" +\r\n            \"\\n\"\r\n    },\r\n    {\r\n        name:'4',\r\n        title:'vue2+Datav实现表格上下无缝滚动',\r\n        content:\"1. 首先需要在vue引入DataV组件 \\n\" +\r\n            \"   ```js\\n\" +\r\n            \"   npm install @jiaminghi/data-view\\n\" +\r\n            \"   ```\\n\" +\r\n            \"\\n\" +\r\n            \"   \\n\" +\r\n            \"\\n\" +\r\n            \"2. 在main.js注册为全局组件\\n\" +\r\n            \"   ```js\\n\" +\r\n            \"   // 将自动注册所有组件为全局组件\\n\" +\r\n            \"   import dataV from '@jiaminghi/data-view'\\n\" +\r\n            \"   \\n\" +\r\n            \"   Vue.use(dataV)\\n\" +\r\n            \"   ```\\n\" +\r\n            \"\\n\" +\r\n            \"3. 使用vue文件代码如下\\n\" +\r\n            \"   ```vue\\n\" +\r\n            \"   <template>\\n\" +\r\n            \"     <div id=\\\"the-homework-table\\\">\\n\" +\r\n            \"       <dv-scroll-board\\n\" +\r\n            \"         :config=\\\"config\\\"\\n\" +\r\n            \"         style=\\\"width: 100%; height: 100%\\\"\\n\" +\r\n            \"       />\\n\" +\r\n            \"     </div>\\n\" +\r\n            \"   </template>\\n\" +\r\n            \"   \\n\" +\r\n            \"   <script>\\n\" +\r\n            \"   export default {\\n\" +\r\n            \"     data() {\\n\" +\r\n            \"       return {\\n\" +\r\n            \"         config: {\\n\" +\r\n            \"           header: [\\n\" +\r\n            \"             \\\"时间\\\",\\n\" +\r\n            \"           ],\\n\" +\r\n            \"           data: [\\n\" +\r\n            \"             [\\n\" +\r\n            \"               \\\"2022/11/3 07:45:30\\\",\\n\" +\r\n            \"             ],\\n\" +\r\n            \"            [\\n\" +\r\n            \"               \\\"2022/11/3 07:45:30\\\",\\n\" +\r\n            \"             ],\\n\" +\r\n            \"             [\\n\" +\r\n            \"               \\\"2022/11/3 07:45:30\\\",\\n\" +\r\n            \"             ],\\n\" +\r\n            \"             [\\n\" +\r\n            \"               \\\"2022/11/3 07:45:30\\\",\\n\" +\r\n            \"             ],\\n\" +\r\n            \"             [\\n\" +\r\n            \"               \\\"2022/11/3 07:45:30\\\",\\n\" +\r\n            \"             ],\\n\" +\r\n            \"             [\\n\" +\r\n            \"               \\\"2022/11/3 07:45:30\\\",\\n\" +\r\n            \"             ],\\n\" +\r\n            \"             [\\n\" +\r\n            \"               \\\"2022/11/3 07:45:30\\\",\\n\" +\r\n            \"             ],\\n\" +\r\n            \"             [\\n\" +\r\n            \"               \\\"2022/11/3 07:45:30\\\",\\n\" +\r\n            \"             ],\\n\" +\r\n            \"             [\\n\" +\r\n            \"               \\\"2022/11/3 07:45:30\\\",\\n\" +\r\n            \"             ],\\n\" +\r\n            \"             [\\n\" +\r\n            \"               \\\"2022/11/3 07:45:30\\\",\\n\" +\r\n            \"             ],\\n\" +\r\n            \"             [\\n\" +\r\n            \"               \\\"2022/11/3 07:45:30\\\",\\n\" +\r\n            \"             ],\\n\" +\r\n            \"           ],\\n\" +\r\n            \"           index: true,//增加序号显示\\n\" +\r\n            \"           rowNum: 10,//超过10行启动无缝滚动\\n\" +\r\n            \"         },\\n\" +\r\n            \"       };\\n\" +\r\n            \"     },\\n\" +\r\n            \"   };\\n\" +\r\n            \"   </script>\\n\" +\r\n            \"   \\n\" +\r\n            \"   <style lang=\\\"less\\\" scoped>\\n\" +\r\n            \"   #the-homework-table {\\n\" +\r\n            \"     width: 100%;\\n\" +\r\n            \"     height: 100%;\\n\" +\r\n            \"   }\\n\" +\r\n            \"   /deep/ .dv-scroll-board .header {\\n\" +\r\n            \"     font-size: 25px;\\n\" +\r\n            \"   }\\n\" +\r\n            \"   /deep/ .dv-scroll-board .rows .row-item {\\n\" +\r\n            \"     font-size: 24px;\\n\" +\r\n            \"   }\\n\" +\r\n            \"   /deep/ .dv-scroll-board .rows .ceil {\\n\" +\r\n            \"     text-align: center;\\n\" +\r\n            \"   }\\n\" +\r\n            \"   /deep/ .dv-scroll-board .header .header-item {\\n\" +\r\n            \"     text-align: center;\\n\" +\r\n            \"   }\\n\" +\r\n            \"   </style>\\n\" +\r\n            \"   ```\\n\" +\r\n            \"\\n\" +\r\n            \"   \"\r\n    },\r\n    {\r\n        name:'5',\r\n        title:'vue2+echarts封装组件  饼图组件',\r\n        content:\"```js\\n\" +\r\n            \"<template>\\n\" +\r\n            \"  <div ref=\\\"chart\\\" :style=\\\"{ height: '100%', width: '100%' }\\\"></div>\\n\" +\r\n            \"</template>\\n\" +\r\n            \"\\n\" +\r\n            \"<script>\\n\" +\r\n            \"import echarts from \\\"echarts\\\";\\n\" +\r\n            \"\\n\" +\r\n            \"export default {\\n\" +\r\n            \"  props: {\\n\" +\r\n            \"    // 接受数据作为 props\\n\" +\r\n            \"    data: {\\n\" +\r\n            \"      type: Array,\\n\" +\r\n            \"      required: true,\\n\" +\r\n            \"    },\\n\" +\r\n            \"    // 接受颜色作为 props\\n\" +\r\n            \"    colors: {\\n\" +\r\n            \"      type: Array,\\n\" +\r\n            \"      default() {\\n\" +\r\n            \"        return [\\\"#00BFFF\\\", \\\"#FF6B00\\\"];\\n\" +\r\n            \"      },\\n\" +\r\n            \"    },\\n\" +\r\n            \"    //标题\\n\" +\r\n            \"    chartTitle: {\\n\" +\r\n            \"      type: String,\\n\" +\r\n            \"      default:''\\n\" +\r\n            \"    },\\n\" +\r\n            \"    // 是否显示标签\\n\" +\r\n            \"    showLabel: {\\n\" +\r\n            \"      type: Boolean,\\n\" +\r\n            \"      default: true,\\n\" +\r\n            \"    },\\n\" +\r\n            \"    // 标签位置\\n\" +\r\n            \"    labelPosition: {\\n\" +\r\n            \"      type: String,\\n\" +\r\n            \"      default: \\\"inside\\\",\\n\" +\r\n            \"    },\\n\" +\r\n            \"    // 标签字体大小\\n\" +\r\n            \"    labelFontSize: {\\n\" +\r\n            \"      type: Number,\\n\" +\r\n            \"      default: 14,\\n\" +\r\n            \"    },\\n\" +\r\n            \"    // 是否自适应\\n\" +\r\n            \"    responsive: {\\n\" +\r\n            \"      type: Boolean,\\n\" +\r\n            \"      default: true,\\n\" +\r\n            \"    },\\n\" +\r\n            \"    // series 名称\\n\" +\r\n            \"    seriesName: {\\n\" +\r\n            \"      type: String,\\n\" +\r\n            \"      required: true,\\n\" +\r\n            \"    },\\n\" +\r\n            \"    // 是否显示图例\\n\" +\r\n            \"    showLegend: {\\n\" +\r\n            \"      type: Boolean,\\n\" +\r\n            \"      default: false,\\n\" +\r\n            \"    },\\n\" +\r\n            \"    // 图例位置\\n\" +\r\n            \"    legendPosition: {\\n\" +\r\n            \"      type: String,\\n\" +\r\n            \"      default: \\\"right\\\",\\n\" +\r\n            \"    },\\n\" +\r\n            \"  },\\n\" +\r\n            \"  data() {\\n\" +\r\n            \"    return {\\n\" +\r\n            \"      // 设置初始高度\\n\" +\r\n            \"      chartHeight: \\\"300px\\\",\\n\" +\r\n            \"    };\\n\" +\r\n            \"  },\\n\" +\r\n            \"  mounted() {\\n\" +\r\n            \"    // 渲染图表\\n\" +\r\n            \"    this.renderChart();\\n\" +\r\n            \"    // 如果需要自适应，则监听窗口大小变化\\n\" +\r\n            \"    if (this.responsive) {\\n\" +\r\n            \"      window.addEventListener(\\\"resize\\\", this.renderChart);\\n\" +\r\n            \"    }\\n\" +\r\n            \"  },\\n\" +\r\n            \"  beforeDestroy() {\\n\" +\r\n            \"    // 如果需要自适应，则在组件销毁前移除监听器\\n\" +\r\n            \"    if (this.responsive) {\\n\" +\r\n            \"      window.removeEventListener(\\\"resize\\\", this.renderChart);\\n\" +\r\n            \"    }\\n\" +\r\n            \"  },\\n\" +\r\n            \"  methods: {\\n\" +\r\n            \"    renderChart() {\\n\" +\r\n            \"      // 初始化 echarts 实例\\n\" +\r\n            \"      const chart = echarts.init(this.$refs.chart);\\n\" +\r\n            \"      // 设置图表选项\\n\" +\r\n            \"      chart.setOption({\\n\" +\r\n            \"        title: {\\n\" +\r\n            \"          text: this.chartTitle,\\n\" +\r\n            \"          left: \\\"center\\\",\\n\" +\r\n            \"          textStyle: {\\n\" +\r\n            \"            fontSize: 20,\\n\" +\r\n            \"            color:'white'\\n\" +\r\n            \"          },\\n\" +\r\n            \"        },\\n\" +\r\n            \"        // 配置提示框\\n\" +\r\n            \"        tooltip: {\\n\" +\r\n            \"          trigger: \\\"item\\\",\\n\" +\r\n            \"          formatter: \\\"{a} <br/>{b}: {c} ({d}%)\\\",\\n\" +\r\n            \"        },\\n\" +\r\n            \"        // 配置图例\\n\" +\r\n            \"        legend: {\\n\" +\r\n            \"          show: this.showLegend,\\n\" +\r\n            \"          orient: this.legendPosition,\\n\" +\r\n            \"        },\\n\" +\r\n            \"        // 配置 series\\n\" +\r\n            \"        series: [\\n\" +\r\n            \"          {\\n\" +\r\n            \"            // 设置 series 名称\\n\" +\r\n            \"            name: this.seriesName,\\n\" +\r\n            \"            // 设置 series 类型为饼状图\\n\" +\r\n            \"            type: \\\"pie\\\",\\n\" +\r\n            \"            // 设置饼状图半径\\n\" +\r\n            \"            radius: [\\\"50%\\\", \\\"70%\\\"],\\n\" +\r\n            \"            // 避免标签重叠\\n\" +\r\n            \"            avoidLabelOverlap: false,\\n\" +\r\n            \"            // 配置标签\\n\" +\r\n            \"            label: {\\n\" +\r\n            \"              show: this.showLabel,\\n\" +\r\n            \"              position: this.labelPosition,\\n\" +\r\n            \"              fontSize: this.labelFontSize,\\n\" +\r\n            \"            },\\n\" +\r\n            \"            // 配置标签强调样式\\n\" +\r\n            \"            emphasis: {\\n\" +\r\n            \"              label: {\\n\" +\r\n            \"                show: true,\\n\" +\r\n            \"                fontSize: this.labelFontSize + 2,\\n\" +\r\n            \"                fontWeight: \\\"bold\\\",\\n\" +\r\n            \"              },\\n\" +\r\n            \"            },\\n\" +\r\n            \"            // 配置标签线\\n\" +\r\n            \"            labelLine: {\\n\" +\r\n            \"              show: false,\\n\" +\r\n            \"            },\\n\" +\r\n            \"            // 配置数据\\n\" +\r\n            \"            data: this.data.map((item, index) => ({\\n\" +\r\n            \"              value: item.val,\\n\" +\r\n            \"              name: item.name,\\n\" +\r\n            \"              itemStyle: {\\n\" +\r\n            \"                color: this.colors[index],\\n\" +\r\n            \"              },\\n\" +\r\n            \"            })),\\n\" +\r\n            \"          },\\n\" +\r\n            \"        ],\\n\" +\r\n            \"      });\\n\" +\r\n            \"      // 如果需要自适应，则在渲染后调整图表大小\\n\" +\r\n            \"      if (this.responsive) {\\n\" +\r\n            \"        chart.resize();\\n\" +\r\n            \"      }\\n\" +\r\n            \"    },\\n\" +\r\n            \"  },\\n\" +\r\n            \"};\\n\" +\r\n            \"</script>\\n\" +\r\n            \"\\n\" +\r\n            \"<style>\\n\" +\r\n            \"/* 可选的图表容器样式 */\\n\" +\r\n            \"</style>\\n\" +\r\n            \"```\\n\" +\r\n            \"\\n\" +\r\n            \"# 组件使用示例\\n\" +\r\n            \"\\n\" +\r\n            \"```js\\n\" +\r\n            \"<pie-chart\\n\" +\r\n            \"            :data=\\\"chartData\\\"\\n\" +\r\n            \"            :colors=\\\"chartColors\\\"\\n\" +\r\n            \"            :show-label=\\\"showLabel\\\"\\n\" +\r\n            \"            :label-position=\\\"labelPosition\\\"\\n\" +\r\n            \"            :label-font-size=\\\"labelFontSize\\\"\\n\" +\r\n            \"            :responsive=\\\"true\\\"\\n\" +\r\n            \"            series-name=\\\"作业统计\\\"\\n\" +\r\n            \"            chartTitle=\\\"作业统计\\\"\\n\" +\r\n            \"          />\\n\" +\r\n            \"  \\n\" +\r\n            \"data() {\\n\" +\r\n            \"    return {\\n\" +\r\n            \"      chartData: [\\n\" +\r\n            \"        {name:'已完成',val:10},\\n\" +\r\n            \"        {name:'未完成',val:20},\\n\" +\r\n            \"      ],\\n\" +\r\n            \"      chartColors: ['#00BFFF','#FF6B00'],\\n\" +\r\n            \"      showLabel: true,\\n\" +\r\n            \"      labelPosition: 'inside',\\n\" +\r\n            \"      labelFontSize: 25,\\n\" +\r\n            \"    }\\n\" +\r\n            \"  },\\n\" +\r\n            \"```\\n\" +\r\n            \"\\n\"\r\n    },\r\n    {\r\n        name:'6',\r\n        title:'vue2+echarts封装组件  柱状图组件',\r\n        content:\"```js\\n\" +\r\n            \"<template>\\n\" +\r\n            \"  <div ref=\\\"chart\\\" style=\\\"width: 100%; height: 100%\\\"></div>\\n\" +\r\n            \"</template>\\n\" +\r\n            \"\\n\" +\r\n            \"<script>\\n\" +\r\n            \"import echarts from \\\"echarts\\\";\\n\" +\r\n            \"\\n\" +\r\n            \"export default {\\n\" +\r\n            \"  props: {\\n\" +\r\n            \"    //颜色\\n\" +\r\n            \"    colorList: {\\n\" +\r\n            \"      type: Array,\\n\" +\r\n            \"      default: () => {\\n\" +\r\n            \"        return [\\\"#00BFFF\\\", \\\"#FF6B00\\\"];\\n\" +\r\n            \"      },\\n\" +\r\n            \"    },\\n\" +\r\n            \"    // 图表标题\\n\" +\r\n            \"    title: {\\n\" +\r\n            \"      type: String,\\n\" +\r\n            \"      required: true,\\n\" +\r\n            \"    },\\n\" +\r\n            \"    // x 轴数据\\n\" +\r\n            \"    xAxisData: {\\n\" +\r\n            \"      type: Array,\\n\" +\r\n            \"      required: true,\\n\" +\r\n            \"    },\\n\" +\r\n            \"    // 数据系列\\n\" +\r\n            \"    seriesData: {\\n\" +\r\n            \"      type: Array,\\n\" +\r\n            \"      required: true,\\n\" +\r\n            \"    },\\n\" +\r\n            \"    // 图例数据\\n\" +\r\n            \"    legendData: {\\n\" +\r\n            \"      type: Array,\\n\" +\r\n            \"      required: true,\\n\" +\r\n            \"    },\\n\" +\r\n            \"    // tooltip 的 crossStyle\\n\" +\r\n            \"    crossStyle: {\\n\" +\r\n            \"      type: Object,\\n\" +\r\n            \"      default: () => {\\n\" +\r\n            \"        return {\\n\" +\r\n            \"          color: \\\"white\\\",\\n\" +\r\n            \"        };\\n\" +\r\n            \"      },\\n\" +\r\n            \"    },\\n\" +\r\n            \"    /**\\n\" +\r\n            \"     * @description:  字体大小列表，依次为：\\n\" +\r\n            \"    0. 标题字体大小\\n\" +\r\n            \"     1. 图例字体大小\\n\" +\r\n            \"    2. x 轴标签字体大小\\n\" +\r\n            \"     3. y 轴标签字体大小\\n\" +\r\n            \"     4. 数据标签字体大小\\n\" +\r\n            \"     5. tooltip 字体大小\\n\" +\r\n            \"     * @return {*}\\n\" +\r\n            \"     */\\n\" +\r\n            \"    fontSizeList: {\\n\" +\r\n            \"      type: Array,\\n\" +\r\n            \"      required: true,\\n\" +\r\n            \"    },\\n\" +\r\n            \"  },\\n\" +\r\n            \"  data() {\\n\" +\r\n            \"    return {\\n\" +\r\n            \"      chart: null,\\n\" +\r\n            \"    };\\n\" +\r\n            \"  },\\n\" +\r\n            \"  mounted() {\\n\" +\r\n            \"    // 初始化 echarts 实例\\n\" +\r\n            \"    this.chart = echarts.init(this.$refs.chart);\\n\" +\r\n            \"    // 设置图表配置项\\n\" +\r\n            \"    this.chart.setOption({\\n\" +\r\n            \"      color:this.colorList,\\n\" +\r\n            \"      // 图表标题\\n\" +\r\n            \"      title: {\\n\" +\r\n            \"        text: this.title,\\n\" +\r\n            \"        textStyle: {\\n\" +\r\n            \"          color: \\\"#fff\\\",\\n\" +\r\n            \"          fontSize: this.fontSizeList[0],\\n\" +\r\n            \"        },\\n\" +\r\n            \"      },\\n\" +\r\n            \"      // tooltip\\n\" +\r\n            \"      tooltip: {\\n\" +\r\n            \"        trigger: \\\"axis\\\",\\n\" +\r\n            \"        axisPointer: {\\n\" +\r\n            \"          type: \\\"cross\\\",\\n\" +\r\n            \"          crossStyle: this.crossStyle,\\n\" +\r\n            \"        },\\n\" +\r\n            \"        textStyle: {\\n\" +\r\n            \"          fontSize: this.fontSizeList[5],\\n\" +\r\n            \"        },\\n\" +\r\n            \"      },\\n\" +\r\n            \"      // 图例\\n\" +\r\n            \"      legend: {\\n\" +\r\n            \"        data: this.legendData,\\n\" +\r\n            \"        textStyle: {\\n\" +\r\n            \"          color: \\\"#fff\\\",\\n\" +\r\n            \"          fontSize: this.fontSizeList[1],\\n\" +\r\n            \"        },\\n\" +\r\n            \"      },\\n\" +\r\n            \"      // x 轴\\n\" +\r\n            \"      xAxis: [\\n\" +\r\n            \"        {\\n\" +\r\n            \"          type: \\\"category\\\",\\n\" +\r\n            \"          data: this.xAxisData,\\n\" +\r\n            \"          axisPointer: {\\n\" +\r\n            \"            type: \\\"shadow\\\",\\n\" +\r\n            \"          },\\n\" +\r\n            \"          axisLabel: {\\n\" +\r\n            \"            textStyle: {\\n\" +\r\n            \"              color: \\\"#fff\\\",\\n\" +\r\n            \"              fontSize: this.fontSizeList[2],\\n\" +\r\n            \"            },\\n\" +\r\n            \"          },\\n\" +\r\n            \"          // 去掉 x 轴的分割线\\n\" +\r\n            \"          splitLine: {\\n\" +\r\n            \"            show: false,\\n\" +\r\n            \"          },\\n\" +\r\n            \"        },\\n\" +\r\n            \"      ],\\n\" +\r\n            \"      // y 轴\\n\" +\r\n            \"      yAxis: [\\n\" +\r\n            \"        {\\n\" +\r\n            \"          type: \\\"value\\\",\\n\" +\r\n            \"          axisLabel: {\\n\" +\r\n            \"            textStyle: {\\n\" +\r\n            \"              color: \\\"#fff\\\",\\n\" +\r\n            \"              fontSize: this.fontSizeList[3],\\n\" +\r\n            \"            },\\n\" +\r\n            \"          },\\n\" +\r\n            \"          // 去掉 y 轴的分割线\\n\" +\r\n            \"          splitLine: {\\n\" +\r\n            \"            show: false,\\n\" +\r\n            \"          },\\n\" +\r\n            \"        },\\n\" +\r\n            \"      ],\\n\" +\r\n            \"      // 数据系列\\n\" +\r\n            \"      series: this.seriesData.map((item) => {\\n\" +\r\n            \"        return {\\n\" +\r\n            \"          name: item.name,\\n\" +\r\n            \"          type: \\\"bar\\\",\\n\" +\r\n            \"          data: item.data,\\n\" +\r\n            \"          label: {\\n\" +\r\n            \"            show: this.showLabel,\\n\" +\r\n            \"            position: this.labelPosition,\\n\" +\r\n            \"            fontSize: this.fontSizeList[4],\\n\" +\r\n            \"          },\\n\" +\r\n            \"        };\\n\" +\r\n            \"      }),\\n\" +\r\n            \"    });\\n\" +\r\n            \"    // 监听窗口大小变化，自适应图表大小\\n\" +\r\n            \"    window.addEventListener(\\\"resize\\\", () => {\\n\" +\r\n            \"      this.chart.resize();\\n\" +\r\n            \"    });\\n\" +\r\n            \"  },\\n\" +\r\n            \"};\\n\" +\r\n            \"</script>\\n\" +\r\n            \"```\\n\" +\r\n            \"\\n\" +\r\n            \"# 组件使用示例\\n\" +\r\n            \"\\n\" +\r\n            \"```js\\n\" +\r\n            \"<bar-chart\\n\" +\r\n            \"            :title=\\\"chartTitle\\\"\\n\" +\r\n            \"            :x-axis-data=\\\"xAxisData\\\"\\n\" +\r\n            \"            :series-data=\\\"seriesData\\\"\\n\" +\r\n            \"            :legend-data=\\\"legendData\\\"\\n\" +\r\n            \"            :cross-style=\\\"crossStyle\\\"\\n\" +\r\n            \"            :font-size-list=\\\"fontSizeList\\\"\\n\" +\r\n            \"          />\\n\" +\r\n            \"  \\n\" +\r\n            \"data() {\\n\" +\r\n            \"    return {\\n\" +\r\n            \"      title: \\\"人员管理\\\",\\n\" +\r\n            \"      chartTitle: \\\"人员统计\\\",\\n\" +\r\n            \"      xAxisData: [\\\"A\\\", \\\"B\\\", \\\"C\\\", \\\"D\\\", \\\"E\\\"],\\n\" +\r\n            \"      seriesData: [\\n\" +\r\n            \"        {\\n\" +\r\n            \"          name: \\\"员工数量\\\",\\n\" +\r\n            \"          data: [10, 20, 30, 40, 50],\\n\" +\r\n            \"        },\\n\" +\r\n            \"        {\\n\" +\r\n            \"          name: \\\"访客数量\\\",\\n\" +\r\n            \"          data: [20, 30, 40, 50, 60],\\n\" +\r\n            \"        },\\n\" +\r\n            \"      ],\\n\" +\r\n            \"      legendData: [\\\"员工数量\\\", \\\"访客数量\\\"],\\n\" +\r\n            \"      crossStyle: {\\n\" +\r\n            \"        color: \\\"white\\\",\\n\" +\r\n            \"      },\\n\" +\r\n            \"      fontSizeList: [18, 20, 20, 20, 20, 20],\\n\" +\r\n            \"    };\\n\" +\r\n            \"  },\\n\" +\r\n            \"```\\n\" +\r\n            \"\\n\"\r\n    },\r\n    {\r\n        name:'7',\r\n        title:'vue2播放flv视频流',\r\n        content:\"# 下载flv.js\\n\" +\r\n            \"\\n\" +\r\n            \"```js\\n\" +\r\n            \"npm install --save flv.js\\n\" +\r\n            \"```\\n\" +\r\n            \"\\n\" +\r\n            \"# 代码示例\\n\" +\r\n            \"\\n\" +\r\n            \"```js\\n\" +\r\n            \"<template>\\n\" +\r\n            \"  <div>\\n\" +\r\n            \"\\t<video id=\\\"videoElement\\\" controls autoplay muted width=\\\"300px\\\" height=\\\"200px\\\">    \\n\" +\r\n            \"    </video>\\n\" +\r\n            \"\\t<button @click=\\\"play\\\">播放</button>\\n\" +\r\n            \"  </div>\\n\" +\r\n            \"</template>\\n\" +\r\n            \"<script>\\n\" +\r\n            \"    import flvjs from 'flv.js'\\n\" +\r\n            \"export default {\\n\" +\r\n            \"  data () {\\n\" +\r\n            \"    return {\\n\" +\r\n            \"\\t  flvPlayer:null\\n\" +\r\n            \"    }\\n\" +\r\n            \"  },\\n\" +\r\n            \"   mounted() {\\n\" +\r\n            \"      if (flvjs.isSupported()) {\\n\" +\r\n            \"        var videoElement = document.getElementById('videoElement');\\n\" +\r\n            \"        this.flvPlayer = flvjs.createPlayer({\\n\" +\r\n            \"          type: 'flv',\\n\" +\r\n            \"\\t\\t  isLive: true,\\n\" +\r\n            \"\\t\\t  hasAudio: false,\\n\" +\r\n            \"          url: 'http://1011.hlsplay.aodianyun.com/demo/game.flv'\\n\" +\r\n            \"        });\\n\" +\r\n            \"        this.flvPlayer.attachMediaElement(videoElement);\\n\" +\r\n            \"        this.flvPlayer.load();\\n\" +\r\n            \"\\t\\tthis.flvPlayer.play();\\n\" +\r\n            \"      }\\n\" +\r\n            \"    },\\n\" +\r\n            \"    methods:{\\n\" +\r\n            \"      play () {\\n\" +\r\n            \"        this.flvPlayer.play();\\n\" +\r\n            \"      }\\n\" +\r\n            \"    }\\n\" +\r\n            \"}\\n\" +\r\n            \"</script>\\n\" +\r\n            \"\\n\" +\r\n            \"```\\n\" +\r\n            \"\\n\"\r\n    },\r\n    {\r\n        name:'8',\r\n        title:'vue+nginx部署',\r\n        content:\"# vue\\n\" +\r\n            \"\\n\" +\r\n            \"vue.config.js配置如下\\n\" +\r\n            \"\\n\" +\r\n            \"```js\\n\" +\r\n            \"const {defineConfig} = require('@vue/cli-service')\\n\" +\r\n            \"module.exports = defineConfig({\\n\" +\r\n            \"    transpileDependencies: true,\\n\" +\r\n            \"    //打包\\n\" +\r\n            \"    publicPath: './',\\n\" +\r\n            \"    devServer: {\\n\" +\r\n            \"        host: '0.0.0.0',\\n\" +\r\n            \"        port: 8080,\\n\" +\r\n            \"        proxy: {\\n\" +\r\n            \"            '/captures': {\\n\" +\r\n            \"                target: 'http://192.168.1.150:18080', // 目标路径，别忘了加http和端口号 也就是接口的前面的ip地址端口号\\n\" +\r\n            \"                changeOrigin: true, // 是否跨域\\n\" +\r\n            \"            }\\n\" +\r\n            \"        }\\n\" +\r\n            \"    }\\n\" +\r\n            \"})\\n\" +\r\n            \" \\n\" +\r\n            \"```\\n\" +\r\n            \"\\n\" +\r\n            \"# nginx\\n\" +\r\n            \"\\n\" +\r\n            \"nginx.conf配置如下\\n\" +\r\n            \"\\n\" +\r\n            \"```json\\n\" +\r\n            \"\\n\" +\r\n            \"user  root;\\n\" +\r\n            \"worker_processes  1;\\n\" +\r\n            \"\\n\" +\r\n            \"#error_log  logs/error.log;\\n\" +\r\n            \"#error_log  logs/error.log  notice;\\n\" +\r\n            \"#error_log  logs/error.log  info;\\n\" +\r\n            \"\\n\" +\r\n            \"#pid        logs/nginx.pid;\\n\" +\r\n            \"\\n\" +\r\n            \"\\n\" +\r\n            \"events {\\n\" +\r\n            \"    worker_connections  1024;\\n\" +\r\n            \"}\\n\" +\r\n            \"\\n\" +\r\n            \"\\n\" +\r\n            \"http {\\n\" +\r\n            \"    include       mime.types;\\n\" +\r\n            \"    default_type  application/octet-stream;\\n\" +\r\n            \"\\n\" +\r\n            \"    #log_format  main  '$remote_addr - $remote_user [$time_local] \\\"$request\\\" '\\n\" +\r\n            \"    #                  '$status $body_bytes_sent \\\"$http_referer\\\" '\\n\" +\r\n            \"    #                  '\\\"$http_user_agent\\\" \\\"$http_x_forwarded_for\\\"';\\n\" +\r\n            \"\\n\" +\r\n            \"    #access_log  logs/access.log  main;\\n\" +\r\n            \"\\n\" +\r\n            \"    sendfile        on;\\n\" +\r\n            \"    #tcp_nopush     on;\\n\" +\r\n            \"\\n\" +\r\n            \"    #keepalive_timeout  0;\\n\" +\r\n            \"    keepalive_timeout  65;\\n\" +\r\n            \"\\n\" +\r\n            \"    #gzip  on;\\n\" +\r\n            \"\\n\" +\r\n            \"    server {\\n\" +\r\n            \"    \\t# 服务器端口号\\n\" +\r\n            \"        listen       80; \\n\" +\r\n            \"    \\t# 服务器名称\\n\" +\r\n            \"        server_name  localhost;\\n\" +\r\n            \"\\n\" +\r\n            \"        #charset koi8-r;\\n\" +\r\n            \"\\n\" +\r\n            \"        #access_log  logs/host.access.log  main;\\n\" +\r\n            \"        location / {\\n\" +\r\n            \"            root    /zckx/nginx/html/dist; #项目文件位置\\n\" +\r\n            \"            index  index.html;\\n\" +\r\n            \"            try_files $uri $uri/ /index.html;\\n\" +\r\n            \"        }\\n\" +\r\n            \"\\t\\t# 配置跨域 比如接口以/captures开头的配置如下\\n\" +\r\n            \"        location /captures/ {\\n\" +\r\n            \"            # 允许http://192.168.1.150:18080跨域 http://192.168.1.150:18080为接口地址\\n\" +\r\n            \"            proxy_pass http://192.168.1.150:18080; \\n\" +\r\n            \"        }\\n\" +\r\n            \"\\n\" +\r\n            \"        location /live{\\n\" +\r\n            \"            add_header Access-Control-Allow-Origin *;\\n\" +\r\n            \"            types {\\n\" +\r\n            \"                application/vnd.apple.mpegurl m3u8;\\n\" +\r\n            \"                video/mp2t ts;\\n\" +\r\n            \"            }\\n\" +\r\n            \"            # HLS切片文件目录\\n\" +\r\n            \"            alias /tmp/hls;\\n\" +\r\n            \"            expires -1;\\n\" +\r\n            \"        }\\n\" +\r\n            \"\\n\" +\r\n            \"        #error_page  404              /404.html;\\n\" +\r\n            \"\\n\" +\r\n            \"        # redirect server error pages to the static page /50x.html\\n\" +\r\n            \"        #\\n\" +\r\n            \"        error_page   500 502 503 504  /50x.html;\\n\" +\r\n            \"        location = /50x.html {\\n\" +\r\n            \"            root   html;\\n\" +\r\n            \"        }\\n\" +\r\n            \"\\n\" +\r\n            \"        # proxy the PHP scripts to Apache listening on 127.0.0.1:80\\n\" +\r\n            \"        #\\n\" +\r\n            \"        #location ~ \\\\.php$ {\\n\" +\r\n            \"        #    proxy_pass   http://127.0.0.1;\\n\" +\r\n            \"        #}\\n\" +\r\n            \"\\n\" +\r\n            \"        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000\\n\" +\r\n            \"        #\\n\" +\r\n            \"        #location ~ \\\\.php$ {\\n\" +\r\n            \"        #    root           html;\\n\" +\r\n            \"        #    fastcgi_pass   127.0.0.1:9000;\\n\" +\r\n            \"        #    fastcgi_index  index.php;\\n\" +\r\n            \"        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;\\n\" +\r\n            \"        #    include        fastcgi_params;\\n\" +\r\n            \"        #}\\n\" +\r\n            \"\\n\" +\r\n            \"        # deny access to .htaccess files, if Apache's document root\\n\" +\r\n            \"        # concurs with nginx's one\\n\" +\r\n            \"        #\\n\" +\r\n            \"        #location ~ /\\\\.ht {\\n\" +\r\n            \"        #    deny  all;\\n\" +\r\n            \"        #}\\n\" +\r\n            \"    }\\n\" +\r\n            \"\\n\" +\r\n            \"\\n\" +\r\n            \"    # another virtual host using mix of IP-, name-, and port-based configuration\\n\" +\r\n            \"    #\\n\" +\r\n            \"    #server {\\n\" +\r\n            \"    #    listen       8000;\\n\" +\r\n            \"    #    listen       somename:8080;\\n\" +\r\n            \"    #    server_name  somename  alias  another.alias;\\n\" +\r\n            \"\\n\" +\r\n            \"    #    location / {\\n\" +\r\n            \"    #        root   html;\\n\" +\r\n            \"    #        index  index.html index.htm;\\n\" +\r\n            \"    #    }\\n\" +\r\n            \"    #}\\n\" +\r\n            \"\\n\" +\r\n            \"\\n\" +\r\n            \"    # HTTPS server\\n\" +\r\n            \"    #\\n\" +\r\n            \"    #server {\\n\" +\r\n            \"    #    listen       443 ssl;\\n\" +\r\n            \"    #    server_name  localhost;\\n\" +\r\n            \"\\n\" +\r\n            \"    #    ssl_certificate      cert.pem;\\n\" +\r\n            \"    #    ssl_certificate_key  cert.key;\\n\" +\r\n            \"\\n\" +\r\n            \"    #    ssl_session_cache    shared:SSL:1m;\\n\" +\r\n            \"    #    ssl_session_timeout  5m;\\n\" +\r\n            \"\\n\" +\r\n            \"    #    ssl_ciphers  HIGH:!aNULL:!MD5;\\n\" +\r\n            \"    #    ssl_prefer_server_ciphers  on;\\n\" +\r\n            \"\\n\" +\r\n            \"    #    location / {\\n\" +\r\n            \"    #        root   html;\\n\" +\r\n            \"    #        index  index.html index.htm;\\n\" +\r\n            \"    #    }\\n\" +\r\n            \"    #}\\n\" +\r\n            \"\\n\" +\r\n            \"}\\n\" +\r\n            \"\\n\" +\r\n            \"rtmp {\\n\" +\r\n            \"        server {\\n\" +\r\n            \"                listen 1935;\\n\" +\r\n            \"                chunk_size 4096;\\n\" +\r\n            \"                # vod path\\n\" +\r\n            \"                application live {\\n\" +\r\n            \"                        live on;\\n\" +\r\n            \"                        hls on;\\n\" +\r\n            \"                        ##HLS切片保存路径\\n\" +\r\n            \"                        hls_path /tmp/hls;\\n\" +\r\n            \"                        hls_fragment 4;\\n\" +\r\n            \"                        hls_playlist_length 30;\\n\" +\r\n            \"                        record off;\\n\" +\r\n            \"                }\\n\" +\r\n            \"        }\\n\" +\r\n            \"}\\n\" +\r\n            \"\\n\" +\r\n            \"\\n\" +\r\n            \"\\n\" +\r\n            \"\\n\" +\r\n            \"```\\n\" +\r\n            \"\\n\"\r\n    },\r\n]","export default [\r\n    {\r\n        title:'组件',\r\n        name:'1',\r\n        content:'# 1.前端实用组件\\n' +\r\n            '\\n' +\r\n            '## 1.1 [vue无缝滚动组件 vue2 ](https://chenxuan0000.github.io/vue-seamless-scroll/)  [vue3](https://doc.wssio.com/opensource/vue3-seamless-scroll/#%E5%BC%80%E5%A7%8B)\\n'  +\r\n            '\\n' +'要想让他实现无缝滚动，首先看你页面的滚动内容高度是多少，比如是500px,在不滚动的时候看多少行数据占满这个高度，假设需要10行数据显示在页面上，那么每行的高度需要设置为大于500/10=50px,这样才可以实现无缝滚动，一般就设置为50px,通过class-option中的属性limitMoveNum判断是否滚动，比如这里就可以设置为10，超出10行意味着滚动，小于等于就不滚动\\n' +\r\n            '\\n' +\r\n            '```vue\\n' +\r\n            '<template>\\n' +\r\n            '  <div id=\"jobStatistics\">\\n' +\r\n            '    <el-row :gutter=\"10\" type=\"flex\" align=\"middle\" style=\"height: 75%\">\\n' +\r\n            '      <el-col :span=\"18\" style=\"height: 100%;border:1px solid black\">\\n' +\r\n            '        <table>\\n' +\r\n            '          <!-- 设置列宽 -->\\n' +\r\n            '          <colgroup>\\n' +\r\n            '            <col v-for=\"item of 2\" width=\"10%\">\\n' +\r\n            '            <col width=\"18%\">\\n' +\r\n            '            <col width=\"10%\">\\n' +\r\n            '            <col width=\"12%\">\\n' +\r\n            '            <col v-for=\"item of 4\" width=\"10%\">\\n' +\r\n            '          </colgroup>\\n' +\r\n            '          <thead>\\n' +\r\n            '          <th v-for=\"item in tableName\">{{item}}</th>\\n' +\r\n            '          </thead>\\n' +\r\n            '        </table>\\n' +\r\n            '        <vue-seamless-scroll :data=\"testArray\" :class-option=\"optionHover\" class=\"seamless-warp\">\\n' +\r\n            '          <ul>\\n' +\r\n            '            <li v-for=\"(item,index) in testArray\" class=\"liStyle\" :class=\"{ bg: index%2===0 }\">\\n' +\r\n            '              <span :title=\"index+1\" class=\"title1 text_align\">{{ index + 1 }}</span>\\n' +\r\n            '              <span :title=\"item.name\" class=\"title1 text_align\">{{ item.name }}</span>\\n' +\r\n            '              <span :title=\"item.age\" class=\"title2 text_align\">{{ item.age }}</span>\\n' +\r\n            '              <span :title=\"item.phone\" class=\"title1 text_align\">{{ item.phone }}</span>\\n' +\r\n            '              <span :title=\"item.phone\" class=\"title3 text_align\">{{ item.phone }}</span>\\n' +\r\n            '              <span :title=\"item.phone\" class=\"title1 text_align\">{{ item.phone }}</span>\\n' +\r\n            '              <span :title=\"item.phone\" class=\"title1 text_align\">{{ item.phone }}</span>\\n' +\r\n            '              <span :title=\"item.phone\" class=\"title1 text_align\">{{ item.phone }}</span>\\n' +\r\n            '              <span :title=\"item.phone\" class=\"title1 text_align\">{{ item.phone }}</span>\\n' +\r\n            '            </li>\\n' +\r\n            '          </ul>\\n' +\r\n            '        </vue-seamless-scroll>\\n' +\r\n            '      </el-col>\\n' +\r\n            '    </el-row>\\n' +\r\n            '  </div>\\n' +\r\n            '</template>\\n' +\r\n            '<script>\\n' +\r\n            'export default {\\n' +\r\n            '  name: \"jobStatistics\",\\n' +\r\n            '  data() {\\n' +\r\n            '    return {\\n' +\r\n            '      //表格表头名称\\n' +\r\n            '      tableName:[\\'序号\\',\\'作业区域\\',\\'作业内容\\',\\'就业人员\\',\\'现场负责人\\',\\'部门\\',\\'进入时间\\',\\'离开时间\\',\\'现场图像\\'],\\n' +\r\n            '      testArray: [\\n' +\r\n            '        {name: \\'刘明明\\', age: 14, phone: \\'15876512321\\'},\\n' +\r\n            '        {name: \\'王五五\\', age: 15, phone: \\'15876512321\\'},\\n' +\r\n            '        {name: \\'张萌萌\\', age: 23, phone: \\'15876512321\\'},\\n' +\r\n            '        {name: \\'刘浩\\', age: 20, phone: \\'15876512321\\'},\\n' +\r\n            '        {name: \\'刘佳\\', age: 21, phone: \\'15876512321\\'},\\n' +\r\n            '        {name: \\'刘佳\\', age: 21, phone: \\'15876512321\\'},\\n' +\r\n            '        {name: \\'刘佳\\', age: 21, phone: \\'15876512321\\'},\\n' +\r\n            '        {name: \\'刘佳\\', age: 21, phone: \\'15876512321\\'},\\n' +\r\n            '        {name: \\'刘佳\\', age: 21, phone: \\'15876512321\\'},\\n' +\r\n            '        {name: \\'刘佳\\', age: 21, phone: \\'15876512321\\'},\\n' +\r\n            '        {name: \\'刘佳\\', age: 21, phone: \\'15876512321\\'},\\n' +\r\n            '        {name: \\'刘佳\\', age: 21, phone: \\'1587651232313121\\'},\\n' +\r\n            '      ],\\n' +\r\n            '    };\\n' +\r\n            '  },\\n' +\r\n            '  computed: {\\n' +\r\n            '    //滚动表格的配置项\\n' +\r\n            '    optionHover() {\\n' +\r\n            '      return {\\n' +\r\n            '        limitMoveNum:10,//数据超出10行才滚动\\n' +\r\n            '        hoverStop: true, // 是否开启鼠标悬停stop\\n' +\r\n            '        direction: 1, // 0向下 1向上 2向左 3向右\\n' +\r\n            '        step: .5,// 数值越大速度滚动越快\\n' +\r\n            '        openWatch: true, // 开启数据实时监控刷新dom\\n' +\r\n            '      }\\n' +\r\n            '    }\\n' +\r\n            '  },\\n' +\r\n            '};\\n' +\r\n            '</script>\\n' +\r\n            '<style lang=\"less\">\\n' +\r\n            '#jobStatistics{\\n' +\r\n            '  height:100%;\\n' +\r\n            '}\\n' +\r\n            '* {\\n' +\r\n            '  margin: 0;\\n' +\r\n            '  padding: 0;\\n' +\r\n            '}\\n' +\r\n            '\\n' +\r\n            'ul {\\n' +\r\n            '  list-style: none;\\n' +\r\n            '}\\n' +\r\n            '\\n' +\r\n            'table {\\n' +\r\n            '  width: 100%;\\n' +\r\n            '  text-align: center;\\n' +\r\n            '}\\n' +\r\n            '\\n' +\r\n            'th {\\n' +\r\n            '  height: 260%;\\n' +\r\n            '  line-height: 260%;\\n' +\r\n            '  font-size: 16px;\\n' +\r\n            '  background-color: rgba(180, 181, 198, 0.1);\\n' +\r\n            '}\\n' +\r\n            '\\n' +\r\n            '.seamless-warp {\\n' +\r\n            '  height: 90%;\\n' +\r\n            '  overflow: hidden;\\n' +\r\n            '\\n' +\r\n            '  .liStyle {\\n' +\r\n            '    height: 45.5px;\\n' +\r\n            '    line-height: 45.5px;\\n' +\r\n            '    width: 100%;\\n' +\r\n            '    display: flex;\\n' +\r\n            '    overflow: hidden;\\n' +\r\n            '\\n' +\r\n            '    .title1 {\\n' +\r\n            '      width: 10%;\\n' +\r\n            '    }\\n' +\r\n            '\\n' +\r\n            '    .title2 {\\n' +\r\n            '      width: 18%;\\n' +\r\n            '    }\\n' +\r\n            '\\n' +\r\n            '    .title3 {\\n' +\r\n            '      width: 12%;\\n' +\r\n            '    }\\n' +\r\n            '\\n' +\r\n            '    .text_align {\\n' +\r\n            '      text-align: center;\\n' +\r\n            '      overflow: hidden;\\n' +\r\n            '      white-space: nowrap;\\n' +\r\n            '      text-overflow: ellipsis;\\n' +\r\n            '    }\\n' +\r\n            '\\n' +\r\n            '  }\\n' +\r\n            '}\\n' +\r\n            '.bg{\\n' +\r\n            '  background: gainsboro;\\n' +\r\n            '}\\n' +\r\n            '</style>\\n' +\r\n            '```'\r\n            +'\\n'+\r\n            \"\\n\" +\r\n            '## 1.2 [vue-cropper裁剪图片插件](https://github.com/xyxiao001/vue-cropper)\\n' +\r\n            '## 1.3 [自定义表格](https://vxetable.cn/#/table/start/install)\\n' +\r\n            '## 1.4 [Vue 字符串实现JSON格式显示 ](https://github.com/chenfengjw163/vue-json-viewer/blob/master/README_CN.md)\\n' +\r\n            '## 1.5 [移动端vue手势库](https://github.com/gggso/vue-finger)\\n' +\r\n            '## 1.6 [搭建虚拟服务器调用接口](https://github.com/typicode/json-server)\\n' +\r\n            '## 1.7 [vue大屏自适应组件](https://github.com/Alfred-Skyblue/v-scale-screen)\\n' +\r\n            '## 1.8 [下载文件组件](https://github.com/kennethjiang/js-file-download)\\n' +\r\n            '## 1.9 [vue编辑预览md组件](https://code-farmer-i.github.io/vue-markdown-editor/zh/)'\r\n    }\r\n]","export default [\r\n    {\r\n        title:'ai工具合集',\r\n        name:'1',\r\n        content:'# [chatgpt](https://chat.openai.com/chat):人工智能ai聊天工具\\n' +\r\n            '\\n' +\r\n            '# [newbing](https://www.bing.com/search?q=Bing+AI&showconv=1&FORM=hpcodx):结合chatgpt+微软搜索引擎的新一代智能对话\\n' +\r\n            '\\n' +\r\n            '# [cursor](https://www.cursor.so/):结合chatgpt+编程工具的最新智能IDE\\n' +\r\n            '\\n' +\r\n            '# [闪击ppt](https://ppt.sankki.com/#/works):结合chatgpt生成文本，然后快速生成ppt的工具\\n' +\r\n            '\\n' +\r\n            '```\\n' +\r\n            '我的名字叫做周鹏飞，帮我制作一篇内容为《xxxx》PPT，要求如下： 第一、一定要使用中文。 第二、页面形式有3种，封面、目录、列表、总结。 第三、目录页要列出内容大纲。 第四、根据内容大纲，生成对应的PPT列表页，每一页PPT列表页使用=====列表=====开头。 第五、封面页格式如下： =====封面===== # 主标题 ## 副标题 演讲人：我的名字 第六、目录页格式如下： =====目录===== # 目录 ## CONTENT 1、内容 2、内容 第七、列表页格式如下： =====列表===== # 页面主标题 1、要点1 要点描述内容 第八、列表页里的要点描述内容是对要点的详细描述，10个字以上，50个字以内。第九、最后一个列表为全文总结。第十、至少要求十个列表。 最后，一定要使用代码块回复你生成的内容，切记切记。\\n' +\r\n            '```\\n' +\r\n            '\\n' +\r\n            '\\n' +\r\n            '\\n' +\r\n            '# [discord](https://discord.com/)：全球聊天频道，可在里面和ai绘画智能机器人对话，生成对应图片，还有很多其他功能等待发现\\n' +\r\n            '\\n' +\r\n            '# [未来百科](https://www.futurepedia.io/):ai工具合集\\n' +\r\n            '\\n' +\r\n            '\\n' +\r\n            '\\n'\r\n    }\r\n]","export default [\r\n    {\r\n        title:'uniapp存储文件和读取文件',\r\n        name:'1',\r\n        content:'# 一、读取本地文件\\n' +\r\n            '\\n' +\r\n            '```js\\n' +\r\n            '        // 读取本地文件的方法 参数1为文件名称，参数2为回调方法用于处理获取到的文件数据\\n' +\r\n            '\\t\\tfetchFileData(fileName,callback) {\\n' +\r\n            '\\t\\t\\tplus.io.requestFileSystem(\\n' +\r\n            '\\t\\t\\t\\tplus.io.PUBLIC_DOWNLOADS, // 文件系统中的根目录\\n' +\r\n            '\\t\\t\\t\\tfs => {\\n' +\r\n            '\\t\\t\\t\\t\\t// 创建或打开文件, fs.root是根目录操作对象,直接fs表示当前操作对象\\n' +\r\n            '\\t\\t\\t\\t\\tfs.root.getFile(fileName, {\\n' +\r\n            '\\t\\t\\t\\t\\t\\tcreate: true // 文件不存在则创建\\n' +\r\n            '\\t\\t\\t\\t\\t}, fileEntry => {\\n' +\r\n            '\\t\\t\\t\\t\\t\\t// 文件在手机中的路径\\n' +\r\n            '\\t\\t\\t\\t\\t\\tconsole.log(\\'文件在手机中的路径\\', fileEntry.fullPath)\\n' +\r\n            '\\t\\t\\t\\t\\t\\tfileEntry.file(function(file) {\\n' +\r\n            '\\t\\t\\t\\t\\t\\t\\tvar fileReader = new plus.io.FileReader();\\n' +\r\n            '\\t\\t\\t\\t\\t\\t\\tconsole.log(\"getFile:\" + JSON.stringify(file));\\n' +\r\n            '\\t\\t\\t\\t\\t\\t\\tfileReader.readAsText(file, \"utf-8\")\\n' +\r\n            '\\t\\t\\t\\t\\t\\t\\tfileReader.onloadend = function(res) { //读取文件内容成功后的回调事件\\n' +\r\n            '\\t\\t\\t\\t\\t\\t\\t\\t//res.target.result读取到的文件内容信息\\n' +\r\n            '\\t\\t\\t\\t\\t\\t\\t\\tconsole.log(\\'最后读取文件内容是=======\\', res.target.result)\\n' +\r\n            '\\t\\t\\t\\t\\t\\t\\t\\tcallback(res.target.result)\\n' +\r\n            '\\t\\t\\t\\t\\t\\t\\t}\\n' +\r\n            '\\t\\t\\t\\t\\t\\t});\\n' +\r\n            '\\t\\t\\t\\t\\t}, e => {\\n' +\r\n            '\\t\\t\\t\\t\\t\\tconsole.log(\\'报错111\\', \"getFile failed: \" + e.message);\\n' +\r\n            '\\t\\t\\t\\t\\t});\\n' +\r\n            '\\t\\t\\t\\t},\\n' +\r\n            ' \\n' +\r\n            '\\t\\t\\t\\te => {\\n' +\r\n            '\\t\\t\\t\\t\\tconsole.log(\\'报错222\\', e.message);\\n' +\r\n            '\\t\\t\\t\\t}\\n' +\r\n            '\\t\\t\\t);\\n' +\r\n            '\\t\\t},\\n' +\r\n            '```\\n' +\r\n            '\\n' +\r\n            '# 二、存储数据到本地文件\\n' +\r\n            '\\n' +\r\n            '```js\\n' +\r\n            '// 参数1为文件名称 参数2是文件内容 参数3是回调参数\\t\\t\\n' +\r\n            'saveFile(fileName,fileInfo,callback) {\\n' +\r\n            '\\t\\t\\t// 请求本地文件系统对象\\n' +\r\n            '\\t\\t\\tplus.io.requestFileSystem(\\n' +\r\n            '\\t\\t\\t\\tplus.io.PUBLIC_DOWNLOADS, // 文件系统中的根目录\\n' +\r\n            '\\t\\t\\t\\tfs => {\\n' +\r\n            '\\t\\t\\t\\t\\t// 创建或打开文件, fs.root是根目录操作对象,直接fs表示当前操作对象\\n' +\r\n            '\\t\\t\\t\\t\\tfs.root.getFile(fileName, {\\n' +\r\n            '\\t\\t\\t\\t\\t\\tcreate: true // 文件不存在则创建\\n' +\r\n            '\\t\\t\\t\\t\\t}, fileEntry => {\\n' +\r\n            '\\t\\t\\t\\t\\t\\t// 文件在手机中的路径\\n' +\r\n            '\\t\\t\\t\\t\\t\\tconsole.log(\\'最后文件在手机中的路径========\\', fileEntry.fullPath)\\n' +\r\n            '\\t\\t\\t\\t\\t\\tfileEntry.createWriter(writer => {\\n' +\r\n            '\\t\\t\\t\\t\\t\\t\\t// 写入文件成功完成的回调函数\\n' +\r\n            '\\t\\t\\t\\t\\t\\t\\twriter.onwrite = e => {\\n' +\r\n            '\\t\\t\\t\\t\\t\\t\\t\\tconsole.log(\"写入数据成功\");\\n' +\r\n            '\\t\\t\\t\\t\\t\\t\\t\\tcallback(true)\\n' +\r\n            '\\t\\t\\t\\t\\t\\t\\t};\\n' +\r\n            '\\t\\t\\t\\t\\t\\t\\t// 写入数据\\n' +\r\n            '\\t\\t\\t\\t\\t\\t\\twriter.write(JSON.stringify(fileInfo));\\n' +\r\n            '\\t\\t\\t\\t\\t\\t})\\n' +\r\n            '\\t\\t\\t\\t\\t}, e => {\\n' +\r\n            '\\t\\t\\t\\t\\t\\tcallback(false)\\n' +\r\n            '\\t\\t\\t\\t\\t\\tconsole.log(\\'报错111\\', \"getFile failed: \" + e.message);\\n' +\r\n            '\\t\\t\\t\\t\\t});\\n' +\r\n            '\\t\\t\\t\\t},\\n' +\r\n            '\\t\\t\\t\\te => {\\n' +\r\n            '\\t\\t\\t\\t\\tconsole.log(\\'报错222\\', e.message);\\n' +\r\n            '\\t\\t\\t\\t\\tcallback(false)\\n' +\r\n            '\\t\\t\\t\\t}\\n' +\r\n            '\\t\\t\\t);\\n' +\r\n            '\\t\\t},\\n' +\r\n            '```\\n' +\r\n            '\\n' +\r\n            ' '\r\n    }\r\n]","<template>\n  <div class=\"js-note\">\n    <el-backtop target=\".js-note\" style=\"position: absolute;z-index: 9999;\"></el-backtop>\n    <el-input placeholder=\"请输入你要查询的标题\" v-model=\"listName\"></el-input>\n    <el-collapse v-model=\"activeName\" accordion>\n      <el-collapse-item v-for=\"item in newNotes\" :key=\"item.name\" :title=\"item.title\" :name=\"item.name\">\n        <v-md-editor left-toolbar=\"fullscreen toc\" right-toolbar=\"\" :include-level=\"[1,2,3,4]\"\n                     v-model=\"item.content\" style=\"max-height: 100vh\"></v-md-editor>\n      </el-collapse-item>\n    </el-collapse>\n  </div>\n</template>\n\n<script>\nimport JsNotes from \"@/components/note/jsNotes\";\nimport CssNotes from \"@/components/note/cssNotes\";\nimport VueNotes from \"@/components/note/vueNotes\";\nimport ZujianNotes from \"@/components/note/zujianNotes\";\nimport ai from \"@/components/note/ai\"\nimport uniapp from \"@/components/note/uniapp\";\nexport default {\n  name: \"Note\",\n  props: {\n    info: {\n      type: String,\n      default: 'Js'\n    }\n  },\n  data() {\n    return {\n      Notes: JsNotes,\n      activeName: '',\n      listName: '',\n    }\n  },\n  computed: {\n    newNotes() {\n      return this.Notes.filter(i => i.title.toLowerCase().includes(this.listName.toLowerCase()))\n    }\n  },\n  watch: {\n    info(val) {\n      const notesMap = {\n        'a-js': JsNotes,\n        'a-Vue': VueNotes,\n        'a-css': CssNotes,\n        'a-常用组件': ZujianNotes,\n        'a-ai': ai,\n        'a-uniapp': uniapp,\n      }\n      this.Notes = notesMap[val] || JsNotes\n      this.$nextTick(() => {\n        if (val.startsWith('a-')) {\n          this.$notify({\n            title: '提示',\n            message: `该页面共有${this.Notes.length}条数据`,\n            type: 'success',\n            showClose: false,\n            duration: 2000\n          });\n          this.listName = ''\n          this.activeName = ''\n        }\n      })\n    }\n  }\n}\n</script>\n\n<style scoped lang=\"less\">\n.js-note {\n  height: 93vh;\n  overflow-x: hidden;\n  overflow-y: auto;\n}\n\n/deep/ .v-note-wrapper {\n  padding: 0;\n  margin: 0;\n  max-width: none;\n}\n\n//\n/deep/ .v-md-textarea-editor {\n  display: none;\n}\n\n/deep/ .v-md-editor__editor-wrapper {\n  display: none;\n}\n</style>","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Note.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Note.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Note.vue?vue&type=template&id=bfc2f062&scoped=true&\"\nimport script from \"./Note.vue?vue&type=script&lang=js&\"\nexport * from \"./Note.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Note.vue?vue&type=style&index=0&id=bfc2f062&prod&scoped=true&lang=less&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"bfc2f062\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticStyle:{\"width\":\"100%\",\"height\":\"100%\",\"overflow-y\":\"auto\"}},[_c('code-viewer',{attrs:{\"layout\":\"right\"}})],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div style=\"width: 100%;height: 100%;overflow-y: auto\">\r\n    <code-viewer layout=\"right\"></code-viewer>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"code-view\",\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./vue-code-view.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./vue-code-view.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./vue-code-view.vue?vue&type=template&id=0c572a64&scoped=true&\"\nimport script from \"./vue-code-view.vue?vue&type=script&lang=js&\"\nexport * from \"./vue-code-view.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"0c572a64\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticStyle:{\"width\":\"100%\",\"height\":\"100%\",\"overflow-y\":\"auto\"}},[_c('code-open',{attrs:{\"height\":700,\"title\":\"Conditional rendering\",\"slug\":\"oNXdbpB\",\"tab\":\"js,result\"}})],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('p',{staticClass:\"codepen\",style:(`height: ${_vm.height}%`),attrs:{\"data-theme-id\":_vm.theme,\"data-preview\":_vm.preview || null,\"data-editable\":_vm.editable || null,\"data-height\":_vm.height,\"data-default-tab\":_vm.tab,\"data-user\":_vm.user,\"data-slug-hash\":_vm.slug,\"data-pen-title\":_vm.title,\"data-embed-version\":_vm.version}},[_c('span',[_vm._v(\"See the Pen \"),_c('a',{attrs:{\"href\":_vm.href}},[_vm._v(_vm._s(_vm.title))]),_vm._v(\" by \"+_vm._s(_vm.name || _vm.user)+\" (\"),_c('a',{attrs:{\"href\":`https://codepen.io/${_vm.user}`}},[_vm._v(\"@\"+_vm._s(_vm.user))]),_vm._v(\") on \"),_c('a',{attrs:{\"href\":\"https://codepen.io\"}},[_vm._v(\"CodePen\")]),_vm._v(\".\")])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <p\n      class=\"codepen\"\n      :data-theme-id=\"theme\"\n      :data-preview=\"preview || null\"\n      :data-editable=\"editable || null\"\n      :data-height=\"height\"\n      :data-default-tab=\"tab\"\n      :data-user=\"user\"\n      :data-slug-hash=\"slug\"\n      :data-pen-title=\"title\"\n      :data-embed-version=\"version\"\n      :style=\"`height: ${height}%`\"\n  >\n    <span\n    >See the Pen <a :href=\"href\">{{ title }}</a> by {{ name || user }} (<a\n        :href=\"`https://codepen.io/${user}`\"\n    >@{{ user }}</a\n    >) on <a href=\"https://codepen.io\">CodePen</a>.</span\n    >\n  </p>\n</template>\n\n<script>\nexport default {\n  props: {\n    title: {\n      type: String,\n      default: null,\n      required: true,\n    },\n\n    slug: {\n      type: String,\n      default: null,\n      required: true,\n    },\n\n    tab: {\n      type: String,\n      default: \"result\",\n    },\n\n    team: {\n      type: Boolean,\n      default: true,\n    },\n\n    user: {\n      type: String,\n      default: \"Vue\",\n    },\n\n    name: {\n      type: String,\n      default: null,\n    },\n\n    height: {\n      type: Number,\n      default: 300,\n    },\n\n    theme: {\n      type: String,\n      default: \"39028\",\n    },\n\n    preview: {\n      type: Boolean,\n      default: true,\n    },\n\n    editable: {\n      type: Boolean,\n      default: true,\n    },\n\n    version: {\n      type: String,\n      default: null,\n    },\n  },\n  mounted() {\n    const codepenScript = document.createElement(\"script\");\n    codepenScript.setAttribute(\n        \"src\",\n        \"https://static.codepen.io/assets/embed/ei.js\"\n    );\n    codepenScript.async = true;\n    this.$el.appendChild(codepenScript);\n  },\n  computed: {\n    href() {\n      return `https://codepen.io/${this.team ? \"team\" : \"\"}${this.user}/pen/${\n          this.slug\n      }`;\n    },\n  },\n};\n</script>\n\n<style lang=\"less\">\n.codepen {\n  box-sizing: border-box;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border: 2px solid;\n  margin: 1em 0;\n  padding: 1em;\n}\n</style>\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./codeOpen.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./codeOpen.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./codeOpen.vue?vue&type=template&id=19a6d154&\"\nimport script from \"./codeOpen.vue?vue&type=script&lang=js&\"\nexport * from \"./codeOpen.vue?vue&type=script&lang=js&\"\nimport style0 from \"./codeOpen.vue?vue&type=style&index=0&id=19a6d154&prod&lang=less&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\r\n  <div style=\"width: 100%;height: 100%;overflow-y: auto\">\r\n    <!-- slug是codeopen上对应的url  tab是需要显示的tab -->\r\n    <code-open :height=\"700\" title=\"Conditional rendering\" slug=\"oNXdbpB\" tab=\"js,result\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport CodeOpen from \"@/components/codePen/codeOpen\";\r\nexport default {\r\n  name: \"html-code-view\",\r\n  components: {\r\n    CodeOpen\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./html-code-view.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./html-code-view.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./html-code-view.vue?vue&type=template&id=734635b6&scoped=true&\"\nimport script from \"./html-code-view.vue?vue&type=script&lang=js&\"\nexport * from \"./html-code-view.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"734635b6\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{attrs:{\"id\":\"chatgpt\"}},[_c('div',{staticClass:\"top\"},[_c('span',{staticClass:\"title1\"},[_vm._v(\"key：\")]),_c('el-input',{staticClass:\"input\",attrs:{\"placeholder\":\"请输入key\"},model:{value:(_vm.keyVal),callback:function ($$v) {_vm.keyVal=$$v},expression:\"keyVal\"}}),_c('span',{staticClass:\"title1\"},[_vm._v(\"问题：\")]),_c('el-input',{staticClass:\"input\",attrs:{\"type\":\"textarea\",\"rows\":2,\"placeholder\":\"请输入问题，人工智能将会为你回答问题\"},model:{value:(_vm.textarea),callback:function ($$v) {_vm.textarea=$$v},expression:\"textarea\"}})],1),_c('div',{staticClass:\"center\"},[_c('el-button',{on:{\"click\":_vm.sendTheProblem}},[_vm._v(\"提交\")])],1),_c('div',{staticClass:\"bottom\"},[_c('v-md-editor',{staticStyle:{\"max-height\":\"100vh\"},attrs:{\"left-toolbar\":\"fullscreen toc\",\"right-toolbar\":\"\",\"include-level\":[1, 2, 3, 4]},model:{value:(_vm.result),callback:function ($$v) {_vm.result=$$v},expression:\"result\"}})],1)])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div id=\"chatgpt\">\n    <div class=\"top\">\n      <span class=\"title1\">key：</span>\n      <el-input class=\"input\" placeholder=\"请输入key\" v-model=\"keyVal\">\n      </el-input>\n      <span class=\"title1\">问题：</span>\n      <el-input\n        class=\"input\"\n        type=\"textarea\"\n        :rows=\"2\"\n        placeholder=\"请输入问题，人工智能将会为你回答问题\"\n        v-model=\"textarea\"\n      >\n      </el-input>\n    </div>\n    <div class=\"center\">\n      <el-button @click=\"sendTheProblem\">提交</el-button>\n    </div>\n    <div class=\"bottom\">\n      <!-- <el-input\n        class=\"input\"\n        type=\"textarea\"\n        :rows=\"10\"\n        placeholder=\"结果\"\n        v-model=\"result\"\n      >\n      </el-input> -->\n      <v-md-editor\n        left-toolbar=\"fullscreen toc\"\n        right-toolbar=\"\"\n        :include-level=\"[1, 2, 3, 4]\"\n        v-model=\"result\"\n        style=\"max-height: 100vh\"\n      ></v-md-editor>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"chatgpt\",\n  data() {\n    return {\n      textarea: \"\",\n      result: \"\",\n      keyVal: \"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\",\n    };\n  },\n  methods: {\n    sendTheProblem() {\n      this.getChat(this.textarea);\n    },\n    getChat(val) {\n      let loading = this.$loading({\n        lock: true,\n        text: \"Loading\",\n        spinner: \"el-icon-loading\",\n        background: \"rgba(0, 0, 0, 0.7)\",\n      });\n      let myHeaders = new Headers();\n      myHeaders.append(\"Authorization\", `Bearer ${this.keyVal}`);\n      myHeaders.append(\"Content-Type\", \"application/json\");\n      myHeaders.append(\"Accept\", \"*/*\");\n      myHeaders.append(\"Host\", \"api.openai.com\");\n      myHeaders.append(\"Connection\", \"keep-alive\");\n      let raw = JSON.stringify({\n        model: \"gpt-3.5-turbo\",\n        messages:[\n        {\"role\": \"user\", \"content\": val},\n    ],\n        user:'org-httqfIp9EO7iKtNXX8qZjaO4'\n        // prompt: val,\n        // temperature: 0,\n        // max_tokens: 4000,\n      });\n\n      let requestOptions = {\n        method: \"POST\",\n        headers: myHeaders,\n        body: raw,\n        redirect: \"follow\",\n      };\n\n      fetch(\"https://api.openai.com/v1/chat/completions\", requestOptions)\n        .then((response) => response.text())\n        .then((result) => {\n          loading.close();\n          if (!JSON.parse(result).error) {\n              this.result = JSON.parse(result).choices[0].message.content.trimStart();\n          } else {\n            this.$message({\n              showClose: true,\n              message: JSON.parse(result).error.message,\n              type: \"error\",\n            });\n          }\n        })\n        .catch((error) => {\n          loading.close();\n          this.$message({\n              showClose: true,\n              message: '获取失败',\n              type: \"error\",\n            });\n          console.log(error);\n        });\n    },\n  },\n};\n</script>\n\n<style lang=\"less\" scoped>\n#chatgpt {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n  padding: 15px;\n  flex-wrap: wrap;\n  .top,\n  .center,\n  .bottom {\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-wrap: wrap;\n  }\n  .top {\n    height: 20%;\n  }\n  .input {\n    width: 93%;\n  }\n}\n/deep/ .v-note-wrapper {\n  padding: 0;\n  margin: 0;\n  max-width: none;\n}\n\n//\n/deep/ .v-md-textarea-editor {\n  display: none;\n}\n\n/deep/ .v-md-editor__editor-wrapper {\n  display: none;\n}\n</style>\n\n\n\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./chatgpt.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./chatgpt.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./chatgpt.vue?vue&type=template&id=7b2a23bd&scoped=true&\"\nimport script from \"./chatgpt.vue?vue&type=script&lang=js&\"\nexport * from \"./chatgpt.vue?vue&type=script&lang=js&\"\nimport style0 from \"./chatgpt.vue?vue&type=style&index=0&id=7b2a23bd&prod&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"7b2a23bd\",\n  null\n  \n)\n\nexport default component.exports","<template>\r\n  <div id=\"main\">\r\n    <el-container class=\"contain\">\r\n      <split v-model=\"offset\" min=\"0\">\r\n        <div style=\"height: 100%\" slot=\"left\">\r\n          <el-aside width=\"auto\">\r\n            <left-menu @sendInfo=\"sendInfo\"></left-menu>\r\n          </el-aside>\r\n        </div>\r\n        <div slot=\"right\" style=\"height: 100%; padding: 0\">\r\n          <el-main\r\n            v-if=\"info.startsWith('http')\"\r\n            style=\"padding: 0; height: 100%; overflow: hidden\"\r\n          >\r\n            <iframe\r\n              id=\"iframe\"\r\n              :src=\"info\"\r\n              width=\"100%\"\r\n              height=\"100%\"\r\n              frameborder=\"0\"\r\n            ></iframe>\r\n          </el-main>\r\n          <el-main\r\n            v-show=\"info.startsWith('a-')\"\r\n            style=\"padding: 0; height: 100%; overflow: auto\"\r\n          >\r\n            <div style=\"padding: 20px\">\r\n              <note :info=\"info\"></note>\r\n            </div>\r\n          </el-main>\r\n          <el-main\r\n            v-show=\"info === 'b-vue代码'\"\r\n            style=\"padding: 0; height: 100%; overflow: auto\"\r\n          >\r\n            <vue-code-view></vue-code-view>\r\n          </el-main>\r\n          <el-main\r\n            v-show=\"info === 'b-html代码'\"\r\n            style=\"padding: 0; height: 100%; overflow: auto\"\r\n          >\r\n            <html-code-view></html-code-view>\r\n          </el-main>\r\n          <el-main\r\n            v-show=\"info === 'chatgpt'\"\r\n            style=\"padding: 0; height: 100%; overflow: auto\"\r\n          >\r\n            <chatgpt></chatgpt>\r\n          </el-main>\r\n        </div>\r\n      </split>\r\n    </el-container>\r\n  </div>\r\n</template>\r\n<script>\r\nimport LeftMenu from \"@/components/menu/left-menu\";\r\nimport NoIframe from \"@/components/menu/noIframe\";\r\nimport Note from \"@/components/note/Note\";\r\nimport VueCodeView from \"@/components/codeView/vue-code-view\";\r\nimport HtmlCodeView from \"@/components/codeView/html-code-view\";\r\nimport Chatgpt from \"@/components/chatgpt/chatgpt\";\r\n\r\nexport default {\r\n  name: \"index\",\r\n  data() {\r\n    return {\r\n      info: \"https://v2.cn.vuejs.org/v2/guide/\",\r\n      offset: 0.18,\r\n    };\r\n  },\r\n  components: {\r\n    Chatgpt,\r\n    HtmlCodeView,\r\n    VueCodeView,\r\n    Note,\r\n    LeftMenu,\r\n  },\r\n  methods: {\r\n    sendInfo(info) {\r\n      if (NoIframe.includes(info)) {\r\n        window.open(info);\r\n      } else {\r\n        this.info = info;\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped lang=\"less\">\r\n#main {\r\n  width: 100%;\r\n  height: 100%;\r\n  .contain {\r\n    width: 100%;\r\n    height: 100%;\r\n\r\n    /deep/ .el-main {\r\n      overflow: auto;\r\n    }\r\n\r\n    /deep/ .el-aside {\r\n      height: 100%;\r\n    }\r\n  }\r\n}\r\n</style>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=9732b022&scoped=true&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&id=9732b022&prod&scoped=true&lang=less&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"9732b022\",\n  null\n  \n)\n\nexport default component.exports","var map = {\n\t\"./UI组件.png\": 3827,\n\t\"./Vue官方文档.png\": 3004,\n\t\"./http.png\": 761,\n\t\"./js相关.png\": 3366,\n\t\"./人工智能.png\": 3295,\n\t\"./代码测试.png\": 5008,\n\t\"./可视化组件库.png\": 3037,\n\t\"./图标网站.png\": 4588,\n\t\"./实用工具.png\": 7040,\n\t\"./常用布局+布局生成器.png\": 6769,\n\t\"./技术文档.png\": 255,\n\t\"./时间处理.png\": 7281,\n\t\"./笔记.png\": 2992,\n\t\"./表单生成设计器.png\": 4547\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 6680;"],"names":["render","_vm","this","_c","_self","attrs","staticClass","model","value","offset","callback","$$v","expression","staticStyle","slot","on","sendInfo","info","startsWith","_e","directives","name","rawName","staticRenderFns","searchList","index","activeIndex","selectList","_l","currentList","item","key","require","_v","_s","childrenList","list","ind","data","url","mounted","setTimeout","computed","val","vals","toLowerCase","includes","methods","i","ite","component","listName","activeName","newNotes","title","content","$set","props","type","default","Notes","watch","message","showClose","duration","style","height","theme","preview","editable","tab","user","slug","version","href","required","team","codepenScript","components","CodeOpen","keyVal","textarea","sendTheProblem","result","getChat","lock","text","spinner","background","myHeaders","messages","method","headers","body","redirect","fetch","then","loading","catch","console","Chatgpt","HtmlCodeView","VueCodeView","Note","LeftMenu","window","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports"],"sourceRoot":""}